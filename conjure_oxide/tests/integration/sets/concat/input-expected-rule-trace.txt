
Model before rewriting:

letting a be {1,2,3}
letting b be {2,3}
letting c be {2}

such that

(c subset (b intersect a))

--

Successful Tranformation: 
c, 
~~> substitute_value_lettings [5000; Base]
{2}


--

Successful Tranformation: 
b, 
~~> substitute_value_lettings [5000; Base]
{2,3}


--

Successful Tranformation: 
({2} subset ({2,3} intersect a)), 
~~> subset_to_subset_eq_neq [8700; Base]
and([({2} subsetEq ({2,3} intersect a)),({2} != ({2,3} intersect a));int(1..)])


--

Successful Tranformation: 
and([({2} subsetEq ({2,3} intersect a)),({2} != ({2,3} intersect a));int(1..)]), 
~~> partial_evaluator [9000; Base]
({2} subsetEq ({2,3} intersect a)),
({2} != ({2,3} intersect a))


--

Successful Tranformation: 
({2} != ({2,3} intersect a)), 
~~> neq_not_eq_sets [8700; Base]
Not((({2,3} intersect a) = {2}))


--

Successful Tranformation: 
(({2,3} intersect a) = {2}), 
~~> eq_to_subset_eq [8800; Base]
and([(({2,3} intersect a) subsetEq {2}),({2} subsetEq ({2,3} intersect a));int(1..)])


--

Successful Tranformation: 
Not(and([(({2,3} intersect a) subsetEq {2}),({2} subsetEq ({2,3} intersect a));int(1..)])), 
~~> distribute_not_over_and [8400; Base]
or([Not((({2,3} intersect a) subsetEq {2})),Not(({2} subsetEq ({2,3} intersect a)));int(1..)])


--

Successful Tranformation: 
a, 
~~> substitute_value_lettings [5000; Base]
{1,2,3}


--

Successful Tranformation: 
({2} subsetEq ({2,3} intersect {1,2,3})), 
~~> subseteq_intersect [8700; Base]
and([({2} subsetEq {2,3}),({2} subsetEq {1,2,3});int(1..)])


--

Successful Tranformation: 
and([({2} subsetEq {2,3}),({2} subsetEq {1,2,3});int(1..)]),
or([Not((({2,3} intersect a) subsetEq {2})),Not(({2} subsetEq ({2,3} intersect a)));int(1..)]), 
~~> partial_evaluator [9000; Base]
({2} subsetEq {2,3}),
({2} subsetEq {1,2,3}),
or([Not((({2,3} intersect a) subsetEq {2})),Not(({2} subsetEq ({2,3} intersect a)));int(1..)])


--

Successful Tranformation: 
a, 
~~> substitute_value_lettings [5000; Base]
{1,2,3}


--

Successful Tranformation: 
a, 
~~> substitute_value_lettings [5000; Base]
{1,2,3}


--

Successful Tranformation: 
({2} subsetEq ({2,3} intersect {1,2,3})), 
~~> subseteq_intersect [8700; Base]
and([({2} subsetEq {2,3}),({2} subsetEq {1,2,3});int(1..)])


--

Successful Tranformation: 
Not(and([({2} subsetEq {2,3}),({2} subsetEq {1,2,3});int(1..)])), 
~~> distribute_not_over_and [8400; Base]
or([Not(({2} subsetEq {2,3})),Not(({2} subsetEq {1,2,3}));int(1..)])


--

Successful Tranformation: 
or([Not((({2,3} intersect {1,2,3}) subsetEq {2})),or([Not(({2} subsetEq {2,3})),Not(({2} subsetEq {1,2,3}));int(1..)]);int(1..)]), 
~~> normalise_associative_commutative [8900; Base]
or([Not((({2,3} intersect {1,2,3}) subsetEq {2})),Not(({2} subsetEq {2,3})),Not(({2} subsetEq {1,2,3}));int(1..)])


--

Successful Tranformation: 
Not((({2,3} intersect {1,2,3}) subsetEq {2})), 
~~> flatten_generic [4200; Minion]
Not(__0)
new variables:
  find __0: bool
new constraints:
  __0 =aux (({2,3} intersect {1,2,3}) subsetEq {2})

--

Successful Tranformation: 
__0 =aux (({2,3} intersect {1,2,3}) subsetEq {2}), 
~~> bool_eq_to_reify [4400; Minion]
Reify((({2,3} intersect {1,2,3}) subsetEq {2}), __0)


--

Successful Tranformation: 
Not(({2} subsetEq {2,3})), 
~~> flatten_generic [4200; Minion]
Not(__1)
new variables:
  find __1: bool
new constraints:
  __1 =aux ({2} subsetEq {2,3})

--

Successful Tranformation: 
__1 =aux ({2} subsetEq {2,3}), 
~~> bool_eq_to_reify [4400; Minion]
Reify(({2} subsetEq {2,3}), __1)


--

Successful Tranformation: 
Not(({2} subsetEq {1,2,3})), 
~~> flatten_generic [4200; Minion]
Not(__2)
new variables:
  find __2: bool
new constraints:
  __2 =aux ({2} subsetEq {1,2,3})

--

Successful Tranformation: 
__2 =aux ({2} subsetEq {1,2,3}), 
~~> bool_eq_to_reify [4400; Minion]
Reify(({2} subsetEq {1,2,3}), __2)


--

Successful Tranformation: 
Not(__0), 
~~> not_literal_to_wliteral [4100; Minion]
WatchedLiteral(__0,false)


--

Successful Tranformation: 
Not(__1), 
~~> not_literal_to_wliteral [4100; Minion]
WatchedLiteral(__1,false)


--

Successful Tranformation: 
Not(__2), 
~~> not_literal_to_wliteral [4100; Minion]
WatchedLiteral(__2,false)


--


Final model:

letting a be {1,2,3}
letting b be {2,3}
letting c be {2}
find __0: bool
find __1: bool
find __2: bool

such that

({2} subsetEq {2,3}),
({2} subsetEq {1,2,3}),
or([WatchedLiteral(__0,false),WatchedLiteral(__1,false),WatchedLiteral(__2,false);int(1..)]),
Reify((({2,3} intersect {1,2,3}) subsetEq {2}), __0),
Reify(({2} subsetEq {2,3}), __1),
Reify(({2} subsetEq {1,2,3}), __2)

