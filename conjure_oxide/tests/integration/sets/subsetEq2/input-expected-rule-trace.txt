
Model before rewriting:

letting a be {2,3}
letting b be {1,2}
find c: set of (int(1..3))

such that

and([(c subsetEq b),Not((c subsetEq a));int(1..2)])

--

Successful Tranformation: 
b, 
~~> substitute_value_lettings [5000; Base]
{1,2}


--

Successful Tranformation: 
a, 
~~> substitute_value_lettings [5000; Base]
{2,3}


--

Successful Tranformation: 
Not((c subsetEq {2,3})), 
~~> flatten_generic [4200; Minion]
Not(__0)
new variables:
  find __0: bool
new constraints:
  __0 =aux (c subsetEq {2,3})

--

Successful Tranformation: 
__0 =aux (c subsetEq {2,3}), 
~~> bool_eq_to_reify [4400; Minion]
Reify((c subsetEq {2,3}), __0)


--

Successful Tranformation: 
Not(__0), 
~~> not_literal_to_wliteral [4100; Minion]
WatchedLiteral(__0,false)


--

Successful Tranformation: 
and([(c subsetEq {1,2}),WatchedLiteral(__0,false);int(1..2)]), 
~~> matrix_to_list [2000; Base]
and([(c subsetEq {1,2}),WatchedLiteral(__0,false);int(1..)])


--

Successful Tranformation: 
and([(c subsetEq {1,2}),WatchedLiteral(__0,false);int(1..)]),
Reify((c subsetEq {2,3}), __0), 
~~> partial_evaluator [9000; Base]
(c subsetEq {1,2}),
WatchedLiteral(__0,false),
Reify((c subsetEq {2,3}), __0)


--


Final model:

letting a be {2,3}
letting b be {1,2}
find c: set of (int(1..3))
find __0: bool

such that

(c subsetEq {1,2}),
WatchedLiteral(__0,false),
Reify((c subsetEq {2,3}), __0)

