Model before rewriting:

letting a be {2,3}
letting b be {1,2}
letting c be {2}

such that

(c = (a intersect b))

--

c, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{2} 

--

{2}, 
   ~~> constant_evaluator ([("Constant", 9001)]) 
Set([Int(2)]) 

--

a, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{2,3} 

--

{2,3}, 
   ~~> constant_evaluator ([("Constant", 9001)]) 
Set([Int(2), Int(3)]) 

--

(Set([Int(2)]) = (Set([Int(2), Int(3)]) intersect b)), 
   ~~> eq_to_subset_eq ([("Base", 8800)]) 
and([(Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect b)),((Set([Int(2), Int(3)]) intersect b) subsetEq Set([Int(2)]));int(1..)]) 

--

and([(Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect b)),((Set([Int(2), Int(3)]) intersect b) subsetEq Set([Int(2)]));int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect b)),
((Set([Int(2), Int(3)]) intersect b) subsetEq Set([Int(2)])) 

--

b, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{1,2} 

--

{1,2}, 
   ~~> constant_evaluator ([("Constant", 9001)]) 
Set([Int(1), Int(2)]) 

--

(Set([Int(2)]) subsetEq (Set([Int(2), Int(3)]) intersect Set([Int(1), Int(2)]))), 
   ~~> subseteq_intersect ([("Base", 8700)]) 
and([(Set([Int(2)]) subsetEq Set([Int(2), Int(3)])),(Set([Int(2)]) subsetEq Set([Int(1), Int(2)]));int(1..)]) 

--

and([(Set([Int(2)]) subsetEq Set([Int(2), Int(3)])),(Set([Int(2)]) subsetEq Set([Int(1), Int(2)]));int(1..)]),
((Set([Int(2), Int(3)]) intersect b) subsetEq Set([Int(2)])), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Set([Int(2)]) subsetEq Set([Int(2), Int(3)])),
(Set([Int(2)]) subsetEq Set([Int(1), Int(2)])),
((Set([Int(2), Int(3)]) intersect b) subsetEq Set([Int(2)])) 

--

b, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{1,2} 

--

{1,2}, 
   ~~> constant_evaluator ([("Constant", 9001)]) 
Set([Int(1), Int(2)]) 

--

Final model:

letting a be {2,3}
letting b be {1,2}
letting c be {2}

such that

(Set([Int(2)]) subsetEq Set([Int(2), Int(3)])),
(Set([Int(2)]) subsetEq Set([Int(1), Int(2)])),
((Set([Int(2), Int(3)]) intersect Set([Int(1), Int(2)])) subsetEq Set([Int(2)]))

