
Model before rewriting:

find x: int(1..50)
find y: int(1..50)

such that

(Sum([Sum([Sum([Sum([x,10;int(1..2)]),20;int(1..2)]),y;int(1..2)]),5;int(1..2)]) = 100)

--

Successful Tranformation: 
Sum([Sum([Sum([Sum([x,10;int(1..2)]),20;int(1..2)]),y;int(1..2)]),5;int(1..2)]), 
~~> normalise_associative_commutative [8900; Base]
Sum([x,10,20,y,5;int(1..2)])


--

Successful Tranformation: 
Sum([x,10,20,y,5;int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([x,10,20,y,5;int(1..)])


--

Successful Tranformation: 
Sum([x,10,20,y,5;int(1..)]), 
~~> partial_evaluator [9000; Base]
Sum([x,y,35;int(1..)])


--

Successful Tranformation: 
(Sum([x,y,35;int(1..)]) = 100), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([x, y, 35], 100),SumGeq([x, y, 35], 100);int(1..)])


--

Successful Tranformation: 
and([SumLeq([x, y, 35], 100),SumGeq([x, y, 35], 100);int(1..)]), 
~~> partial_evaluator [9000; Base]
SumLeq([x, y, 35], 100),
SumGeq([x, y, 35], 100)


--


Final model:

find x: int(1..50)
find y: int(1..50)

such that

SumLeq([x, y, 35], 100),
SumGeq([x, y, 35], 100)

