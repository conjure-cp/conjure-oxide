Model before rewriting:

find x: int(1..50)
find y: int(1..50)

such that

(Sum([Sum([Sum([Sum([x,10;int(1..2)]),20;int(1..2)]),y;int(1..2)]),5;int(1..2)]) = 100)

--

Sum([Sum([Sum([Sum([x,10;int(1..2)]),20;int(1..2)]),y;int(1..2)]),5;int(1..2)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([x,10,20,y,5;int(1..2)]) 

--

Sum([x,10,20,y,5;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([x,10,20,y,5;int(1..)]) 

--

Sum([x,10,20,y,5;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
Sum([x,y,35;int(1..)]) 

--

(Sum([x,y,35;int(1..)]) = 100), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([x, y, 35], 100),SumGeq([x, y, 35], 100);int(1..)]) 

--

and([SumLeq([x, y, 35], 100),SumGeq([x, y, 35], 100);int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
SumLeq([x, y, 35], 100),
SumGeq([x, y, 35], 100) 

--

Final model:

find x: int(1..50)
find y: int(1..50)

such that

SumLeq([x, y, 35], 100),
SumGeq([x, y, 35], 100)

