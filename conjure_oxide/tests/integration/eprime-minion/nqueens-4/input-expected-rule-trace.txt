
Model before rewriting:

find majorDiagonal: matrix indexed by [[int(0..3)]] of int(0..6)
find minorDiagonal: matrix indexed by [[int(0..3)]] of int(-3..3)
find row: matrix indexed by [[int(0..7)]] of int(0..7)

such that

and([and([(majorDiagonal[queen] = Sum([queen,row[queen];int(1..2)])),(minorDiagonal[queen] = (queen - row[queen]));int(1..2)]) | queen: int(0..3),]),
allDiff(row),
allDiff(majorDiagonal),
allDiff(minorDiagonal)

--

Successful Tranformation: 
row, 
~~> select_representation [8000; Base]
row#matrix_to_atom
new variables:
  find row#matrix_to_atom_0: int(0..7)
  find row#matrix_to_atom_1: int(0..7)
  find row#matrix_to_atom_2: int(0..7)
  find row#matrix_to_atom_3: int(0..7)
  find row#matrix_to_atom_4: int(0..7)
  find row#matrix_to_atom_5: int(0..7)
  find row#matrix_to_atom_6: int(0..7)
  find row#matrix_to_atom_7: int(0..7)

--

Successful Tranformation: 
majorDiagonal, 
~~> select_representation [8000; Base]
majorDiagonal#matrix_to_atom
new variables:
  find majorDiagonal#matrix_to_atom_0: int(0..6)
  find majorDiagonal#matrix_to_atom_1: int(0..6)
  find majorDiagonal#matrix_to_atom_2: int(0..6)
  find majorDiagonal#matrix_to_atom_3: int(0..6)

--

Successful Tranformation: 
minorDiagonal, 
~~> select_representation [8000; Base]
minorDiagonal#matrix_to_atom
new variables:
  find minorDiagonal#matrix_to_atom_0: int(-3..3)
  find minorDiagonal#matrix_to_atom_1: int(-3..3)
  find minorDiagonal#matrix_to_atom_2: int(-3..3)
  find minorDiagonal#matrix_to_atom_3: int(-3..3)

--

Successful Tranformation: 
allDiff(row#matrix_to_atom), 
~~> matrix_ref_to_atom [2000; Base]
allDiff([row#matrix_to_atom_0,row#matrix_to_atom_1,row#matrix_to_atom_2,row#matrix_to_atom_3,row#matrix_to_atom_4,row#matrix_to_atom_5,row#matrix_to_atom_6,row#matrix_to_atom_7;int(1..)])


--

Successful Tranformation: 
allDiff([row#matrix_to_atom_0,row#matrix_to_atom_1,row#matrix_to_atom_2,row#matrix_to_atom_3,row#matrix_to_atom_4,row#matrix_to_atom_5,row#matrix_to_atom_6,row#matrix_to_atom_7;int(1..)]), 
~~> introduce_flat_alldiff [4200; Minion]
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7])


--

Successful Tranformation: 
allDiff(majorDiagonal#matrix_to_atom), 
~~> matrix_ref_to_atom [2000; Base]
allDiff([majorDiagonal#matrix_to_atom_0,majorDiagonal#matrix_to_atom_1,majorDiagonal#matrix_to_atom_2,majorDiagonal#matrix_to_atom_3;int(1..)])


--

Successful Tranformation: 
allDiff([majorDiagonal#matrix_to_atom_0,majorDiagonal#matrix_to_atom_1,majorDiagonal#matrix_to_atom_2,majorDiagonal#matrix_to_atom_3;int(1..)]), 
~~> introduce_flat_alldiff [4200; Minion]
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3])


--

Successful Tranformation: 
allDiff(minorDiagonal#matrix_to_atom), 
~~> matrix_ref_to_atom [2000; Base]
allDiff([minorDiagonal#matrix_to_atom_0,minorDiagonal#matrix_to_atom_1,minorDiagonal#matrix_to_atom_2,minorDiagonal#matrix_to_atom_3;int(1..)])


--

Successful Tranformation: 
allDiff([minorDiagonal#matrix_to_atom_0,minorDiagonal#matrix_to_atom_1,minorDiagonal#matrix_to_atom_2,minorDiagonal#matrix_to_atom_3;int(1..)]), 
~~> introduce_flat_alldiff [4200; Minion]
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3])


--

Successful Tranformation: 
[and([(majorDiagonal[queen] = Sum([queen,row[queen];int(1..2)])),(minorDiagonal[queen] = (queen - row[queen]));int(1..2)]) | queen: int(0..3),], 
~~> expand_comprehension [1000; Base]
[and([(majorDiagonal[0] = Sum([0,row[0];int(1..2)])),(minorDiagonal[0] = (0 - row[0]));int(1..2)]),and([(majorDiagonal[1] = Sum([1,row[1];int(1..2)])),(minorDiagonal[1] = (1 - row[1]));int(1..2)]),and([(majorDiagonal[2] = Sum([2,row[2];int(1..2)])),(minorDiagonal[2] = (2 - row[2]));int(1..2)]),and([(majorDiagonal[3] = Sum([3,row[3];int(1..2)])),(minorDiagonal[3] = (3 - row[3]));int(1..2)]);int(1..)]


--

Successful Tranformation: 
and([and([(majorDiagonal[0] = Sum([0,row[0];int(1..2)])),(minorDiagonal[0] = (0 - row[0]));int(1..2)]),and([(majorDiagonal[1] = Sum([1,row[1];int(1..2)])),(minorDiagonal[1] = (1 - row[1]));int(1..2)]),and([(majorDiagonal[2] = Sum([2,row[2];int(1..2)])),(minorDiagonal[2] = (2 - row[2]));int(1..2)]),and([(majorDiagonal[3] = Sum([3,row[3];int(1..2)])),(minorDiagonal[3] = (3 - row[3]));int(1..2)]);int(1..)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]), 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal[0] = Sum([0,row[0];int(1..2)])),(minorDiagonal[0] = (0 - row[0]));int(1..2)]),
and([(majorDiagonal[1] = Sum([1,row[1];int(1..2)])),(minorDiagonal[1] = (1 - row[1]));int(1..2)]),
and([(majorDiagonal[2] = Sum([2,row[2];int(1..2)])),(minorDiagonal[2] = (2 - row[2]));int(1..2)]),
and([(majorDiagonal[3] = Sum([3,row[3];int(1..2)])),(minorDiagonal[3] = (3 - row[3]));int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3])


--

Successful Tranformation: 
(0 - row[0]), 
~~> minus_to_sum [8400; Base]
Sum([0,-(row[0]);int(1..)])


--

Successful Tranformation: 
(1 - row[1]), 
~~> minus_to_sum [8400; Base]
Sum([1,-(row[1]);int(1..)])


--

Successful Tranformation: 
(2 - row[2]), 
~~> minus_to_sum [8400; Base]
Sum([2,-(row[2]);int(1..)])


--

Successful Tranformation: 
(3 - row[3]), 
~~> minus_to_sum [8400; Base]
Sum([3,-(row[3]);int(1..)])


--

Successful Tranformation: 
majorDiagonal, 
~~> select_representation [8000; Base]
majorDiagonal#matrix_to_atom


--

Successful Tranformation: 
row, 
~~> select_representation [8000; Base]
row#matrix_to_atom


--

Successful Tranformation: 
minorDiagonal, 
~~> select_representation [8000; Base]
minorDiagonal#matrix_to_atom


--

Successful Tranformation: 
row, 
~~> select_representation [8000; Base]
row#matrix_to_atom


--

Successful Tranformation: 
majorDiagonal, 
~~> select_representation [8000; Base]
majorDiagonal#matrix_to_atom


--

Successful Tranformation: 
row, 
~~> select_representation [8000; Base]
row#matrix_to_atom


--

Successful Tranformation: 
minorDiagonal, 
~~> select_representation [8000; Base]
minorDiagonal#matrix_to_atom


--

Successful Tranformation: 
row, 
~~> select_representation [8000; Base]
row#matrix_to_atom


--

Successful Tranformation: 
majorDiagonal, 
~~> select_representation [8000; Base]
majorDiagonal#matrix_to_atom


--

Successful Tranformation: 
row, 
~~> select_representation [8000; Base]
row#matrix_to_atom


--

Successful Tranformation: 
minorDiagonal, 
~~> select_representation [8000; Base]
minorDiagonal#matrix_to_atom


--

Successful Tranformation: 
row, 
~~> select_representation [8000; Base]
row#matrix_to_atom


--

Successful Tranformation: 
majorDiagonal, 
~~> select_representation [8000; Base]
majorDiagonal#matrix_to_atom


--

Successful Tranformation: 
row, 
~~> select_representation [8000; Base]
row#matrix_to_atom


--

Successful Tranformation: 
minorDiagonal, 
~~> select_representation [8000; Base]
minorDiagonal#matrix_to_atom


--

Successful Tranformation: 
row, 
~~> select_representation [8000; Base]
row#matrix_to_atom


--

Successful Tranformation: 
majorDiagonal#matrix_to_atom[0], 
~~> index_to_bubble [6000; Bubble]
{majorDiagonal#matrix_to_atom[0] @ and([__inDomain(0,int(0..3));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(0,int(0..3));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({majorDiagonal#matrix_to_atom[0] @ true} = Sum([0,row#matrix_to_atom[0];int(1..2)])), 
~~> bubble_up [8900; Bubble]
{(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),true;int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)]));int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)]))


--

Successful Tranformation: 
row#matrix_to_atom[0], 
~~> index_to_bubble [6000; Bubble]
{row#matrix_to_atom[0] @ and([__inDomain(0,int(0..7));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(0,int(0..7));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
[0,{row#matrix_to_atom[0] @ true};int(1..2)], 
~~> bubble_up [8900; Bubble]
{[0,row#matrix_to_atom[0];int(1..2)] @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
Sum({[0,row#matrix_to_atom[0];int(1..2)] @ true}), 
~~> bubble_up [8900; Bubble]
{Sum([0,row#matrix_to_atom[0];int(1..2)]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
(majorDiagonal#matrix_to_atom[0] = {Sum([0,row#matrix_to_atom[0];int(1..2)]) @ true}), 
~~> bubble_up [8900; Bubble]
{(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),true;int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)]));int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)]))


--

Successful Tranformation: 
minorDiagonal#matrix_to_atom[0], 
~~> index_to_bubble [6000; Bubble]
{minorDiagonal#matrix_to_atom[0] @ and([__inDomain(0,int(0..3));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(0,int(0..3));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({minorDiagonal#matrix_to_atom[0] @ true} = Sum([0,-(row#matrix_to_atom[0]);int(1..)])), 
~~> bubble_up [8900; Bubble]
{(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)])),true;int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)]));int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)]))


--

Successful Tranformation: 
row#matrix_to_atom[0], 
~~> index_to_bubble [6000; Bubble]
{row#matrix_to_atom[0] @ and([__inDomain(0,int(0..7));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(0,int(0..7));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
-({row#matrix_to_atom[0] @ true}), 
~~> bubble_up [8900; Bubble]
{-(row#matrix_to_atom[0]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
[0,{-(row#matrix_to_atom[0]) @ true};int(1..)], 
~~> bubble_up [8900; Bubble]
{[0,-(row#matrix_to_atom[0]);int(1..)] @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
Sum({[0,-(row#matrix_to_atom[0]);int(1..)] @ true}), 
~~> bubble_up [8900; Bubble]
{Sum([0,-(row#matrix_to_atom[0]);int(1..)]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
(minorDiagonal#matrix_to_atom[0] = {Sum([0,-(row#matrix_to_atom[0]);int(1..)]) @ true}), 
~~> bubble_up [8900; Bubble]
{(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)])),true;int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)]));int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)]))


--

Successful Tranformation: 
majorDiagonal#matrix_to_atom[1], 
~~> index_to_bubble [6000; Bubble]
{majorDiagonal#matrix_to_atom[1] @ and([__inDomain(1,int(0..3));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(1,int(0..3));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({majorDiagonal#matrix_to_atom[1] @ true} = Sum([1,row#matrix_to_atom[1];int(1..2)])), 
~~> bubble_up [8900; Bubble]
{(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),true;int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)]));int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)]))


--

Successful Tranformation: 
row#matrix_to_atom[1], 
~~> index_to_bubble [6000; Bubble]
{row#matrix_to_atom[1] @ and([__inDomain(1,int(0..7));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(1,int(0..7));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
[1,{row#matrix_to_atom[1] @ true};int(1..2)], 
~~> bubble_up [8900; Bubble]
{[1,row#matrix_to_atom[1];int(1..2)] @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
Sum({[1,row#matrix_to_atom[1];int(1..2)] @ true}), 
~~> bubble_up [8900; Bubble]
{Sum([1,row#matrix_to_atom[1];int(1..2)]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
(majorDiagonal#matrix_to_atom[1] = {Sum([1,row#matrix_to_atom[1];int(1..2)]) @ true}), 
~~> bubble_up [8900; Bubble]
{(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),true;int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)]));int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)]))


--

Successful Tranformation: 
minorDiagonal#matrix_to_atom[1], 
~~> index_to_bubble [6000; Bubble]
{minorDiagonal#matrix_to_atom[1] @ and([__inDomain(1,int(0..3));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(1,int(0..3));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({minorDiagonal#matrix_to_atom[1] @ true} = Sum([1,-(row#matrix_to_atom[1]);int(1..)])), 
~~> bubble_up [8900; Bubble]
{(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)])),true;int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)]));int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)]))


--

Successful Tranformation: 
row#matrix_to_atom[1], 
~~> index_to_bubble [6000; Bubble]
{row#matrix_to_atom[1] @ and([__inDomain(1,int(0..7));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(1,int(0..7));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
-({row#matrix_to_atom[1] @ true}), 
~~> bubble_up [8900; Bubble]
{-(row#matrix_to_atom[1]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
[1,{-(row#matrix_to_atom[1]) @ true};int(1..)], 
~~> bubble_up [8900; Bubble]
{[1,-(row#matrix_to_atom[1]);int(1..)] @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
Sum({[1,-(row#matrix_to_atom[1]);int(1..)] @ true}), 
~~> bubble_up [8900; Bubble]
{Sum([1,-(row#matrix_to_atom[1]);int(1..)]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
(minorDiagonal#matrix_to_atom[1] = {Sum([1,-(row#matrix_to_atom[1]);int(1..)]) @ true}), 
~~> bubble_up [8900; Bubble]
{(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)])),true;int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)]));int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)]))


--

Successful Tranformation: 
majorDiagonal#matrix_to_atom[2], 
~~> index_to_bubble [6000; Bubble]
{majorDiagonal#matrix_to_atom[2] @ and([__inDomain(2,int(0..3));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(2,int(0..3));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({majorDiagonal#matrix_to_atom[2] @ true} = Sum([2,row#matrix_to_atom[2];int(1..2)])), 
~~> bubble_up [8900; Bubble]
{(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),true;int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)]));int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)]))


--

Successful Tranformation: 
row#matrix_to_atom[2], 
~~> index_to_bubble [6000; Bubble]
{row#matrix_to_atom[2] @ and([__inDomain(2,int(0..7));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(2,int(0..7));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
[2,{row#matrix_to_atom[2] @ true};int(1..2)], 
~~> bubble_up [8900; Bubble]
{[2,row#matrix_to_atom[2];int(1..2)] @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
Sum({[2,row#matrix_to_atom[2];int(1..2)] @ true}), 
~~> bubble_up [8900; Bubble]
{Sum([2,row#matrix_to_atom[2];int(1..2)]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
(majorDiagonal#matrix_to_atom[2] = {Sum([2,row#matrix_to_atom[2];int(1..2)]) @ true}), 
~~> bubble_up [8900; Bubble]
{(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),true;int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)]));int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)]))


--

Successful Tranformation: 
minorDiagonal#matrix_to_atom[2], 
~~> index_to_bubble [6000; Bubble]
{minorDiagonal#matrix_to_atom[2] @ and([__inDomain(2,int(0..3));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(2,int(0..3));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({minorDiagonal#matrix_to_atom[2] @ true} = Sum([2,-(row#matrix_to_atom[2]);int(1..)])), 
~~> bubble_up [8900; Bubble]
{(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)])),true;int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)]))


--

Successful Tranformation: 
row#matrix_to_atom[2], 
~~> index_to_bubble [6000; Bubble]
{row#matrix_to_atom[2] @ and([__inDomain(2,int(0..7));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(2,int(0..7));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
-({row#matrix_to_atom[2] @ true}), 
~~> bubble_up [8900; Bubble]
{-(row#matrix_to_atom[2]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
[2,{-(row#matrix_to_atom[2]) @ true};int(1..)], 
~~> bubble_up [8900; Bubble]
{[2,-(row#matrix_to_atom[2]);int(1..)] @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
Sum({[2,-(row#matrix_to_atom[2]);int(1..)] @ true}), 
~~> bubble_up [8900; Bubble]
{Sum([2,-(row#matrix_to_atom[2]);int(1..)]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
(minorDiagonal#matrix_to_atom[2] = {Sum([2,-(row#matrix_to_atom[2]);int(1..)]) @ true}), 
~~> bubble_up [8900; Bubble]
{(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)])),true;int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)]))


--

Successful Tranformation: 
majorDiagonal#matrix_to_atom[3], 
~~> index_to_bubble [6000; Bubble]
{majorDiagonal#matrix_to_atom[3] @ and([__inDomain(3,int(0..3));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(3,int(0..3));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({majorDiagonal#matrix_to_atom[3] @ true} = Sum([3,row#matrix_to_atom[3];int(1..2)])), 
~~> bubble_up [8900; Bubble]
{(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),true;int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)]));int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)]))


--

Successful Tranformation: 
row#matrix_to_atom[3], 
~~> index_to_bubble [6000; Bubble]
{row#matrix_to_atom[3] @ and([__inDomain(3,int(0..7));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(3,int(0..7));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
[3,{row#matrix_to_atom[3] @ true};int(1..2)], 
~~> bubble_up [8900; Bubble]
{[3,row#matrix_to_atom[3];int(1..2)] @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
Sum({[3,row#matrix_to_atom[3];int(1..2)] @ true}), 
~~> bubble_up [8900; Bubble]
{Sum([3,row#matrix_to_atom[3];int(1..2)]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
(majorDiagonal#matrix_to_atom[3] = {Sum([3,row#matrix_to_atom[3];int(1..2)]) @ true}), 
~~> bubble_up [8900; Bubble]
{(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),true;int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)]));int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)]))


--

Successful Tranformation: 
minorDiagonal#matrix_to_atom[3], 
~~> index_to_bubble [6000; Bubble]
{minorDiagonal#matrix_to_atom[3] @ and([__inDomain(3,int(0..3));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(3,int(0..3));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({minorDiagonal#matrix_to_atom[3] @ true} = Sum([3,-(row#matrix_to_atom[3]);int(1..)])), 
~~> bubble_up [8900; Bubble]
{(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)])),true;int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]))


--

Successful Tranformation: 
row#matrix_to_atom[3], 
~~> index_to_bubble [6000; Bubble]
{row#matrix_to_atom[3] @ and([__inDomain(3,int(0..7));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(3,int(0..7));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
-({row#matrix_to_atom[3] @ true}), 
~~> bubble_up [8900; Bubble]
{-(row#matrix_to_atom[3]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
[3,{-(row#matrix_to_atom[3]) @ true};int(1..)], 
~~> bubble_up [8900; Bubble]
{[3,-(row#matrix_to_atom[3]);int(1..)] @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
Sum({[3,-(row#matrix_to_atom[3]);int(1..)] @ true}), 
~~> bubble_up [8900; Bubble]
{Sum([3,-(row#matrix_to_atom[3]);int(1..)]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
(minorDiagonal#matrix_to_atom[3] = {Sum([3,-(row#matrix_to_atom[3]);int(1..)]) @ true}), 
~~> bubble_up [8900; Bubble]
{(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)])) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)])) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)])),true;int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)])),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
and([(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..)])


--

Successful Tranformation: 
and([(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..)]), 
~~> remove_unit_vector_and [8800; Base]
(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]))


--

Successful Tranformation: 
(minorDiagonal#matrix_to_atom[0] = Sum([0,-(row#matrix_to_atom[0]);int(1..)])), 
~~> flatten_eq [4200; Minion]
(__0 = __1)
new variables:
  find __0: int(-3..3)
  find __1: int(-7..0)
new constraints:
  __0 =aux minorDiagonal#matrix_to_atom[0]
  __1 =aux Sum([0,-(row#matrix_to_atom[0]);int(1..)])

--

Successful Tranformation: 
__1 =aux Sum([0,-(row#matrix_to_atom[0]);int(1..)]), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([FlatWeightedSumLeq([1, -1],[0, __2],__1),FlatWeightedSumGeq([1, -1],[0, __2],__1);int(1..)])
new variables:
  find __2: int(0..7)
new constraints:
  __2 =aux row#matrix_to_atom[0]

--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)]));int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
and([FlatWeightedSumLeq([1, -1],[0, __2],__1),FlatWeightedSumGeq([1, -1],[0, __2],__1);int(1..)]),
__2 =aux row#matrix_to_atom[0], 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)]));int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0]


--

Successful Tranformation: 
(minorDiagonal#matrix_to_atom[1] = Sum([1,-(row#matrix_to_atom[1]);int(1..)])), 
~~> flatten_eq [4200; Minion]
(__3 = __4)
new variables:
  find __3: int(-3..3)
  find __4: int(-6..1)
new constraints:
  __3 =aux minorDiagonal#matrix_to_atom[1]
  __4 =aux Sum([1,-(row#matrix_to_atom[1]);int(1..)])

--

Successful Tranformation: 
__4 =aux Sum([1,-(row#matrix_to_atom[1]);int(1..)]), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([FlatWeightedSumLeq([1, -1],[1, __5],__4),FlatWeightedSumGeq([1, -1],[1, __5],__4);int(1..)])
new variables:
  find __5: int(0..7)
new constraints:
  __5 =aux row#matrix_to_atom[1]

--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
and([FlatWeightedSumLeq([1, -1],[1, __5],__4),FlatWeightedSumGeq([1, -1],[1, __5],__4);int(1..)]),
__5 =aux row#matrix_to_atom[1], 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1]


--

Successful Tranformation: 
(minorDiagonal#matrix_to_atom[2] = Sum([2,-(row#matrix_to_atom[2]);int(1..)])), 
~~> flatten_eq [4200; Minion]
(__6 = __7)
new variables:
  find __6: int(-3..3)
  find __7: int(-5..2)
new constraints:
  __6 =aux minorDiagonal#matrix_to_atom[2]
  __7 =aux Sum([2,-(row#matrix_to_atom[2]);int(1..)])

--

Successful Tranformation: 
__7 =aux Sum([2,-(row#matrix_to_atom[2]);int(1..)]), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([FlatWeightedSumLeq([1, -1],[2, __8],__7),FlatWeightedSumGeq([1, -1],[2, __8],__7);int(1..)])
new variables:
  find __8: int(0..7)
new constraints:
  __8 =aux row#matrix_to_atom[2]

--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
and([FlatWeightedSumLeq([1, -1],[2, __8],__7),FlatWeightedSumGeq([1, -1],[2, __8],__7);int(1..)]),
__8 =aux row#matrix_to_atom[2], 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2]


--

Successful Tranformation: 
(minorDiagonal#matrix_to_atom[3] = Sum([3,-(row#matrix_to_atom[3]);int(1..)])), 
~~> flatten_eq [4200; Minion]
(__9 = __10)
new variables:
  find __9: int(-3..3)
  find __10: int(-4..3)
new constraints:
  __9 =aux minorDiagonal#matrix_to_atom[3]
  __10 =aux Sum([3,-(row#matrix_to_atom[3]);int(1..)])

--

Successful Tranformation: 
__10 =aux Sum([3,-(row#matrix_to_atom[3]);int(1..)]), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([FlatWeightedSumLeq([1, -1],[3, __11],__10),FlatWeightedSumGeq([1, -1],[3, __11],__10);int(1..)])
new variables:
  find __11: int(0..7)
new constraints:
  __11 =aux row#matrix_to_atom[3]

--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
and([FlatWeightedSumLeq([1, -1],[3, __11],__10),FlatWeightedSumGeq([1, -1],[3, __11],__10);int(1..)]),
__11 =aux row#matrix_to_atom[3], 
~~> partial_evaluator [9000; Base]
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3]


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..2)]), 
~~> matrix_to_list [2000; Base]
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..)])


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),(__0 = __1);int(1..)]),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3], 
~~> partial_evaluator [9000; Base]
(majorDiagonal#matrix_to_atom[0] = Sum([0,row#matrix_to_atom[0];int(1..2)])),
(__0 = __1),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3]


--

Successful Tranformation: 
majorDiagonal#matrix_to_atom[0], 
~~> index_matrix_to_atom [2000; Base]
majorDiagonal#matrix_to_atom_0


--

Successful Tranformation: 
Sum([0,row#matrix_to_atom[0];int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([0,row#matrix_to_atom[0];int(1..)])


--

Successful Tranformation: 
(majorDiagonal#matrix_to_atom_0 = Sum([0,row#matrix_to_atom[0];int(1..)])), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),SumGeq([0, __12], majorDiagonal#matrix_to_atom_0);int(1..)])
new variables:
  find __12: int(0..7)
new constraints:
  __12 =aux row#matrix_to_atom[0]

--

Successful Tranformation: 
and([SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),SumGeq([0, __12], majorDiagonal#matrix_to_atom_0);int(1..)]),
(__0 = __1),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0], 
~~> partial_evaluator [9000; Base]
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0]


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..2)]), 
~~> matrix_to_list [2000; Base]
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..)])


--

Successful Tranformation: 
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
and([(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),(__3 = __4);int(1..)]),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0], 
~~> partial_evaluator [9000; Base]
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
(majorDiagonal#matrix_to_atom[1] = Sum([1,row#matrix_to_atom[1];int(1..2)])),
(__3 = __4),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0]


--

Successful Tranformation: 
majorDiagonal#matrix_to_atom[1], 
~~> index_matrix_to_atom [2000; Base]
majorDiagonal#matrix_to_atom_1


--

Successful Tranformation: 
Sum([1,row#matrix_to_atom[1];int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([1,row#matrix_to_atom[1];int(1..)])


--

Successful Tranformation: 
(majorDiagonal#matrix_to_atom_1 = Sum([1,row#matrix_to_atom[1];int(1..)])), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),SumGeq([1, __13], majorDiagonal#matrix_to_atom_1);int(1..)])
new variables:
  find __13: int(0..7)
new constraints:
  __13 =aux row#matrix_to_atom[1]

--

Successful Tranformation: 
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
and([SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),SumGeq([1, __13], majorDiagonal#matrix_to_atom_1);int(1..)]),
(__3 = __4),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0],
__13 =aux row#matrix_to_atom[1], 
~~> partial_evaluator [9000; Base]
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),
SumGeq([1, __13], majorDiagonal#matrix_to_atom_1),
(__3 = __4),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0],
__13 =aux row#matrix_to_atom[1]


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..2)]), 
~~> matrix_to_list [2000; Base]
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..)])


--

Successful Tranformation: 
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),
SumGeq([1, __13], majorDiagonal#matrix_to_atom_1),
(__3 = __4),
and([(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),(__6 = __7);int(1..)]),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0],
__13 =aux row#matrix_to_atom[1], 
~~> partial_evaluator [9000; Base]
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),
SumGeq([1, __13], majorDiagonal#matrix_to_atom_1),
(__3 = __4),
(majorDiagonal#matrix_to_atom[2] = Sum([2,row#matrix_to_atom[2];int(1..2)])),
(__6 = __7),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0],
__13 =aux row#matrix_to_atom[1]


--

Successful Tranformation: 
majorDiagonal#matrix_to_atom[2], 
~~> index_matrix_to_atom [2000; Base]
majorDiagonal#matrix_to_atom_2


--

Successful Tranformation: 
Sum([2,row#matrix_to_atom[2];int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([2,row#matrix_to_atom[2];int(1..)])


--

Successful Tranformation: 
(majorDiagonal#matrix_to_atom_2 = Sum([2,row#matrix_to_atom[2];int(1..)])), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([2, __14], majorDiagonal#matrix_to_atom_2),SumGeq([2, __14], majorDiagonal#matrix_to_atom_2);int(1..)])
new variables:
  find __14: int(0..7)
new constraints:
  __14 =aux row#matrix_to_atom[2]

--

Successful Tranformation: 
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),
SumGeq([1, __13], majorDiagonal#matrix_to_atom_1),
(__3 = __4),
and([SumLeq([2, __14], majorDiagonal#matrix_to_atom_2),SumGeq([2, __14], majorDiagonal#matrix_to_atom_2);int(1..)]),
(__6 = __7),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0],
__13 =aux row#matrix_to_atom[1],
__14 =aux row#matrix_to_atom[2], 
~~> partial_evaluator [9000; Base]
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),
SumGeq([1, __13], majorDiagonal#matrix_to_atom_1),
(__3 = __4),
SumLeq([2, __14], majorDiagonal#matrix_to_atom_2),
SumGeq([2, __14], majorDiagonal#matrix_to_atom_2),
(__6 = __7),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0],
__13 =aux row#matrix_to_atom[1],
__14 =aux row#matrix_to_atom[2]


--

Successful Tranformation: 
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..2)]), 
~~> matrix_to_list [2000; Base]
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..)])


--

Successful Tranformation: 
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),
SumGeq([1, __13], majorDiagonal#matrix_to_atom_1),
(__3 = __4),
SumLeq([2, __14], majorDiagonal#matrix_to_atom_2),
SumGeq([2, __14], majorDiagonal#matrix_to_atom_2),
(__6 = __7),
and([(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),(__9 = __10);int(1..)]),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0],
__13 =aux row#matrix_to_atom[1],
__14 =aux row#matrix_to_atom[2], 
~~> partial_evaluator [9000; Base]
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),
SumGeq([1, __13], majorDiagonal#matrix_to_atom_1),
(__3 = __4),
SumLeq([2, __14], majorDiagonal#matrix_to_atom_2),
SumGeq([2, __14], majorDiagonal#matrix_to_atom_2),
(__6 = __7),
(majorDiagonal#matrix_to_atom[3] = Sum([3,row#matrix_to_atom[3];int(1..2)])),
(__9 = __10),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0],
__13 =aux row#matrix_to_atom[1],
__14 =aux row#matrix_to_atom[2]


--

Successful Tranformation: 
majorDiagonal#matrix_to_atom[3], 
~~> index_matrix_to_atom [2000; Base]
majorDiagonal#matrix_to_atom_3


--

Successful Tranformation: 
Sum([3,row#matrix_to_atom[3];int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([3,row#matrix_to_atom[3];int(1..)])


--

Successful Tranformation: 
(majorDiagonal#matrix_to_atom_3 = Sum([3,row#matrix_to_atom[3];int(1..)])), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([3, __15], majorDiagonal#matrix_to_atom_3),SumGeq([3, __15], majorDiagonal#matrix_to_atom_3);int(1..)])
new variables:
  find __15: int(0..7)
new constraints:
  __15 =aux row#matrix_to_atom[3]

--

Successful Tranformation: 
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),
SumGeq([1, __13], majorDiagonal#matrix_to_atom_1),
(__3 = __4),
SumLeq([2, __14], majorDiagonal#matrix_to_atom_2),
SumGeq([2, __14], majorDiagonal#matrix_to_atom_2),
(__6 = __7),
and([SumLeq([3, __15], majorDiagonal#matrix_to_atom_3),SumGeq([3, __15], majorDiagonal#matrix_to_atom_3);int(1..)]),
(__9 = __10),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0],
__13 =aux row#matrix_to_atom[1],
__14 =aux row#matrix_to_atom[2],
__15 =aux row#matrix_to_atom[3], 
~~> partial_evaluator [9000; Base]
SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),
SumGeq([1, __13], majorDiagonal#matrix_to_atom_1),
(__3 = __4),
SumLeq([2, __14], majorDiagonal#matrix_to_atom_2),
SumGeq([2, __14], majorDiagonal#matrix_to_atom_2),
(__6 = __7),
SumLeq([3, __15], majorDiagonal#matrix_to_atom_3),
SumGeq([3, __15], majorDiagonal#matrix_to_atom_3),
(__9 = __10),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom[0],
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom[0],
__3 =aux minorDiagonal#matrix_to_atom[1],
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom[1],
__6 =aux minorDiagonal#matrix_to_atom[2],
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom[2],
__9 =aux minorDiagonal#matrix_to_atom[3],
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom[3],
__12 =aux row#matrix_to_atom[0],
__13 =aux row#matrix_to_atom[1],
__14 =aux row#matrix_to_atom[2],
__15 =aux row#matrix_to_atom[3]


--

Successful Tranformation: 
minorDiagonal#matrix_to_atom[0], 
~~> index_matrix_to_atom [2000; Base]
minorDiagonal#matrix_to_atom_0


--

Successful Tranformation: 
row#matrix_to_atom[0], 
~~> index_matrix_to_atom [2000; Base]
row#matrix_to_atom_0


--

Successful Tranformation: 
minorDiagonal#matrix_to_atom[1], 
~~> index_matrix_to_atom [2000; Base]
minorDiagonal#matrix_to_atom_1


--

Successful Tranformation: 
row#matrix_to_atom[1], 
~~> index_matrix_to_atom [2000; Base]
row#matrix_to_atom_1


--

Successful Tranformation: 
minorDiagonal#matrix_to_atom[2], 
~~> index_matrix_to_atom [2000; Base]
minorDiagonal#matrix_to_atom_2


--

Successful Tranformation: 
row#matrix_to_atom[2], 
~~> index_matrix_to_atom [2000; Base]
row#matrix_to_atom_2


--

Successful Tranformation: 
minorDiagonal#matrix_to_atom[3], 
~~> index_matrix_to_atom [2000; Base]
minorDiagonal#matrix_to_atom_3


--

Successful Tranformation: 
row#matrix_to_atom[3], 
~~> index_matrix_to_atom [2000; Base]
row#matrix_to_atom_3


--

Successful Tranformation: 
row#matrix_to_atom[0], 
~~> index_matrix_to_atom [2000; Base]
row#matrix_to_atom_0


--

Successful Tranformation: 
row#matrix_to_atom[1], 
~~> index_matrix_to_atom [2000; Base]
row#matrix_to_atom_1


--

Successful Tranformation: 
row#matrix_to_atom[2], 
~~> index_matrix_to_atom [2000; Base]
row#matrix_to_atom_2


--

Successful Tranformation: 
row#matrix_to_atom[3], 
~~> index_matrix_to_atom [2000; Base]
row#matrix_to_atom_3


--


Final model:

find majorDiagonal: matrix indexed by [[int(0..3)]] of int(0..6)
find minorDiagonal: matrix indexed by [[int(0..3)]] of int(-3..3)
find row: matrix indexed by [[int(0..7)]] of int(0..7)
find __0: int(-3..3)
find __1: int(-7..0)
find __2: int(0..7)
find __3: int(-3..3)
find __4: int(-6..1)
find __5: int(0..7)
find __6: int(-3..3)
find __7: int(-5..2)
find __8: int(0..7)
find __9: int(-3..3)
find __10: int(-4..3)
find __11: int(0..7)
find __12: int(0..7)
find __13: int(0..7)
find __14: int(0..7)
find __15: int(0..7)
find majorDiagonal#matrix_to_atom_0: int(0..6)
find majorDiagonal#matrix_to_atom_1: int(0..6)
find majorDiagonal#matrix_to_atom_2: int(0..6)
find majorDiagonal#matrix_to_atom_3: int(0..6)
find minorDiagonal#matrix_to_atom_0: int(-3..3)
find minorDiagonal#matrix_to_atom_1: int(-3..3)
find minorDiagonal#matrix_to_atom_2: int(-3..3)
find minorDiagonal#matrix_to_atom_3: int(-3..3)
find row#matrix_to_atom_0: int(0..7)
find row#matrix_to_atom_1: int(0..7)
find row#matrix_to_atom_2: int(0..7)
find row#matrix_to_atom_3: int(0..7)
find row#matrix_to_atom_4: int(0..7)
find row#matrix_to_atom_5: int(0..7)
find row#matrix_to_atom_6: int(0..7)
find row#matrix_to_atom_7: int(0..7)

such that

SumLeq([0, __12], majorDiagonal#matrix_to_atom_0),
SumGeq([0, __12], majorDiagonal#matrix_to_atom_0),
(__0 = __1),
SumLeq([1, __13], majorDiagonal#matrix_to_atom_1),
SumGeq([1, __13], majorDiagonal#matrix_to_atom_1),
(__3 = __4),
SumLeq([2, __14], majorDiagonal#matrix_to_atom_2),
SumGeq([2, __14], majorDiagonal#matrix_to_atom_2),
(__6 = __7),
SumLeq([3, __15], majorDiagonal#matrix_to_atom_3),
SumGeq([3, __15], majorDiagonal#matrix_to_atom_3),
(__9 = __10),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]),
__0 =aux minorDiagonal#matrix_to_atom_0,
FlatWeightedSumLeq([1, -1],[0, __2],__1),
FlatWeightedSumGeq([1, -1],[0, __2],__1),
__2 =aux row#matrix_to_atom_0,
__3 =aux minorDiagonal#matrix_to_atom_1,
FlatWeightedSumLeq([1, -1],[1, __5],__4),
FlatWeightedSumGeq([1, -1],[1, __5],__4),
__5 =aux row#matrix_to_atom_1,
__6 =aux minorDiagonal#matrix_to_atom_2,
FlatWeightedSumLeq([1, -1],[2, __8],__7),
FlatWeightedSumGeq([1, -1],[2, __8],__7),
__8 =aux row#matrix_to_atom_2,
__9 =aux minorDiagonal#matrix_to_atom_3,
FlatWeightedSumLeq([1, -1],[3, __11],__10),
FlatWeightedSumGeq([1, -1],[3, __11],__10),
__11 =aux row#matrix_to_atom_3,
__12 =aux row#matrix_to_atom_0,
__13 =aux row#matrix_to_atom_1,
__14 =aux row#matrix_to_atom_2,
__15 =aux row#matrix_to_atom_3

