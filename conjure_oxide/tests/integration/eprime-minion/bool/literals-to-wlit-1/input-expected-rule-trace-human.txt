Model before rewriting:

find a: bool
find b: bool
find c: bool
find d: bool

such that

or([a,b;int(1..2)]),
or([Not(c),and([b,d;int(1..2)]);int(1..2)]),
b,
or([d,c;int(1..2)])

--

Not(c), 
   ~~> not_literal_to_wliteral ([("Minion", 4100)]) 
WatchedLiteral(c,false) 

--

or([a,b;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
or([a,b;int(1..)]) 

--

or([WatchedLiteral(c,false),and([b,d;int(1..2)]);int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
or([WatchedLiteral(c,false),and([b,d;int(1..2)]);int(1..)]) 

--

and([b,d;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
and([b,d;int(1..)]) 

--

or([WatchedLiteral(c,false),and([b,d;int(1..)]);int(1..)]), 
   ~~> distribute_or_over_and ([("Base", 8400)]) 
and([or([WatchedLiteral(c,false),b;int(1..)]),or([WatchedLiteral(c,false),d;int(1..)]);int(1..)]) 

--

or([a,b;int(1..)]),
and([or([WatchedLiteral(c,false),b;int(1..)]),or([WatchedLiteral(c,false),d;int(1..)]);int(1..)]),
b,
or([d,c;int(1..2)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
or([a,b;int(1..)]),
or([WatchedLiteral(c,false),b;int(1..)]),
or([WatchedLiteral(c,false),d;int(1..)]),
b,
or([d,c;int(1..2)]) 

--

or([d,c;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
or([d,c;int(1..)]) 

--

Final model:

find a: bool
find b: bool
find c: bool
find d: bool

such that

or([a,b;int(1..)]),
or([WatchedLiteral(c,false),b;int(1..)]),
or([WatchedLiteral(c,false),d;int(1..)]),
b,
or([d,c;int(1..)])

