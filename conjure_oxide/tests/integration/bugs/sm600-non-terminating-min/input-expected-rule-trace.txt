
Model before rewriting:

find a: int(1..7)
find b: int(1..7)

such that

(Sum([min([a,b;int(1..2)]),6;int(1..2)]) <= 10)

--

Successful Tranformation: 
Sum([min([a,b;int(1..2)]),6;int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([min([a,b;int(1..2)]),6;int(1..)])


--

Successful Tranformation: 
min([a,b;int(1..2)]), 
~~> matrix_to_list [2000; Base]
min([a,b;int(1..)])


--

Successful Tranformation: 
min([a,b;int(1..)]), 
~~> min_to_var [6000; Base]
__0
new variables:
  find __0: int(1..7)
new constraints:
  (__0 <= a)
  (__0 <= b)
  or([(__0 = a),(__0 = b);int(1..)])

--

Successful Tranformation: 
(Sum([__0,6;int(1..)]) <= 10), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
SumLeq([__0, 6], 10)


--

Successful Tranformation: 
(__0 <= a), 
~~> leq_to_ineq [4100; Minion]
Ineq(__0, a, 0)


--

Successful Tranformation: 
(__0 <= b), 
~~> leq_to_ineq [4100; Minion]
Ineq(__0, b, 0)


--


Final model:

find a: int(1..7)
find b: int(1..7)
find __0: int(1..7)

such that

SumLeq([__0, 6], 10),
Ineq(__0, a, 0),
Ineq(__0, b, 0),
or([(__0 = a),(__0 = b);int(1..)])

