Product([Product([x, y]), z]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Product([x, y, z]) 

--

(Product([x, y, z]) < 15), 
   ~~> lt_to_leq ([("Base", 8400)]) 
(Product([x, y, z]) <= Sum([15, -1])) 

--

Sum([15, -1]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
14 

--

(Product([x, y, z]) <= 14), 
   ~~> flatten_binop ([("Minion", 4200)]) 
(__0 <= 14) 
new variables:
  __0: int(8..64)
new constraints:
  __0 =aux Product([x, y, z])
--

__0 =aux Product([x, y, z]), 
   ~~> introduce_producteq ([("Minion", 4200)]) 
FlatProductEq(z,__1,__0) 
new variables:
  __1: int(4..16)
new constraints:
  FlatProductEq(y,x,__1)
--

(__0 <= 14), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(__0, 14, 0) 

--

