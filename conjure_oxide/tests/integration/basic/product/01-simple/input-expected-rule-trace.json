
[
{
  "initial_expression": {
    "Product": [
      {
        "clean": false,
        "etype": null
      },
      [
        {
          "Product": [
            {
              "clean": false,
              "etype": null
            },
            [
              {
                "Atomic": [
                  {
                    "clean": false,
                    "etype": null
                  },
                  {
                    "Reference": {
                      "UserName": "x"
                    }
                  }
                ]
              },
              {
                "Atomic": [
                  {
                    "clean": false,
                    "etype": null
                  },
                  {
                    "Reference": {
                      "UserName": "y"
                    }
                  }
                ]
              }
            ]
          ]
        },
        {
          "Atomic": [
            {
              "clean": false,
              "etype": null
            },
            {
              "Reference": {
                "UserName": "z"
              }
            }
          ]
        }
      ]
    ]
  },
  "rule_name": "normalise_associative_commutative",
  "rule_priority": 8900,
  "rule_set_name": "Base",
  "transformed_expression": {
    "Product": [
      {
        "clean": false,
        "etype": null
      },
      [
        {
          "Atomic": [
            {
              "clean": false,
              "etype": null
            },
            {
              "Reference": {
                "UserName": "x"
              }
            }
          ]
        },
        {
          "Atomic": [
            {
              "clean": false,
              "etype": null
            },
            {
              "Reference": {
                "UserName": "y"
              }
            }
          ]
        },
        {
          "Atomic": [
            {
              "clean": false,
              "etype": null
            },
            {
              "Reference": {
                "UserName": "z"
              }
            }
          ]
        }
      ]
    ]
  },
  "new_variables_str": "",
  "top_level_str": ""
}
,{
  "initial_expression": {
    "Lt": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Product": [
          {
            "clean": false,
            "etype": null
          },
          [
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "x"
                  }
                }
              ]
            },
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "y"
                  }
                }
              ]
            },
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "z"
                  }
                }
              ]
            }
          ]
        ]
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Literal": {
              "Int": 15
            }
          }
        ]
      }
    ]
  },
  "rule_name": "lt_to_leq",
  "rule_priority": 8400,
  "rule_set_name": "Minion",
  "transformed_expression": {
    "Leq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Product": [
          {
            "clean": false,
            "etype": null
          },
          [
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "x"
                  }
                }
              ]
            },
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "y"
                  }
                }
              ]
            },
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "z"
                  }
                }
              ]
            }
          ]
        ]
      },
      {
        "Sum": [
          {
            "clean": false,
            "etype": null
          },
          {
            "AbstractLiteral": [
              {
                "clean": false,
                "etype": null
              },
              {
                "Matrix": [
                  [
                    {
                      "Atomic": [
                        {
                          "clean": false,
                          "etype": null
                        },
                        {
                          "Literal": {
                            "Int": 15
                          }
                        }
                      ]
                    },
                    {
                      "Atomic": [
                        {
                          "clean": false,
                          "etype": null
                        },
                        {
                          "Literal": {
                            "Int": -1
                          }
                        }
                      ]
                    }
                  ],
                  {
                    "IntDomain": [
                      {
                        "UnboundedR": 1
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "new_variables_str": "",
  "top_level_str": ""
}
,{
  "initial_expression": {
    "Sum": [
      {
        "clean": false,
        "etype": null
      },
      {
        "AbstractLiteral": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Matrix": [
              [
                {
                  "Atomic": [
                    {
                      "clean": false,
                      "etype": null
                    },
                    {
                      "Literal": {
                        "Int": 15
                      }
                    }
                  ]
                },
                {
                  "Atomic": [
                    {
                      "clean": false,
                      "etype": null
                    },
                    {
                      "Literal": {
                        "Int": -1
                      }
                    }
                  ]
                }
              ],
              {
                "IntDomain": [
                  {
                    "UnboundedR": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "rule_name": "constant_evaluator",
  "rule_priority": 9001,
  "rule_set_name": "Constant",
  "transformed_expression": {
    "Atomic": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Literal": {
          "Int": 14
        }
      }
    ]
  },
  "new_variables_str": "",
  "top_level_str": ""
}
,{
  "initial_expression": {
    "Leq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Product": [
          {
            "clean": false,
            "etype": null
          },
          [
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "x"
                  }
                }
              ]
            },
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "y"
                  }
                }
              ]
            },
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "z"
                  }
                }
              ]
            }
          ]
        ]
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Literal": {
              "Int": 14
            }
          }
        ]
      }
    ]
  },
  "rule_name": "flatten_generic",
  "rule_priority": 4200,
  "rule_set_name": "Minion",
  "transformed_expression": {
    "Leq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Reference": {
              "MachineName": 0
            }
          }
        ]
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Literal": {
              "Int": 14
            }
          }
        ]
      }
    ]
  },
  "new_variables_str": "new variables:\n  find __0: int(8..64)",
  "top_level_str": "new constraints:\n  __0 =aux Product([x, y, z])\n"
}
,{
  "initial_expression": {
    "AuxDeclaration": [
      {
        "clean": false,
        "etype": null
      },
      {
        "MachineName": 0
      },
      {
        "Product": [
          {
            "clean": false,
            "etype": null
          },
          [
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "x"
                  }
                }
              ]
            },
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "y"
                  }
                }
              ]
            },
            {
              "Atomic": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Reference": {
                    "UserName": "z"
                  }
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  "rule_name": "introduce_producteq",
  "rule_priority": 4200,
  "rule_set_name": "Minion",
  "transformed_expression": {
    "FlatProductEq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Reference": {
          "UserName": "z"
        }
      },
      {
        "Reference": {
          "MachineName": 1
        }
      },
      {
        "Reference": {
          "MachineName": 0
        }
      }
    ]
  },
  "new_variables_str": "new variables:\n  find __1: int(4..16)",
  "top_level_str": "new constraints:\n  FlatProductEq(y,x,__1)\n"
}
,{
  "initial_expression": {
    "Leq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Reference": {
              "MachineName": 0
            }
          }
        ]
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Literal": {
              "Int": 14
            }
          }
        ]
      }
    ]
  },
  "rule_name": "leq_to_ineq",
  "rule_priority": 4100,
  "rule_set_name": "Minion",
  "transformed_expression": {
    "FlatIneq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Reference": {
          "MachineName": 0
        }
      },
      {
        "Literal": {
          "Int": 14
        }
      },
      {
        "Int": 0
      }
    ]
  },
  "new_variables_str": "",
  "top_level_str": ""
}

]
