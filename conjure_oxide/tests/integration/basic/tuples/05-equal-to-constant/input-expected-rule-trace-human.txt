Model before rewriting:

find x: tuple of ([int(1..2), int(1..5)])

such that

(x = (2,3))

--

x, 
   ~~> select_representation ([("Base", 8000)]) 
x#tuple_to_atom 
new variables:
  find x#tuple_to_atom_1: int(1..2)
  find x#tuple_to_atom_2: int(1..5)
--

(x#tuple_to_atom = (2,3)), 
   ~~> tuple_to_constant ([("Base", 2000)]) 
and([(x#tuple_to_atom[1] = (2,3)[1]),(x#tuple_to_atom[2] = (2,3)[2]);int(1..)]) 

--

(2,3)[1], 
   ~~> constant_evaluator ([("Constant", 9001)]) 
2 

--

(2,3)[2], 
   ~~> constant_evaluator ([("Constant", 9001)]) 
3 

--

and([(x#tuple_to_atom[1] = 2),(x#tuple_to_atom[2] = 3);int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(x#tuple_to_atom[1] = 2),
(x#tuple_to_atom[2] = 3) 

--

x#tuple_to_atom[1], 
   ~~> index_tuple_to_atom ([("Base", 2000)]) 
x#tuple_to_atom_1 

--

x#tuple_to_atom[2], 
   ~~> index_tuple_to_atom ([("Base", 2000)]) 
x#tuple_to_atom_2 

--

Final model:

find x: tuple of ([int(1..2), int(1..5)])
find x#tuple_to_atom_1: int(1..2)
find x#tuple_to_atom_2: int(1..5)

such that

(x#tuple_to_atom_1 = 2),
(x#tuple_to_atom_2 = 3)

