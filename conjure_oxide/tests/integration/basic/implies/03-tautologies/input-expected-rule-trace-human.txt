Model before rewriting:

find a: bool
find b: bool
find c: bool
find x: bool
find y: bool
find z: bool

such that

(x) -> (x),
or([(a) -> (z),(z) -> (a);int(1..2)]),
or([(b) -> (c),(b) -> (Not(c));int(1..2)])

--

(x) -> (x), 
   ~~> partial_evaluator ([("Base", 9000)]) 
true 

--

true,
or([(a) -> (z),(z) -> (a);int(1..2)]),
or([(b) -> (c),(b) -> (Not(c));int(1..2)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
or([(a) -> (z),(z) -> (a);int(1..2)]),
or([(b) -> (c),(b) -> (Not(c));int(1..2)]) 

--

(a) -> (z), 
   ~~> introduce_reifyimply_ineq_from_imply ([("Minion", 4400)]) 
Ineq(a, z, 0) 

--

(z) -> (a), 
   ~~> introduce_reifyimply_ineq_from_imply ([("Minion", 4400)]) 
Ineq(z, a, 0) 

--

(b) -> (c), 
   ~~> introduce_reifyimply_ineq_from_imply ([("Minion", 4400)]) 
Ineq(b, c, 0) 

--

(b) -> (Not(c)), 
   ~~> introduce_reifyimply_ineq_from_imply ([("Minion", 4400)]) 
ReifyImply(Not(c), b) 

--

Not(c), 
   ~~> not_literal_to_wliteral ([("Minion", 4100)]) 
WatchedLiteral(c,false) 

--

or([Ineq(a, z, 0),Ineq(z, a, 0);int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
or([Ineq(a, z, 0),Ineq(z, a, 0);int(1..)]) 

--

or([Ineq(b, c, 0),ReifyImply(WatchedLiteral(c,false), b);int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
or([Ineq(b, c, 0),ReifyImply(WatchedLiteral(c,false), b);int(1..)]) 

--

Final model:

find a: bool
find b: bool
find c: bool
find x: bool
find y: bool
find z: bool

such that

or([Ineq(a, z, 0),Ineq(z, a, 0);int(1..)]),
or([Ineq(b, c, 0),ReifyImply(WatchedLiteral(c,false), b);int(1..)])

