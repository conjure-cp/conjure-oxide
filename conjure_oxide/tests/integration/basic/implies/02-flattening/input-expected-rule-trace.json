[
  {
    "initial_expression": {
      "Lt": [
        {
          "Atomic": [
            {
              "Literal": {
                "Int": 3
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Atomic": [
            {
              "Reference": {
                "UserName": "x"
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "lt_to_leq",
    "rule_set": [
      [
        "Minion",
        8400
      ]
    ],
    "transformed _expression": {
      "Leq": [
        {
          "Atomic": [
            {
              "Reference": {
                "UserName": "x"
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Sum": [
            [
              {
                "Atomic": [
                  {
                    "Literal": {
                      "Int": -1
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              },
              {
                "Atomic": [
                  {
                    "Literal": {
                      "Int": 3
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              }
            ],
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "Sum": [
        [
          {
            "Atomic": [
              {
                "Literal": {
                  "Int": -1
                }
              },
              {
                "clean": false,
                "etype": null
              }
            ]
          },
          {
            "Atomic": [
              {
                "Literal": {
                  "Int": 3
                }
              },
              {
                "clean": false,
                "etype": null
              }
            ]
          }
        ],
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "apply_eval_constant",
    "rule_set": [
      [
        "Constant",
        9001
      ]
    ],
    "transformed _expression": {
      "Atomic": [
        {
          "Literal": {
            "Int": 2
          }
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "Eq": [
        {
          "Atomic": [
            {
              "Literal": {
                "Int": 8
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Sum": [
            [
              {
                "Atomic": [
                  {
                    "Reference": {
                      "UserName": "y"
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              },
              {
                "Atomic": [
                  {
                    "Reference": {
                      "UserName": "z"
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              }
            ],
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "introduce_weighted_sumleq_sumgeq",
    "rule_set": [
      [
        "Minion",
        4600
      ]
    ],
    "transformed _expression": {
      "And": [
        [
          {
            "FlatSumGeq": [
              [
                {
                  "Reference": {
                    "UserName": "y"
                  }
                },
                {
                  "Reference": {
                    "UserName": "z"
                  }
                }
              ],
              {
                "Literal": {
                  "Int": 8
                }
              },
              {
                "clean": false,
                "etype": null
              }
            ]
          },
          {
            "FlatSumLeq": [
              [
                {
                  "Reference": {
                    "UserName": "y"
                  }
                },
                {
                  "Reference": {
                    "UserName": "z"
                  }
                }
              ],
              {
                "Literal": {
                  "Int": 8
                }
              },
              {
                "clean": false,
                "etype": null
              }
            ]
          }
        ],
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "Eq": [
        {
          "Atomic": [
            {
              "Literal": {
                "Int": 3
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Sum": [
            [
              {
                "Atomic": [
                  {
                    "Literal": {
                      "Int": 2
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              },
              {
                "Atomic": [
                  {
                    "Reference": {
                      "UserName": "x"
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              }
            ],
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "introduce_weighted_sumleq_sumgeq",
    "rule_set": [
      [
        "Minion",
        4600
      ]
    ],
    "transformed _expression": {
      "And": [
        [
          {
            "FlatSumGeq": [
              [
                {
                  "Literal": {
                    "Int": 2
                  }
                },
                {
                  "Reference": {
                    "UserName": "x"
                  }
                }
              ],
              {
                "Literal": {
                  "Int": 3
                }
              },
              {
                "clean": false,
                "etype": null
              }
            ]
          },
          {
            "FlatSumLeq": [
              [
                {
                  "Literal": {
                    "Int": 2
                  }
                },
                {
                  "Reference": {
                    "UserName": "x"
                  }
                }
              ],
              {
                "Literal": {
                  "Int": 3
                }
              },
              {
                "clean": false,
                "etype": null
              }
            ]
          }
        ],
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "Imply": [
        {
          "Geq": [
            {
              "Atomic": [
                {
                  "Literal": {
                    "Int": 5
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "Atomic": [
                {
                  "Reference": {
                    "UserName": "y"
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Leq": [
            {
              "Atomic": [
                {
                  "Literal": {
                    "Int": 2
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "Atomic": [
                {
                  "Reference": {
                    "UserName": "x"
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "flatten_imply",
    "rule_set": [
      [
        "Minion",
        4200
      ]
    ],
    "transformed _expression": {
      "Imply": [
        {
          "Atomic": [
            {
              "Reference": {
                "MachineName": 0
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Geq": [
            {
              "Atomic": [
                {
                  "Literal": {
                    "Int": 5
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "Atomic": [
                {
                  "Reference": {
                    "UserName": "y"
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "Imply": [
        {
          "Atomic": [
            {
              "Reference": {
                "MachineName": 0
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Geq": [
            {
              "Atomic": [
                {
                  "Literal": {
                    "Int": 5
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "Atomic": [
                {
                  "Reference": {
                    "UserName": "y"
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "introduce_reifyimply_ineq_from_imply",
    "rule_set": [
      [
        "Minion",
        4400
      ]
    ],
    "transformed _expression": {
      "MinionReifyImply": [
        {
          "Geq": [
            {
              "Atomic": [
                {
                  "Literal": {
                    "Int": 5
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "Atomic": [
                {
                  "Reference": {
                    "UserName": "y"
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Reference": {
            "MachineName": 0
          }
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "AuxDeclaration": [
        {
          "Leq": [
            {
              "Atomic": [
                {
                  "Literal": {
                    "Int": 2
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "Atomic": [
                {
                  "Reference": {
                    "UserName": "x"
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "MachineName": 0
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "bool_eq_to_reify",
    "rule_set": [
      [
        "Minion",
        4400
      ]
    ],
    "transformed _expression": {
      "MinionReify": [
        {
          "Leq": [
            {
              "Atomic": [
                {
                  "Literal": {
                    "Int": 2
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "Atomic": [
                {
                  "Reference": {
                    "UserName": "x"
                  }
                },
                {
                  "clean": false,
                  "etype": null
                }
              ]
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Reference": {
            "MachineName": 0
          }
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "Imply": [
        {
          "And": [
            [
              {
                "FlatSumGeq": [
                  [
                    {
                      "Literal": {
                        "Int": 2
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "x"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 3
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              },
              {
                "FlatSumLeq": [
                  [
                    {
                      "Literal": {
                        "Int": 2
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "x"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 3
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              }
            ],
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "And": [
            [
              {
                "FlatSumGeq": [
                  [
                    {
                      "Reference": {
                        "UserName": "y"
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "z"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 8
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              },
              {
                "FlatSumLeq": [
                  [
                    {
                      "Reference": {
                        "UserName": "y"
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "z"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 8
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              }
            ],
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "flatten_imply",
    "rule_set": [
      [
        "Minion",
        4200
      ]
    ],
    "transformed _expression": {
      "Imply": [
        {
          "And": [
            [
              {
                "FlatSumGeq": [
                  [
                    {
                      "Literal": {
                        "Int": 2
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "x"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 3
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              },
              {
                "FlatSumLeq": [
                  [
                    {
                      "Literal": {
                        "Int": 2
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "x"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 3
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              }
            ],
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Atomic": [
            {
              "Reference": {
                "MachineName": 1
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "Imply": [
        {
          "And": [
            [
              {
                "FlatSumGeq": [
                  [
                    {
                      "Literal": {
                        "Int": 2
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "x"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 3
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              },
              {
                "FlatSumLeq": [
                  [
                    {
                      "Literal": {
                        "Int": 2
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "x"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 3
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              }
            ],
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Atomic": [
            {
              "Reference": {
                "MachineName": 1
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "introduce_reifyimply_ineq_from_imply",
    "rule_set": [
      [
        "Minion",
        4400
      ]
    ],
    "transformed _expression": {
      "MinionReifyImply": [
        {
          "And": [
            [
              {
                "FlatSumGeq": [
                  [
                    {
                      "Literal": {
                        "Int": 2
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "x"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 3
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              },
              {
                "FlatSumLeq": [
                  [
                    {
                      "Literal": {
                        "Int": 2
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "x"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 3
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              }
            ],
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Reference": {
            "MachineName": 1
          }
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "AuxDeclaration": [
        {
          "And": [
            [
              {
                "FlatSumGeq": [
                  [
                    {
                      "Reference": {
                        "UserName": "y"
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "z"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 8
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              },
              {
                "FlatSumLeq": [
                  [
                    {
                      "Reference": {
                        "UserName": "y"
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "z"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 8
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              }
            ],
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "MachineName": 1
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "bool_eq_to_reify",
    "rule_set": [
      [
        "Minion",
        4400
      ]
    ],
    "transformed _expression": {
      "MinionReify": [
        {
          "And": [
            [
              {
                "FlatSumGeq": [
                  [
                    {
                      "Reference": {
                        "UserName": "y"
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "z"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 8
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              },
              {
                "FlatSumLeq": [
                  [
                    {
                      "Reference": {
                        "UserName": "y"
                      }
                    },
                    {
                      "Reference": {
                        "UserName": "z"
                      }
                    }
                  ],
                  {
                    "Literal": {
                      "Int": 8
                    }
                  },
                  {
                    "clean": false,
                    "etype": null
                  }
                ]
              }
            ],
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Reference": {
            "MachineName": 1
          }
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "Geq": [
        {
          "Atomic": [
            {
              "Literal": {
                "Int": 5
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Atomic": [
            {
              "Reference": {
                "UserName": "y"
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "geq_to_ineq",
    "rule_set": [
      [
        "Minion",
        4100
      ]
    ],
    "transformed _expression": {
      "FlatIneq": [
        {
          "Int": 0
        },
        {
          "Literal": {
            "Int": 5
          }
        },
        {
          "Reference": {
            "UserName": "y"
          }
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "initial_expression": {
      "Leq": [
        {
          "Atomic": [
            {
              "Literal": {
                "Int": 2
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "Atomic": [
            {
              "Reference": {
                "UserName": "x"
              }
            },
            {
              "clean": false,
              "etype": null
            }
          ]
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    },
    "rule_name": "leq_to_ineq",
    "rule_set": [
      [
        "Minion",
        4100
      ]
    ],
    "transformed _expression": {
      "FlatIneq": [
        {
          "Int": 0
        },
        {
          "Literal": {
            "Int": 2
          }
        },
        {
          "Reference": {
            "UserName": "x"
          }
        },
        {
          "clean": false,
          "etype": null
        }
      ]
    }
  },
  {
    "Number of rules applied": 12
  }
]