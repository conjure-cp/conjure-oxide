
Model before rewriting:

find x: int(1..5)
find y: int(1..5)
find z: int(1..5)

such that

((x < 3)) -> ((y >= 5)),
((Sum([y,z;int(1..2)]) = 8)) -> ((Sum([x,2;int(1..2)]) = 3))

--

Successful Tranformation: 
(x < 3), 
~~> lt_to_leq [8400; Minion]
(x <= Sum([3,-1;int(1..)]))


--

Successful Tranformation: 
Sum([3,-1;int(1..)]), 
~~> constant_evaluator [9001; Constant]
2


--

Successful Tranformation: 
((x <= 2)) -> ((y >= 5)), 
~~> flatten_imply [4200; Minion]
(__0) -> ((y >= 5))
new variables:
  find __0: bool
new constraints:
  __0 =aux (x <= 2)

--

Successful Tranformation: 
(__0) -> ((y >= 5)), 
~~> introduce_reifyimply_ineq_from_imply [4400; Minion]
ReifyImply((y >= 5), __0)


--

Successful Tranformation: 
__0 =aux (x <= 2), 
~~> bool_eq_to_reify [4400; Minion]
Reify((x <= 2), __0)


--

Successful Tranformation: 
((Sum([y,z;int(1..2)]) = 8)) -> ((Sum([x,2;int(1..2)]) = 3)), 
~~> flatten_imply [4200; Minion]
(__1) -> ((Sum([x,2;int(1..2)]) = 3))
new variables:
  find __1: bool
new constraints:
  __1 =aux (Sum([y,z;int(1..2)]) = 8)

--

Successful Tranformation: 
(__1) -> ((Sum([x,2;int(1..2)]) = 3)), 
~~> introduce_reifyimply_ineq_from_imply [4400; Minion]
ReifyImply((Sum([x,2;int(1..2)]) = 3), __1)


--

Successful Tranformation: 
__1 =aux (Sum([y,z;int(1..2)]) = 8), 
~~> bool_eq_to_reify [4400; Minion]
Reify((Sum([y,z;int(1..2)]) = 8), __1)


--

Successful Tranformation: 
(y >= 5), 
~~> geq_to_ineq [4100; Minion]
Ineq(5, y, 0)


--

Successful Tranformation: 
(x <= 2), 
~~> leq_to_ineq [4100; Minion]
Ineq(x, 2, 0)


--

Successful Tranformation: 
Sum([x,2;int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([x,2;int(1..)])


--

Successful Tranformation: 
(Sum([x,2;int(1..)]) = 3), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([x, 2], 3),SumGeq([x, 2], 3);int(1..)])


--

Successful Tranformation: 
Sum([y,z;int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([y,z;int(1..)])


--

Successful Tranformation: 
(Sum([y,z;int(1..)]) = 8), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([y, z], 8),SumGeq([y, z], 8);int(1..)])


--


Final model:

find x: int(1..5)
find y: int(1..5)
find z: int(1..5)
find __0: bool
find __1: bool

such that

ReifyImply(Ineq(5, y, 0), __0),
ReifyImply(and([SumLeq([x, 2], 3),SumGeq([x, 2], 3);int(1..)]), __1),
Reify(Ineq(x, 2, 0), __0),
Reify(and([SumLeq([y, z], 8),SumGeq([y, z], 8);int(1..)]), __1)

