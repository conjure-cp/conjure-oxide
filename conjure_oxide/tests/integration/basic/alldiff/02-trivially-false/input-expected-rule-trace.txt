
Model before rewriting:

find a: int(1..3)
find b: int(1..3)
find c: int(1..3)

such that

allDiff([a,b,a;int(1..3)]),
(a <= b),
(b <= c)

--

Successful Tranformation: 
(a <= b), 
~~> leq_to_ineq [4100; Minion]
Ineq(a, b, 0)


--

Successful Tranformation: 
(b <= c), 
~~> leq_to_ineq [4100; Minion]
Ineq(b, c, 0)


--

Successful Tranformation: 
allDiff([a,b,a;int(1..3)]), 
~~> matrix_to_list [2000; Base]
allDiff([a,b,a;int(1..)])


--

Successful Tranformation: 
allDiff([a,b,a;int(1..)]), 
~~> introduce_flat_alldiff [4200; Minion]
__flat_alldiff([a, b, a])


--


Final model:

find a: int(1..3)
find b: int(1..3)
find c: int(1..3)

such that

__flat_alldiff([a, b, a]),
Ineq(a, b, 0),
Ineq(b, c, 0)

