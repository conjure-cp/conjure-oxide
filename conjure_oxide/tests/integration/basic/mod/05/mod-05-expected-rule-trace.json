{"message":"Rule applicable: flatten_binop ([(\"Minion\", 4400)]), to expression: (a != b % c), resulting in: (a != __0)","target":"rule_engine"}
{"message":"Rule applicable: mod_to_bubble ([(\"Bubble\", 6000)]), to expression: b % c, resulting in: {SafeMod(b,c) @ (c != 0)}","target":"rule_engine"}
{"message":"Rule applicable: bubble_up ([(\"Bubble\", 8900)]), to expression: __0 =aux {SafeMod(b,c) @ (c != 0)}, resulting in: {__0 =aux SafeMod(b,c) @ And([(c != 0)])}","target":"rule_engine"}
{"message":"Rule applicable: expand_bubble ([(\"Bubble\", 8900)]), to expression: {__0 =aux SafeMod(b,c) @ And([(c != 0)])}, resulting in: And([__0 =aux SafeMod(b,c), And([(c != 0)])])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([(a != __0), And([__0 =aux SafeMod(b,c), And([(c != 0)])])]), resulting in: And([(a != __0), __0 =aux SafeMod(b,c), (c != 0)])","target":"rule_engine"}
{"message":"Rule applicable: introduce_modeq ([(\"Minion\", 4200)]), to expression: __0 =aux SafeMod(b,c), resulting in: ModEq(b, c, __0)","target":"rule_engine"}
{"count":6,"message":" Number of rules applied"}
