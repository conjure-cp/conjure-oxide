{"message":"Rule applicable: leq_to_ineq ([(\"Minion\", 4100)]), to expression: (Max([2, a]) <= 2), resulting in: Ineq(Max([2, a]), 2, 0)","target":"rule_engine"}
{"message":"Rule applicable: max_to_var ([(\"Base\", 100)]), to expression: Max([2, a]), resulting in: __0","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([Ineq(__0, 2, 0), And([(__0 >= 2), (__0 >= a), Or([(__0 = 2), (__0 = a)])])]), resulting in: And([Ineq(__0, 2, 0), (__0 >= 2), (__0 >= a), Or([(__0 = 2), (__0 = a)])])","target":"rule_engine"}
{"message":"Rule applicable: geq_to_ineq ([(\"Minion\", 4100)]), to expression: (__0 >= 2), resulting in: Ineq(2, __0, 0)","target":"rule_engine"}
{"message":"Rule applicable: geq_to_ineq ([(\"Minion\", 4100)]), to expression: (__0 >= a), resulting in: Ineq(a, __0, 0)","target":"rule_engine"}
{"count":5,"message":" Number of rules applied"}
