Model before rewriting:

find x: int(1..2)
find y: int(-1..1)
find z: int(-1..1)

such that

(x = UnsafeDiv(-(y), z))

--

UnsafeDiv(-(y), z), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(-(y), z) @ (z != 0)} 

--

(x = {SafeDiv(-(y), z) @ (z != 0)}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(x = SafeDiv(-(y), z)) @ and([(z != 0);int(1..)])} 

--

{(x = SafeDiv(-(y), z)) @ and([(z != 0);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(x = SafeDiv(-(y), z)),and([(z != 0);int(1..)]);int(1..)]) 

--

and([(x = SafeDiv(-(y), z)),and([(z != 0);int(1..)]);int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(x = SafeDiv(-(y), z)),
and([(z != 0);int(1..)]) 

--

(x = SafeDiv(-(y), z)),
and([(z != 0);int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(x = SafeDiv(-(y), z)),
(z != 0) 

--

SafeDiv(-(y), z), 
   ~~> flatten_generic ([("Minion", 4200)]) 
SafeDiv(__0, z) 
new variables:
  find __0: int(-1..1)
new constraints:
  __0 =aux -(y)
--

__0 =aux -(y), 
   ~~> introduce_minuseq_from_aux_decl ([("Minion", 4400)]) 
MinusEq(__0,y) 

--

(x = SafeDiv(__0, z)), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(__0, z, x) 

--

Final model:

find x: int(1..2)
find y: int(-1..1)
find z: int(-1..1)
find __0: int(-1..1)

such that

DivEq(__0, z, x),
(z != 0),
MinusEq(__0,y)

