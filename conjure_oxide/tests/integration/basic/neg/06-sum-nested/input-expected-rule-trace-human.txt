Model before rewriting:

find a: int(-1..1)
find b: int(-1..1)
find x: int(1..3)
find y: int(-1..1)
find z: int(-1..1)

such that

(x = Sum([Sum([-(y),-((Sum([z,1;int(1..2)]) - a));int(1..2)]),b;int(1..2)]))

--

Sum([Sum([-(y),-((Sum([z,1;int(1..2)]) - a));int(1..2)]),b;int(1..2)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([-(y),-((Sum([z,1;int(1..2)]) - a)),b;int(1..2)]) 

--

(Sum([z,1;int(1..2)]) - a), 
   ~~> minus_to_sum ([("Base", 8400)]) 
Sum([Sum([z,1;int(1..2)]),-(a);int(1..)]) 

--

Sum([Sum([z,1;int(1..2)]),-(a);int(1..)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([z,1,-(a);int(1..)]) 

--

-(Sum([z,1,-(a);int(1..)])), 
   ~~> distribute_negation_over_sum ([("Base", 8400)]) 
Sum([-(z),-(1),-(-(a));int(1..)]) 

--

-(1), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
-1 

--

Sum([-(y),Sum([-(z),-1,-(-(a));int(1..)]),b;int(1..2)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([-(y),-(z),-1,-(-(a)),b;int(1..2)]) 

--

-(-(a)), 
   ~~> elmininate_double_negation ([("Base", 8400)]) 
a 

--

Sum([-(y),-(z),-1,a,b;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([-(y),-(z),-1,a,b;int(1..)]) 

--

(x = Sum([-(y),-(z),-1,a,b;int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([FlatWeightedSumLeq([-1, -1, 1, 1, 1],[y, z, -1, a, b],x),FlatWeightedSumGeq([-1, -1, 1, 1, 1],[y, z, -1, a, b],x);int(1..)]) 

--

and([FlatWeightedSumLeq([-1, -1, 1, 1, 1],[y, z, -1, a, b],x),FlatWeightedSumGeq([-1, -1, 1, 1, 1],[y, z, -1, a, b],x);int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
FlatWeightedSumLeq([-1, -1, 1, 1, 1],[y, z, -1, a, b],x),
FlatWeightedSumGeq([-1, -1, 1, 1, 1],[y, z, -1, a, b],x) 

--

Final model:

find a: int(-1..1)
find b: int(-1..1)
find x: int(1..3)
find y: int(-1..1)
find z: int(-1..1)

such that

FlatWeightedSumLeq([-1, -1, 1, 1, 1],[y, z, -1, a, b],x),
FlatWeightedSumGeq([-1, -1, 1, 1, 1],[y, z, -1, a, b],x)

