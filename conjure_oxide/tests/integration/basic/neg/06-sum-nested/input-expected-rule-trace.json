{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: (x = Sum([Sum([-(y), -((Sum([z, 1]) - a))]), b])), resulting in: SumEq([Sum([-(y), -((Sum([z, 1]) - a))]), b], x)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([Sum([-(y), -((Sum([z, 1]) - a))]), b], x), resulting in: And([SumGeq([Sum([-(y), -((Sum([z, 1]) - a))]), b], x), SumLeq([Sum([-(y), -((Sum([z, 1]) - a))]), b], x)])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumGeq([Sum([-(y), -((Sum([z, 1]) - a))]), b], x), resulting in: SumGeq([__0, b], x)","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumLeq([Sum([-(y), -((Sum([z, 1]) - a))]), b], x), resulting in: SumLeq([__1, b], x)","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __0 =aux Sum([-(y), -((Sum([z, 1]) - a))]), resulting in: SumEq([-(y), -((Sum([z, 1]) - a))], __0)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([-(y), -((Sum([z, 1]) - a))], __0), resulting in: And([SumGeq([-(y), -((Sum([z, 1]) - a))], __0), SumLeq([-(y), -((Sum([z, 1]) - a))], __0)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), And([SumGeq([-(y), -((Sum([z, 1]) - a))], __0), SumLeq([-(y), -((Sum([z, 1]) - a))], __0)]), __1 =aux Sum([-(y), -((Sum([z, 1]) - a))])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([-(y), -((Sum([z, 1]) - a))], __0), SumLeq([-(y), -((Sum([z, 1]) - a))], __0), __1 =aux Sum([-(y), -((Sum([z, 1]) - a))])])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumGeq([-(y), -((Sum([z, 1]) - a))], __0), resulting in: SumGeq([__2, __3], __0)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([-(y), -((Sum([z, 1]) - a))], __0), __1 =aux Sum([-(y), -((Sum([z, 1]) - a))]), And([__2 =aux -(y), __3 =aux -((Sum([z, 1]) - a))])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([-(y), -((Sum([z, 1]) - a))], __0), __1 =aux Sum([-(y), -((Sum([z, 1]) - a))]), __2 =aux -(y), __3 =aux -((Sum([z, 1]) - a))])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumLeq([-(y), -((Sum([z, 1]) - a))], __0), resulting in: SumLeq([__4, __5], __0)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), __1 =aux Sum([-(y), -((Sum([z, 1]) - a))]), __2 =aux -(y), __3 =aux -((Sum([z, 1]) - a)), And([__4 =aux -(y), __5 =aux -((Sum([z, 1]) - a))])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), __1 =aux Sum([-(y), -((Sum([z, 1]) - a))]), __2 =aux -(y), __3 =aux -((Sum([z, 1]) - a)), __4 =aux -(y), __5 =aux -((Sum([z, 1]) - a))])","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __1 =aux Sum([-(y), -((Sum([z, 1]) - a))]), resulting in: SumEq([-(y), -((Sum([z, 1]) - a))], __1)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([-(y), -((Sum([z, 1]) - a))], __1), resulting in: And([SumGeq([-(y), -((Sum([z, 1]) - a))], __1), SumLeq([-(y), -((Sum([z, 1]) - a))], __1)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), And([SumGeq([-(y), -((Sum([z, 1]) - a))], __1), SumLeq([-(y), -((Sum([z, 1]) - a))], __1)]), __2 =aux -(y), __3 =aux -((Sum([z, 1]) - a)), __4 =aux -(y), __5 =aux -((Sum([z, 1]) - a))]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([-(y), -((Sum([z, 1]) - a))], __1), SumLeq([-(y), -((Sum([z, 1]) - a))], __1), __2 =aux -(y), __3 =aux -((Sum([z, 1]) - a)), __4 =aux -(y), __5 =aux -((Sum([z, 1]) - a))])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumGeq([-(y), -((Sum([z, 1]) - a))], __1), resulting in: SumGeq([__6, __7], __1)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([-(y), -((Sum([z, 1]) - a))], __1), __2 =aux -(y), __3 =aux -((Sum([z, 1]) - a)), __4 =aux -(y), __5 =aux -((Sum([z, 1]) - a)), And([__6 =aux -(y), __7 =aux -((Sum([z, 1]) - a))])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([-(y), -((Sum([z, 1]) - a))], __1), __2 =aux -(y), __3 =aux -((Sum([z, 1]) - a)), __4 =aux -(y), __5 =aux -((Sum([z, 1]) - a)), __6 =aux -(y), __7 =aux -((Sum([z, 1]) - a))])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumLeq([-(y), -((Sum([z, 1]) - a))], __1), resulting in: SumLeq([__8, __9], __1)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), __2 =aux -(y), __3 =aux -((Sum([z, 1]) - a)), __4 =aux -(y), __5 =aux -((Sum([z, 1]) - a)), __6 =aux -(y), __7 =aux -((Sum([z, 1]) - a)), And([__8 =aux -(y), __9 =aux -((Sum([z, 1]) - a))])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), __2 =aux -(y), __3 =aux -((Sum([z, 1]) - a)), __4 =aux -(y), __5 =aux -((Sum([z, 1]) - a)), __6 =aux -(y), __7 =aux -((Sum([z, 1]) - a)), __8 =aux -(y), __9 =aux -((Sum([z, 1]) - a))])","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __2 =aux -(y), resulting in: MinusEq(__2,y)","target":"rule_engine"}
{"message":"Rule applicable: flatten_minuseq ([(\"Minion\", 4400)]), to expression: __3 =aux -((Sum([z, 1]) - a)), resulting in: MinusEq(__3,__10)","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __4 =aux -(y), resulting in: MinusEq(__4,y)","target":"rule_engine"}
{"message":"Rule applicable: flatten_minuseq ([(\"Minion\", 4400)]), to expression: __5 =aux -((Sum([z, 1]) - a)), resulting in: MinusEq(__5,__11)","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __6 =aux -(y), resulting in: MinusEq(__6,y)","target":"rule_engine"}
{"message":"Rule applicable: flatten_minuseq ([(\"Minion\", 4400)]), to expression: __7 =aux -((Sum([z, 1]) - a)), resulting in: MinusEq(__7,__12)","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __8 =aux -(y), resulting in: MinusEq(__8,y)","target":"rule_engine"}
{"message":"Rule applicable: flatten_minuseq ([(\"Minion\", 4400)]), to expression: __9 =aux -((Sum([z, 1]) - a)), resulting in: MinusEq(__9,__13)","target":"rule_engine"}
{"message":"Rule applicable: minus_to_sum ([(\"Base\", 8400)]), to expression: (Sum([z, 1]) - a), resulting in: Sum([Sum([z, 1]), -(a)])","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __10 =aux Sum([Sum([z, 1]), -(a)]), resulting in: SumEq([Sum([z, 1]), -(a)], __10)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([Sum([z, 1]), -(a)], __10), resulting in: And([SumGeq([Sum([z, 1]), -(a)], __10), SumLeq([Sum([z, 1]), -(a)], __10)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), And([SumGeq([Sum([z, 1]), -(a)], __10), SumLeq([Sum([z, 1]), -(a)], __10)]), __11 =aux (Sum([z, 1]) - a), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([Sum([z, 1]), -(a)], __10), SumLeq([Sum([z, 1]), -(a)], __10), __11 =aux (Sum([z, 1]) - a), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a)])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumGeq([Sum([z, 1]), -(a)], __10), resulting in: SumGeq([__14, __15], __10)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([Sum([z, 1]), -(a)], __10), __11 =aux (Sum([z, 1]) - a), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a), And([__14 =aux Sum([z, 1]), __15 =aux -(a)])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([Sum([z, 1]), -(a)], __10), __11 =aux (Sum([z, 1]) - a), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumLeq([Sum([z, 1]), -(a)], __10), resulting in: SumLeq([__16, __17], __10)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), __11 =aux (Sum([z, 1]) - a), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), And([__16 =aux Sum([z, 1]), __17 =aux -(a)])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), __11 =aux (Sum([z, 1]) - a), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: minus_to_sum ([(\"Base\", 8400)]), to expression: (Sum([z, 1]) - a), resulting in: Sum([Sum([z, 1]), -(a)])","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __11 =aux Sum([Sum([z, 1]), -(a)]), resulting in: SumEq([Sum([z, 1]), -(a)], __11)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([Sum([z, 1]), -(a)], __11), resulting in: And([SumGeq([Sum([z, 1]), -(a)], __11), SumLeq([Sum([z, 1]), -(a)], __11)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), And([SumGeq([Sum([z, 1]), -(a)], __11), SumLeq([Sum([z, 1]), -(a)], __11)]), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([Sum([z, 1]), -(a)], __11), SumLeq([Sum([z, 1]), -(a)], __11), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumGeq([Sum([z, 1]), -(a)], __11), resulting in: SumGeq([__18, __19], __11)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([Sum([z, 1]), -(a)], __11), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), And([__18 =aux Sum([z, 1]), __19 =aux -(a)])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([Sum([z, 1]), -(a)], __11), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumLeq([Sum([z, 1]), -(a)], __11), resulting in: SumLeq([__20, __21], __11)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), And([__20 =aux Sum([z, 1]), __21 =aux -(a)])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), __12 =aux (Sum([z, 1]) - a), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: minus_to_sum ([(\"Base\", 8400)]), to expression: (Sum([z, 1]) - a), resulting in: Sum([Sum([z, 1]), -(a)])","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __12 =aux Sum([Sum([z, 1]), -(a)]), resulting in: SumEq([Sum([z, 1]), -(a)], __12)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([Sum([z, 1]), -(a)], __12), resulting in: And([SumGeq([Sum([z, 1]), -(a)], __12), SumLeq([Sum([z, 1]), -(a)], __12)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), And([SumGeq([Sum([z, 1]), -(a)], __12), SumLeq([Sum([z, 1]), -(a)], __12)]), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([Sum([z, 1]), -(a)], __12), SumLeq([Sum([z, 1]), -(a)], __12), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumGeq([Sum([z, 1]), -(a)], __12), resulting in: SumGeq([__22, __23], __12)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([Sum([z, 1]), -(a)], __12), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), And([__22 =aux Sum([z, 1]), __23 =aux -(a)])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([Sum([z, 1]), -(a)], __12), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumLeq([Sum([z, 1]), -(a)], __12), resulting in: SumLeq([__24, __25], __12)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), And([__24 =aux Sum([z, 1]), __25 =aux -(a)])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), __13 =aux (Sum([z, 1]) - a), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: minus_to_sum ([(\"Base\", 8400)]), to expression: (Sum([z, 1]) - a), resulting in: Sum([Sum([z, 1]), -(a)])","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __13 =aux Sum([Sum([z, 1]), -(a)]), resulting in: SumEq([Sum([z, 1]), -(a)], __13)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([Sum([z, 1]), -(a)], __13), resulting in: And([SumGeq([Sum([z, 1]), -(a)], __13), SumLeq([Sum([z, 1]), -(a)], __13)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), And([SumGeq([Sum([z, 1]), -(a)], __13), SumLeq([Sum([z, 1]), -(a)], __13)]), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([Sum([z, 1]), -(a)], __13), SumLeq([Sum([z, 1]), -(a)], __13), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumGeq([Sum([z, 1]), -(a)], __13), resulting in: SumGeq([__26, __27], __13)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([Sum([z, 1]), -(a)], __13), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), And([__26 =aux Sum([z, 1]), __27 =aux -(a)])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([Sum([z, 1]), -(a)], __13), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: flatten_vecop ([(\"Minion\", 4400)]), to expression: SumLeq([Sum([z, 1]), -(a)], __13), resulting in: SumLeq([__28, __29], __13)","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), And([__28 =aux Sum([z, 1]), __29 =aux -(a)])]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), __14 =aux Sum([z, 1]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __14 =aux Sum([z, 1]), resulting in: SumEq([z, 1], __14)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([z, 1], __14), resulting in: And([SumGeq([z, 1], __14), SumLeq([z, 1], __14)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), And([SumGeq([z, 1], __14), SumLeq([z, 1], __14)]), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), __15 =aux -(a), __16 =aux Sum([z, 1]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __15 =aux -(a), resulting in: MinusEq(__15,a)","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __16 =aux Sum([z, 1]), resulting in: SumEq([z, 1], __16)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([z, 1], __16), resulting in: And([SumGeq([z, 1], __16), SumLeq([z, 1], __16)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), And([SumGeq([z, 1], __16), SumLeq([z, 1], __16)]), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), __17 =aux -(a), __18 =aux Sum([z, 1]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __17 =aux -(a), resulting in: MinusEq(__17,a)","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __18 =aux Sum([z, 1]), resulting in: SumEq([z, 1], __18)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([z, 1], __18), resulting in: And([SumGeq([z, 1], __18), SumLeq([z, 1], __18)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), And([SumGeq([z, 1], __18), SumLeq([z, 1], __18)]), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), __19 =aux -(a), __20 =aux Sum([z, 1]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __19 =aux -(a), resulting in: MinusEq(__19,a)","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __20 =aux Sum([z, 1]), resulting in: SumEq([z, 1], __20)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([z, 1], __20), resulting in: And([SumGeq([z, 1], __20), SumLeq([z, 1], __20)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), MinusEq(__19,a), And([SumGeq([z, 1], __20), SumLeq([z, 1], __20)]), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), MinusEq(__19,a), SumGeq([z, 1], __20), SumLeq([z, 1], __20), __21 =aux -(a), __22 =aux Sum([z, 1]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __21 =aux -(a), resulting in: MinusEq(__21,a)","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __22 =aux Sum([z, 1]), resulting in: SumEq([z, 1], __22)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([z, 1], __22), resulting in: And([SumGeq([z, 1], __22), SumLeq([z, 1], __22)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), MinusEq(__19,a), SumGeq([z, 1], __20), SumLeq([z, 1], __20), MinusEq(__21,a), And([SumGeq([z, 1], __22), SumLeq([z, 1], __22)]), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), MinusEq(__19,a), SumGeq([z, 1], __20), SumLeq([z, 1], __20), MinusEq(__21,a), SumGeq([z, 1], __22), SumLeq([z, 1], __22), __23 =aux -(a), __24 =aux Sum([z, 1]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __23 =aux -(a), resulting in: MinusEq(__23,a)","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __24 =aux Sum([z, 1]), resulting in: SumEq([z, 1], __24)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([z, 1], __24), resulting in: And([SumGeq([z, 1], __24), SumLeq([z, 1], __24)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), MinusEq(__19,a), SumGeq([z, 1], __20), SumLeq([z, 1], __20), MinusEq(__21,a), SumGeq([z, 1], __22), SumLeq([z, 1], __22), MinusEq(__23,a), And([SumGeq([z, 1], __24), SumLeq([z, 1], __24)]), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), MinusEq(__19,a), SumGeq([z, 1], __20), SumLeq([z, 1], __20), MinusEq(__21,a), SumGeq([z, 1], __22), SumLeq([z, 1], __22), MinusEq(__23,a), SumGeq([z, 1], __24), SumLeq([z, 1], __24), __25 =aux -(a), __26 =aux Sum([z, 1]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __25 =aux -(a), resulting in: MinusEq(__25,a)","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __26 =aux Sum([z, 1]), resulting in: SumEq([z, 1], __26)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([z, 1], __26), resulting in: And([SumGeq([z, 1], __26), SumLeq([z, 1], __26)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), MinusEq(__19,a), SumGeq([z, 1], __20), SumLeq([z, 1], __20), MinusEq(__21,a), SumGeq([z, 1], __22), SumLeq([z, 1], __22), MinusEq(__23,a), SumGeq([z, 1], __24), SumLeq([z, 1], __24), MinusEq(__25,a), And([SumGeq([z, 1], __26), SumLeq([z, 1], __26)]), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), MinusEq(__19,a), SumGeq([z, 1], __20), SumLeq([z, 1], __20), MinusEq(__21,a), SumGeq([z, 1], __22), SumLeq([z, 1], __22), MinusEq(__23,a), SumGeq([z, 1], __24), SumLeq([z, 1], __24), MinusEq(__25,a), SumGeq([z, 1], __26), SumLeq([z, 1], __26), __27 =aux -(a), __28 =aux Sum([z, 1]), __29 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __27 =aux -(a), resulting in: MinusEq(__27,a)","target":"rule_engine"}
{"message":"Rule applicable: sum_eq_to_sumeq ([(\"Minion\", 4400)]), to expression: __28 =aux Sum([z, 1]), resulting in: SumEq([z, 1], __28)","target":"rule_engine"}
{"message":"Rule applicable: sumeq_to_minion ([(\"Minion\", 4400)]), to expression: SumEq([z, 1], __28), resulting in: And([SumGeq([z, 1], __28), SumLeq([z, 1], __28)])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), MinusEq(__19,a), SumGeq([z, 1], __20), SumLeq([z, 1], __20), MinusEq(__21,a), SumGeq([z, 1], __22), SumLeq([z, 1], __22), MinusEq(__23,a), SumGeq([z, 1], __24), SumLeq([z, 1], __24), MinusEq(__25,a), SumGeq([z, 1], __26), SumLeq([z, 1], __26), MinusEq(__27,a), And([SumGeq([z, 1], __28), SumLeq([z, 1], __28)]), __29 =aux -(a)]), resulting in: And([SumGeq([__0, b], x), SumLeq([__1, b], x), SumGeq([__2, __3], __0), SumLeq([__4, __5], __0), SumGeq([__6, __7], __1), SumLeq([__8, __9], __1), MinusEq(__2,y), MinusEq(__3,__10), MinusEq(__4,y), MinusEq(__5,__11), MinusEq(__6,y), MinusEq(__7,__12), MinusEq(__8,y), MinusEq(__9,__13), SumGeq([__14, __15], __10), SumLeq([__16, __17], __10), SumGeq([__18, __19], __11), SumLeq([__20, __21], __11), SumGeq([__22, __23], __12), SumLeq([__24, __25], __12), SumGeq([__26, __27], __13), SumLeq([__28, __29], __13), SumGeq([z, 1], __14), SumLeq([z, 1], __14), MinusEq(__15,a), SumGeq([z, 1], __16), SumLeq([z, 1], __16), MinusEq(__17,a), SumGeq([z, 1], __18), SumLeq([z, 1], __18), MinusEq(__19,a), SumGeq([z, 1], __20), SumLeq([z, 1], __20), MinusEq(__21,a), SumGeq([z, 1], __22), SumLeq([z, 1], __22), MinusEq(__23,a), SumGeq([z, 1], __24), SumLeq([z, 1], __24), MinusEq(__25,a), SumGeq([z, 1], __26), SumLeq([z, 1], __26), MinusEq(__27,a), SumGeq([z, 1], __28), SumLeq([z, 1], __28), __29 =aux -(a)])","target":"rule_engine"}
{"message":"Rule applicable: introduce_minuseq_from_aux_decl ([(\"Minion\", 4400)]), to expression: __29 =aux -(a), resulting in: MinusEq(__29,a)","target":"rule_engine"}
{"count":90,"message":" Number of rules applied"}
