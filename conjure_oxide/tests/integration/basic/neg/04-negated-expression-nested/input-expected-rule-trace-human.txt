UnsafeDiv(y, z), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(y, z) @ (z != 0)} 

--

-({SafeDiv(y, z) @ (z != 0)}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{-(SafeDiv(y, z)) @ And([(z != 0)])} 

--

UnsafeDiv({-(SafeDiv(y, z)) @ And([(z != 0)])}, z), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{UnsafeDiv(-(SafeDiv(y, z)), z) @ And([And([(z != 0)])])} 

--

(x = {UnsafeDiv(-(SafeDiv(y, z)), z) @ And([And([(z != 0)])])}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(x = UnsafeDiv(-(SafeDiv(y, z)), z)) @ And([And([And([(z != 0)])])])} 

--

{(x = UnsafeDiv(-(SafeDiv(y, z)), z)) @ And([And([And([(z != 0)])])])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
And([(x = UnsafeDiv(-(SafeDiv(y, z)), z)), And([And([And([(z != 0)])])])]) 

--

And([And([And([(z != 0)])])]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
And([And([(z != 0)])]) 

--

And([And([(z != 0)])]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
And([(z != 0)]) 

--

And([(z != 0)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(z != 0) 

--

UnsafeDiv(-(SafeDiv(y, z)), z), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(-(SafeDiv(y, z)), z) @ (z != 0)} 

--

(x = {SafeDiv(-(SafeDiv(y, z)), z) @ (z != 0)}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(x = SafeDiv(-(SafeDiv(y, z)), z)) @ And([(z != 0)])} 

--

{(x = SafeDiv(-(SafeDiv(y, z)), z)) @ And([(z != 0)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
And([(x = SafeDiv(-(SafeDiv(y, z)), z)), And([(z != 0)])]) 

--

And([And([(x = SafeDiv(-(SafeDiv(y, z)), z)), And([(z != 0)])]), (z != 0)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
And([(x = SafeDiv(-(SafeDiv(y, z)), z)), (z != 0), (z != 0)]) 

--

SafeDiv(-(SafeDiv(y, z)), z), 
   ~~> flatten_binop ([("Minion", 4200)]) 
SafeDiv(__0, z) 
new variables:
  __0: int(-1..1)
new constraints:
  __0 =aux -(SafeDiv(y, z))
--

(x = SafeDiv(__0, z)), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(__0, z, x) 

--

__0 =aux -(SafeDiv(y, z)), 
   ~~> flatten_minuseq ([("Minion", 4200)]) 
MinusEq(__0,__1) 
new variables:
  __1: int(-1..1)
new constraints:
  __1 =aux SafeDiv(y, z)
--

__1 =aux SafeDiv(y, z), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(y, z, __1) 

--

