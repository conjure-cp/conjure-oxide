Model before rewriting:

find x: int(1..2)
find y: int(-1..1)
find z: int(-1..1)

such that

(x = -(UnsafeDiv(y, z)))

--

UnsafeDiv(y, z), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(y, z) @ (z != 0)} 

--

-({SafeDiv(y, z) @ (z != 0)}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{-(SafeDiv(y, z)) @ and([(z != 0);int(1..)])} 

--

(x = {-(SafeDiv(y, z)) @ and([(z != 0);int(1..)])}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(x = -(SafeDiv(y, z))) @ and([and([(z != 0);int(1..)]);int(1..)])} 

--

{(x = -(SafeDiv(y, z))) @ and([and([(z != 0);int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(x = -(SafeDiv(y, z))),and([and([(z != 0);int(1..)]);int(1..)]);int(1..)]) 

--

and([and([(z != 0);int(1..)]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
and([(z != 0);int(1..)]) 

--

and([(z != 0);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(z != 0) 

--

-(SafeDiv(y, z)), 
   ~~> flatten_generic ([("Minion", 4200)]) 
-(__0) 
new variables:
  find __0: int(-1..1)
new constraints:
  __0 =aux SafeDiv(y, z)
--

(x = -(__0)), 
   ~~> introduce_minuseq_from_eq ([("Minion", 4400)]) 
MinusEq(x,__0) 

--

__0 =aux SafeDiv(y, z), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(y, z, __0) 

--

Final model:

find x: int(1..2)
find y: int(-1..1)
find z: int(-1..1)
find __0: int(-1..1)

such that

and([MinusEq(x,__0),(z != 0);int(1..)]),
DivEq(y, z, __0)

