
Model before rewriting:

letting A be domain bool
letting B be domain int(1..3)
find x: A
find y: B

such that

(x) -> ((y < 3))

--

Successful Tranformation: 
(y < 3), 
~~> lt_to_leq [8400; Minion]
(y <= Sum([3,-1;int(1..)]))


--

Successful Tranformation: 
Sum([3,-1;int(1..)]), 
~~> constant_evaluator [9001; Constant]
2


--

Successful Tranformation: 
(x) -> ((y <= 2)), 
~~> substitute_domain_lettings [5000; Base]
(x) -> ((y <= 2))


--

Successful Tranformation: 
(x) -> ((y <= 2)), 
~~> introduce_reifyimply_ineq_from_imply [4400; Minion]
ReifyImply((y <= 2), x)


--

Successful Tranformation: 
(y <= 2), 
~~> leq_to_ineq [4100; Minion]
Ineq(y, 2, 0)


--


Final model:

letting A be domain bool
letting B be domain int(1..3)
find x: bool
find y: int(1..3)

such that

ReifyImply(Ineq(y, 2, 0), x)

