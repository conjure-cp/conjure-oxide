Model before rewriting:

letting A be false
letting NotA be Not(Not(Not(A)))
find b: int(1..20)

such that

(NotA) -> ((b < 3))

--

(b < 3), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(b <= Sum([3, -1])) 

--

Sum([3, -1]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
2 

--

(NotA) -> ((b <= 2)), 
   ~~> introduce_reifyimply_ineq_from_imply ([("Minion", 4400)]) 
ReifyImply((b <= 2), NotA) 

--

(b <= 2), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(b, 2, 0) 

--

Final model:

letting A be false
letting NotA be Not(Not(Not(A)))
find b: int(1..20)

such that

ReifyImply(Ineq(b, 2, 0), NotA)

