Model before rewriting:

letting MATRIX be domain matrix indexed by [[int(1..3), int(1..2)]] of int(1..3)
find a: MATRIX

such that

allDiff(a[..,1]),
allDiff(a[..,3]),
allDiff(a[1,..]),
allDiff(a[2,..]),
allDiff(a[3,..]),
(a[1, 1] = 1),
(a[2, 2] = 1)

--

a, 
   ~~> select_representation ([("Base", 8000)]) 
a#matrix_to_atom 
new variables:
  find a#matrix_to_atom_1_1: int(1..3)
  find a#matrix_to_atom_1_2: int(1..3)
  find a#matrix_to_atom_2_1: int(1..3)
  find a#matrix_to_atom_2_2: int(1..3)
  find a#matrix_to_atom_3_1: int(1..3)
  find a#matrix_to_atom_3_2: int(1..3)
--

a, 
   ~~> select_representation ([("Base", 8000)]) 
a#matrix_to_atom 

--

a, 
   ~~> select_representation ([("Base", 8000)]) 
a#matrix_to_atom 

--

a, 
   ~~> select_representation ([("Base", 8000)]) 
a#matrix_to_atom 

--

a, 
   ~~> select_representation ([("Base", 8000)]) 
a#matrix_to_atom 

--

a, 
   ~~> select_representation ([("Base", 8000)]) 
a#matrix_to_atom 

--

a, 
   ~~> select_representation ([("Base", 8000)]) 
a#matrix_to_atom 

--

a#matrix_to_atom[..,1], 
   ~~> slice_to_bubble ([("Bubble", 6000)]) 
{a#matrix_to_atom[..,1] @ and([__inDomain(1,int(1..2));int(1..)])} 

--

and([__inDomain(1,int(1..2));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

allDiff({a#matrix_to_atom[..,1] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{allDiff(a#matrix_to_atom[..,1]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{allDiff(a#matrix_to_atom[..,1]) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([allDiff(a#matrix_to_atom[..,1]),true;int(1..)]) 

--

and([allDiff(a#matrix_to_atom[..,1]),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([allDiff(a#matrix_to_atom[..,1]);int(1..)]) 

--

and([allDiff(a#matrix_to_atom[..,1]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
allDiff(a#matrix_to_atom[..,1]) 

--

a#matrix_to_atom[..,3], 
   ~~> slice_to_bubble ([("Bubble", 6000)]) 
{a#matrix_to_atom[..,3] @ and([__inDomain(3,int(1..2));int(1..)])} 

--

and([__inDomain(3,int(1..2));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
false 

--

allDiff({a#matrix_to_atom[..,3] @ false}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{allDiff(a#matrix_to_atom[..,3]) @ and([false;int(1..)])} 

--

and([false;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
false 

--

{allDiff(a#matrix_to_atom[..,3]) @ false}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([allDiff(a#matrix_to_atom[..,3]),false;int(1..)]) 

--

and([allDiff(a#matrix_to_atom[..,3]),false;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
false 

--

allDiff(a#matrix_to_atom[..,1]),
false,
allDiff(a#matrix_to_atom[1,..]),
allDiff(a#matrix_to_atom[2,..]),
allDiff(a#matrix_to_atom[3,..]),
(a#matrix_to_atom[1, 1] = 1),
(a#matrix_to_atom[2, 2] = 1), 
   ~~> partial_evaluator ([("Base", 9000)]) 
false 

--

false, 
   ~~> substitute_domain_lettings ([("Base", 5000)]) 
false 

--

Final model:

letting MATRIX be domain matrix indexed by [[int(1..3), int(1..2)]] of int(1..3)
find a: matrix indexed by [[int(1..3), int(1..2)]] of int(1..3)
find a#matrix_to_atom_1_1: int(1..3)
find a#matrix_to_atom_1_2: int(1..3)
find a#matrix_to_atom_2_1: int(1..3)
find a#matrix_to_atom_2_2: int(1..3)
find a#matrix_to_atom_3_1: int(1..3)
find a#matrix_to_atom_3_2: int(1..3)

such that

false

