Model before rewriting:

find a: matrix indexed by [[int(1..3), int(1..2)]] of int(1..3)

such that

allDiff(a[..,1]),
allDiff(a[..,2]),
allDiff(a[1,..]),
allDiff(a[2,..]),
allDiff(a[3,..]),
(a[1, 1] = 1),
(a[2, 2] = 1)

--

a[..,1], 
   ~~> slice_to_bubble ([("Bubble", 6000)]) 
{a[..,1] @ and([__inDomain(1,int(1..2));int(1..)])} 

--

and([__inDomain(1,int(1..2));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

allDiff({a[..,1] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{allDiff(a[..,1]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{allDiff(a[..,1]) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([allDiff(a[..,1]),true;int(1..)]) 

--

and([allDiff(a[..,1]),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([allDiff(a[..,1]);int(1..)]) 

--

and([allDiff(a[..,1]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
allDiff(a[..,1]) 

--

a[..,2], 
   ~~> slice_to_bubble ([("Bubble", 6000)]) 
{a[..,2] @ and([__inDomain(2,int(1..2));int(1..)])} 

--

and([__inDomain(2,int(1..2));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

allDiff({a[..,2] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{allDiff(a[..,2]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{allDiff(a[..,2]) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([allDiff(a[..,2]),true;int(1..)]) 

--

and([allDiff(a[..,2]),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([allDiff(a[..,2]);int(1..)]) 

--

and([allDiff(a[..,2]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
allDiff(a[..,2]) 

--

a[1,..], 
   ~~> slice_to_bubble ([("Bubble", 6000)]) 
{a[1,..] @ and([__inDomain(1,int(1..3));int(1..)])} 

--

and([__inDomain(1,int(1..3));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

allDiff({a[1,..] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{allDiff(a[1,..]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{allDiff(a[1,..]) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([allDiff(a[1,..]),true;int(1..)]) 

--

and([allDiff(a[1,..]),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([allDiff(a[1,..]);int(1..)]) 

--

and([allDiff(a[1,..]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
allDiff(a[1,..]) 

--

a[2,..], 
   ~~> slice_to_bubble ([("Bubble", 6000)]) 
{a[2,..] @ and([__inDomain(2,int(1..3));int(1..)])} 

--

and([__inDomain(2,int(1..3));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

allDiff({a[2,..] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{allDiff(a[2,..]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{allDiff(a[2,..]) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([allDiff(a[2,..]),true;int(1..)]) 

--

and([allDiff(a[2,..]),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([allDiff(a[2,..]);int(1..)]) 

--

and([allDiff(a[2,..]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
allDiff(a[2,..]) 

--

a[3,..], 
   ~~> slice_to_bubble ([("Bubble", 6000)]) 
{a[3,..] @ and([__inDomain(3,int(1..3));int(1..)])} 

--

and([__inDomain(3,int(1..3));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

allDiff({a[3,..] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{allDiff(a[3,..]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{allDiff(a[3,..]) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([allDiff(a[3,..]),true;int(1..)]) 

--

and([allDiff(a[3,..]),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([allDiff(a[3,..]);int(1..)]) 

--

and([allDiff(a[3,..]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
allDiff(a[3,..]) 

--

a[1, 1], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{a[1, 1] @ and([__inDomain(1,int(1..3)),__inDomain(1,int(1..2));int(1..)])} 

--

and([__inDomain(1,int(1..3)),__inDomain(1,int(1..2));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

({a[1, 1] @ true} = 1), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(a[1, 1] = 1) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{(a[1, 1] = 1) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(a[1, 1] = 1),true;int(1..)]) 

--

and([(a[1, 1] = 1),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(a[1, 1] = 1);int(1..)]) 

--

and([(a[1, 1] = 1);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(a[1, 1] = 1) 

--

a[2, 2], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{a[2, 2] @ and([__inDomain(2,int(1..3)),__inDomain(2,int(1..2));int(1..)])} 

--

and([__inDomain(2,int(1..3)),__inDomain(2,int(1..2));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

({a[2, 2] @ true} = 1), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(a[2, 2] = 1) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{(a[2, 2] = 1) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(a[2, 2] = 1),true;int(1..)]) 

--

and([(a[2, 2] = 1),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(a[2, 2] = 1);int(1..)]) 

--

and([(a[2, 2] = 1);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(a[2, 2] = 1) 

--

Final model:

find a: matrix indexed by [[int(1..3), int(1..2)]] of int(1..3)

such that

allDiff(a[..,1]),
allDiff(a[..,2]),
allDiff(a[1,..]),
allDiff(a[2,..]),
allDiff(a[3,..]),
(a[1, 1] = 1),
(a[2, 2] = 1)

