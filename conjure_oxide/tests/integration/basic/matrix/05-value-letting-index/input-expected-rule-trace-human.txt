Model before rewriting:

letting a be [[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)]
find b: int(1..5)

such that

(b < a[-(2), 2]),
allDiff(a[-(2),..])

--

-(2), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
-2 

--

-(2), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
-2 

--

(b < a[-2, 2]), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(b <= Sum([a[-2, 2],-1;int(1..)])) 

--

a, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
[[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)] 

--

Sum([[[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)][-2, 2],-1;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
1 

--

a, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
[[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)] 

--

[[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)][-2,..], 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
Matrix([Int(1), Int(2), Int(3)], IntDomain([UnboundedR(1)])) 

--

allDiff(Matrix([Int(1), Int(2), Int(3)], IntDomain([UnboundedR(1)]))), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

(b <= 1),
true, 
   ~~> partial_evaluator ([("Base", 9000)]) 
(b <= 1) 

--

(b <= 1), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(b, 1, 0) 

--

Final model:

letting a be [[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)]
find b: int(1..5)

such that

Ineq(b, 1, 0)

