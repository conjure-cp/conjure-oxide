Model before rewriting:

letting a be [[1,2,3;int(1..3)],[4,5,6;int(1..3)],[7,8,9;int(1..3)];int(1..3)]
find b: int(1..10)

such that

(b > a[3, 3])

--

(b > a[3, 3]), 
   ~~> gt_to_geq ([("Minion", 8400)]) 
(Sum([b, -1]) >= a[3, 3]) 

--

a, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
[[1,2,3;int(1..3)],[4,5,6;int(1..3)],[7,8,9;int(1..3)];int(1..3)] 

--

(Sum([b, -1]) >= [[1,2,3;int(1..3)],[4,5,6;int(1..3)],[7,8,9;int(1..3)];int(1..3)][3, 3]), 
   ~~> flatten_generic ([("Minion", 4200)]) 
(__0 >= [[1,2,3;int(1..3)],[4,5,6;int(1..3)],[7,8,9;int(1..3)];int(1..3)][3, 3]) 
new variables:
  find __0: int(0..9)
new constraints:
  __0 =aux Sum([b, -1])
--

__0 =aux Sum([b, -1]), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([b, -1], __0),SumGeq([b, -1], __0);int(1..)]) 

--

[[1,2,3;int(1..3)],[4,5,6;int(1..3)],[7,8,9;int(1..3)];int(1..3)][3, 3], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[[1,2,3;int(1..3)],[4,5,6;int(1..3)],[7,8,9;int(1..3)];int(1..)][3, 3] 

--

Final model:

letting a be [[1,2,3;int(1..3)],[4,5,6;int(1..3)],[7,8,9;int(1..3)];int(1..3)]
find b: int(1..10)
find __0: int(0..9)

such that

(__0 >= [[1,2,3;int(1..3)],[4,5,6;int(1..3)],[7,8,9;int(1..3)];int(1..)][3, 3]),
and([SumLeq([b, -1], __0),SumGeq([b, -1], __0);int(1..)])

