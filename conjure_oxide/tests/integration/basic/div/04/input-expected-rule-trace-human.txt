Model before rewriting:

find a: int(0..3)
find b: int(0..3)
find c: int(0..3)

such that

Not((a = UnsafeDiv(b, c)))

--

UnsafeDiv(b, c), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(b, c) @ (c != 0)} 

--

(a = {SafeDiv(b, c) @ (c != 0)}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(a = SafeDiv(b, c)) @ and([(c != 0);int(1..)])} 

--

{(a = SafeDiv(b, c)) @ and([(c != 0);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(a = SafeDiv(b, c)),and([(c != 0);int(1..)]);int(1..)]) 

--

and([(c != 0);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(c != 0) 

--

Not(and([(a = SafeDiv(b, c)),(c != 0);int(1..)])), 
   ~~> distribute_not_over_and ([("Base", 8400)]) 
or([Not((a = SafeDiv(b, c))),Not((c != 0));int(1..)]) 

--

Not((a = SafeDiv(b, c))), 
   ~~> negated_eq_to_neq ([("Base", 8800)]) 
(a != SafeDiv(b, c)) 

--

Not((c != 0)), 
   ~~> negated_neq_to_eq ([("Base", 8800)]) 
(c = 0) 

--

(a != SafeDiv(b, c)), 
   ~~> flatten_generic ([("Minion", 4200)]) 
(a != __0) 
new variables:
  find __0: int(0..3)
new constraints:
  __0 =aux SafeDiv(b, c)
--

__0 =aux SafeDiv(b, c), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(b, c, __0) 

--

Final model:

find a: int(0..3)
find b: int(0..3)
find c: int(0..3)
find __0: int(0..3)

such that

or([(a != __0),(c = 0);int(1..)]),
DivEq(b, c, __0)

