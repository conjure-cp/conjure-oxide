{"message":"Rule applicable: geq_to_ineq ([(\"Minion\", 4100)]), to expression: (Min([a, b]) >= 3), resulting in: Ineq(3, Min([a, b]), 0)","target":"rule_engine"}
{"message":"Rule applicable: min_to_var ([(\"Base\", 2000)]), to expression: Min([a, b]), resulting in: __0","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([Ineq(3, __0, 0), And([(__0 <= a), (__0 <= b), Or([(__0 = a), (__0 = b)])])]), resulting in: And([Ineq(3, __0, 0), (__0 <= a), (__0 <= b), Or([(__0 = a), (__0 = b)])])","target":"rule_engine"}
{"message":"Rule applicable: leq_to_ineq ([(\"Minion\", 4100)]), to expression: (__0 <= a), resulting in: Ineq(__0, a, 0)","target":"rule_engine"}
{"message":"Rule applicable: leq_to_ineq ([(\"Minion\", 4100)]), to expression: (__0 <= b), resulting in: Ineq(__0, b, 0)","target":"rule_engine"}
{"count":5,"message":" Number of rules applied"}
