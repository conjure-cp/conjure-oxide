
[
{
  "initial_expression": {
    "Min": [
      {
        "clean": false,
        "etype": null
      },
      {
        "AbstractLiteral": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Matrix": [
              [
                {
                  "Atomic": [
                    {
                      "clean": false,
                      "etype": null
                    },
                    {
                      "Reference": {
                        "UserName": "a"
                      }
                    }
                  ]
                },
                {
                  "Atomic": [
                    {
                      "clean": false,
                      "etype": null
                    },
                    {
                      "Reference": {
                        "UserName": "b"
                      }
                    }
                  ]
                }
              ],
              {
                "IntDomain": [
                  {
                    "Bounded": [
                      1,
                      2
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "rule_name": "matrix_to_list",
  "rule_priority": 2000,
  "rule_set_name": "Base",
  "transformed_expression": {
    "Min": [
      {
        "clean": false,
        "etype": null
      },
      {
        "AbstractLiteral": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Matrix": [
              [
                {
                  "Atomic": [
                    {
                      "clean": false,
                      "etype": null
                    },
                    {
                      "Reference": {
                        "UserName": "a"
                      }
                    }
                  ]
                },
                {
                  "Atomic": [
                    {
                      "clean": false,
                      "etype": null
                    },
                    {
                      "Reference": {
                        "UserName": "b"
                      }
                    }
                  ]
                }
              ],
              {
                "IntDomain": [
                  {
                    "UnboundedR": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "new_variables_str": "",
  "top_level_str": ""
}
,{
  "initial_expression": {
    "Min": [
      {
        "clean": false,
        "etype": null
      },
      {
        "AbstractLiteral": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Matrix": [
              [
                {
                  "Atomic": [
                    {
                      "clean": false,
                      "etype": null
                    },
                    {
                      "Reference": {
                        "UserName": "a"
                      }
                    }
                  ]
                },
                {
                  "Atomic": [
                    {
                      "clean": false,
                      "etype": null
                    },
                    {
                      "Reference": {
                        "UserName": "b"
                      }
                    }
                  ]
                }
              ],
              {
                "IntDomain": [
                  {
                    "UnboundedR": 1
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "rule_name": "min_to_var",
  "rule_priority": 6000,
  "rule_set_name": "Base",
  "transformed_expression": {
    "Atomic": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Reference": {
          "MachineName": 0
        }
      }
    ]
  },
  "new_variables_str": "new variables:\n  find __0: int(1..4)",
  "top_level_str": "new constraints:\n  (__0 <= a)\n  (__0 <= b)\n  or([(__0 = a),(__0 = b);int(1..)])\n"
}
,{
  "initial_expression": {
    "Leq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Reference": {
              "MachineName": 0
            }
          }
        ]
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Literal": {
              "Int": 2
            }
          }
        ]
      }
    ]
  },
  "rule_name": "leq_to_ineq",
  "rule_priority": 4100,
  "rule_set_name": "Minion",
  "transformed_expression": {
    "FlatIneq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Reference": {
          "MachineName": 0
        }
      },
      {
        "Literal": {
          "Int": 2
        }
      },
      {
        "Int": 0
      }
    ]
  },
  "new_variables_str": "",
  "top_level_str": ""
}
,{
  "initial_expression": {
    "Leq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Reference": {
              "MachineName": 0
            }
          }
        ]
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Reference": {
              "UserName": "a"
            }
          }
        ]
      }
    ]
  },
  "rule_name": "leq_to_ineq",
  "rule_priority": 4100,
  "rule_set_name": "Minion",
  "transformed_expression": {
    "FlatIneq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Reference": {
          "MachineName": 0
        }
      },
      {
        "Reference": {
          "UserName": "a"
        }
      },
      {
        "Int": 0
      }
    ]
  },
  "new_variables_str": "",
  "top_level_str": ""
}
,{
  "initial_expression": {
    "Leq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Reference": {
              "MachineName": 0
            }
          }
        ]
      },
      {
        "Atomic": [
          {
            "clean": false,
            "etype": null
          },
          {
            "Reference": {
              "UserName": "b"
            }
          }
        ]
      }
    ]
  },
  "rule_name": "leq_to_ineq",
  "rule_priority": 4100,
  "rule_set_name": "Minion",
  "transformed_expression": {
    "FlatIneq": [
      {
        "clean": false,
        "etype": null
      },
      {
        "Reference": {
          "MachineName": 0
        }
      },
      {
        "Reference": {
          "UserName": "b"
        }
      },
      {
        "Int": 0
      }
    ]
  },
  "new_variables_str": "",
  "top_level_str": ""
}

]
