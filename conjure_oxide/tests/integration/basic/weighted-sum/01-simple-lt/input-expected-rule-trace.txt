
Model before rewriting:

find x: int(2..4)
find y: int(2..4)
find z: int(2..4)

such that

(Sum([Sum([Product([2, x]),Product([3, y]);int(1..2)]),z;int(1..2)]) < 14)

--

Successful Tranformation: 
Sum([Sum([Product([2, x]),Product([3, y]);int(1..2)]),z;int(1..2)]), 
~~> normalise_associative_commutative [8900; Base]
Sum([Product([2, x]),Product([3, y]),z;int(1..2)])


--

Successful Tranformation: 
(Sum([Product([2, x]),Product([3, y]),z;int(1..2)]) < 14), 
~~> lt_to_leq [8400; Minion]
(Sum([Product([2, x]),Product([3, y]),z;int(1..2)]) <= Sum([14,-1;int(1..)]))


--

Successful Tranformation: 
Sum([14,-1;int(1..)]), 
~~> constant_evaluator [9001; Constant]
13


--

Successful Tranformation: 
Sum([Product([2, x]),Product([3, y]),z;int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([Product([2, x]),Product([3, y]),z;int(1..)])


--

Successful Tranformation: 
(Sum([Product([2, x]),Product([3, y]),z;int(1..)]) <= 13), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
FlatWeightedSumLeq([2, 3, 1],[x, y, z],13)


--


Final model:

find x: int(2..4)
find y: int(2..4)
find z: int(2..4)

such that

FlatWeightedSumLeq([2, 3, 1],[x, y, z],13)

