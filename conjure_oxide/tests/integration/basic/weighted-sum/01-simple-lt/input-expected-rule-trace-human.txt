Model before rewriting:

find x: int(2..4)
find y: int(2..4)
find z: int(2..4)

such that

(Sum([Sum([Product([2, x]),Product([3, y]);int(1..2)]),z;int(1..2)]) < 14)

--

Sum([Sum([Product([2, x]),Product([3, y]);int(1..2)]),z;int(1..2)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([Product([2, x]),Product([3, y]),z;int(1..2)]) 

--

(Sum([Product([2, x]),Product([3, y]),z;int(1..2)]) < 14), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(Sum([Product([2, x]),Product([3, y]),z;int(1..2)]) <= Sum([14,-1;int(1..)])) 

--

Sum([14,-1;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
13 

--

Sum([Product([2, x]),Product([3, y]),z;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([Product([2, x]),Product([3, y]),z;int(1..)]) 

--

(Sum([Product([2, x]),Product([3, y]),z;int(1..)]) <= 13), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
FlatWeightedSumLeq([2, 3, 1],[x, y, z],13) 

--

Final model:

find x: int(2..4)
find y: int(2..4)
find z: int(2..4)

such that

FlatWeightedSumLeq([2, 3, 1],[x, y, z],13)

