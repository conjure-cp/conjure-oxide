Model before rewriting:

find a: int(2..10)
find b: int(2..10)
find c: int(2..10)
find d: int(2..10)
find e: int(2..10)
find f: int(2..10)
find g: int(2..10)
find h: int(2..10)

such that

(Sum([Sum([Sum([Sum([Sum([Sum([Product([2, a]), Product([2, b])]), Product([Product([3, c]), d])]), UnsafeDiv(e, f)]), Product([6, UnsafeDiv(g, h)])]), -(a)]), -(UnsafeDiv(g, h))]) <= 18)

--

Sum([Sum([Sum([Sum([Sum([Sum([Product([2, a]), Product([2, b])]), Product([Product([3, c]), d])]), UnsafeDiv(e, f)]), Product([6, UnsafeDiv(g, h)])]), -(a)]), -(UnsafeDiv(g, h))]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([Product([2, a]), Product([2, b]), Product([Product([3, c]), d]), UnsafeDiv(e, f), Product([6, UnsafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) 

--

Product([Product([3, c]), d]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Product([3, c, d]) 

--

UnsafeDiv(e, f), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(e, f) @ (f != 0)} 

--

Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), {SafeDiv(e, f) @ (f != 0)}, Product([6, UnsafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, UnsafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) @ and([(f != 0);int(1..)])} 

--

({Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, UnsafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) @ and([(f != 0);int(1..)])} <= 18), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, UnsafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) <= 18) @ and([and([(f != 0);int(1..)]);int(1..)])} 

--

{(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, UnsafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) <= 18) @ and([and([(f != 0);int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, UnsafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) <= 18),and([and([(f != 0);int(1..)]);int(1..)]);int(1..)]) 

--

and([and([(f != 0);int(1..)]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
and([(f != 0);int(1..)]) 

--

and([(f != 0);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(f != 0) 

--

UnsafeDiv(g, h), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(g, h) @ (h != 0)} 

--

Product([6, {SafeDiv(g, h) @ (h != 0)}]), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Product([6, SafeDiv(g, h)]) @ and([(h != 0);int(1..)])} 

--

Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), {Product([6, SafeDiv(g, h)]) @ and([(h != 0);int(1..)])}, -(a), -(UnsafeDiv(g, h))]), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) @ and([and([(h != 0);int(1..)]);int(1..)])} 

--

({Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) @ and([and([(h != 0);int(1..)]);int(1..)])} <= 18), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) <= 18) @ and([and([and([(h != 0);int(1..)]);int(1..)]);int(1..)])} 

--

{(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) <= 18) @ and([and([and([(h != 0);int(1..)]);int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) <= 18),and([and([and([(h != 0);int(1..)]);int(1..)]);int(1..)]);int(1..)]) 

--

and([and([(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) <= 18),and([and([and([(h != 0);int(1..)]);int(1..)]);int(1..)]);int(1..)]),(f != 0);int(1..)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
and([(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(UnsafeDiv(g, h))]) <= 18),(h != 0),(f != 0);int(1..)]) 

--

UnsafeDiv(g, h), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(g, h) @ (h != 0)} 

--

-({SafeDiv(g, h) @ (h != 0)}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{-(SafeDiv(g, h)) @ and([(h != 0);int(1..)])} 

--

Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), {-(SafeDiv(g, h)) @ and([(h != 0);int(1..)])}]), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(SafeDiv(g, h))]) @ and([and([(h != 0);int(1..)]);int(1..)])} 

--

({Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(SafeDiv(g, h))]) @ and([and([(h != 0);int(1..)]);int(1..)])} <= 18), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(SafeDiv(g, h))]) <= 18) @ and([and([and([(h != 0);int(1..)]);int(1..)]);int(1..)])} 

--

{(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(SafeDiv(g, h))]) <= 18) @ and([and([and([(h != 0);int(1..)]);int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(SafeDiv(g, h))]) <= 18),and([and([and([(h != 0);int(1..)]);int(1..)]);int(1..)]);int(1..)]) 

--

and([and([(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(SafeDiv(g, h))]) <= 18),and([and([and([(h != 0);int(1..)]);int(1..)]);int(1..)]);int(1..)]),(h != 0),(f != 0);int(1..)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
and([(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(SafeDiv(g, h))]) <= 18),(h != 0),(h != 0),(f != 0);int(1..)]) 

--

(Sum([Product([2, a]), Product([2, b]), Product([3, c, d]), SafeDiv(e, f), Product([6, SafeDiv(g, h)]), -(a), -(SafeDiv(g, h))]) <= 18), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
FlatWeightedSumLeq([2, 2, 3, 1, 6, -1, -1],[a, b, __0, __1, __2, a, __3],18) 
new variables:
  find __0: int(4..100)
  find __1: int(0..5)
  find __2: int(0..5)
  find __3: int(0..5)
new constraints:
  __0 =aux Product([c, d])
  __1 =aux SafeDiv(e, f)
  __2 =aux SafeDiv(g, h)
  __3 =aux SafeDiv(g, h)
--

__0 =aux Product([c, d]), 
   ~~> introduce_producteq ([("Minion", 4200)]) 
FlatProductEq(d,c,__0) 

--

__1 =aux SafeDiv(e, f), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(e, f, __1) 

--

__2 =aux SafeDiv(g, h), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(g, h, __2) 

--

__3 =aux SafeDiv(g, h), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(g, h, __3) 

--

Final model:

find a: int(2..10)
find b: int(2..10)
find c: int(2..10)
find d: int(2..10)
find e: int(2..10)
find f: int(2..10)
find g: int(2..10)
find h: int(2..10)
find __0: int(4..100)
find __1: int(0..5)
find __2: int(0..5)
find __3: int(0..5)

such that

and([FlatWeightedSumLeq([2, 2, 3, 1, 6, -1, -1],[a, b, __0, __1, __2, a, __3],18),(h != 0),(h != 0),(f != 0);int(1..)]),
FlatProductEq(d,c,__0),
DivEq(e, f, __1),
DivEq(g, h, __2),
DivEq(g, h, __3)

