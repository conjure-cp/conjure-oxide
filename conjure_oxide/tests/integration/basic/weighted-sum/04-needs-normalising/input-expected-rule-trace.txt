
Model before rewriting:

find x: int(2..5)
find y: int(2..5)
find z: int(2..5)

such that

(Sum([Sum([Sum([Sum([Product([5, x]),Product([Product([Product([y, 3]), 1]), 3]);int(1..2)]),-(Product([3, x]));int(1..2)]),Product([-(1), y]);int(1..2)]),Product([y, -(5)]);int(1..2)]) < 11)

--

Successful Tranformation: 
-(1), 
~~> constant_evaluator [9001; Constant]
-1


--

Successful Tranformation: 
-(5), 
~~> constant_evaluator [9001; Constant]
-5


--

Successful Tranformation: 
Sum([Sum([Sum([Sum([Product([5, x]),Product([Product([Product([y, 3]), 1]), 3]);int(1..2)]),-(Product([3, x]));int(1..2)]),Product([-1, y]);int(1..2)]),Product([y, -5]);int(1..2)]), 
~~> normalise_associative_commutative [8900; Base]
Sum([Product([5, x]),Product([Product([Product([y, 3]), 1]), 3]),-(Product([3, x])),Product([-1, y]),Product([y, -5]);int(1..2)])


--

Successful Tranformation: 
Product([Product([Product([y, 3]), 1]), 3]), 
~~> normalise_associative_commutative [8900; Base]
Product([y, 3, 1, 3])


--

Successful Tranformation: 
Product([y, 3, 1, 3]), 
~~> partial_evaluator [9000; Base]
Product([y, 9])


--

Successful Tranformation: 
Product([y, 9]), 
~~> reorder_product [8800; Base]
Product([9, y])


--

Successful Tranformation: 
Product([y, -5]), 
~~> reorder_product [8800; Base]
Product([-5, y])


--

Successful Tranformation: 
(Sum([Product([5, x]),Product([9, y]),-(Product([3, x])),Product([-1, y]),Product([-5, y]);int(1..2)]) < 11), 
~~> lt_to_leq [8400; Minion]
(Sum([Product([5, x]),Product([9, y]),-(Product([3, x])),Product([-1, y]),Product([-5, y]);int(1..2)]) <= Sum([11,-1;int(1..)]))


--

Successful Tranformation: 
Sum([11,-1;int(1..)]), 
~~> constant_evaluator [9001; Constant]
10


--

Successful Tranformation: 
-(Product([3, x])), 
~~> simplify_negation_of_product [8400; Base]
Product([3, x, -1])


--

Successful Tranformation: 
Product([3, x, -1]), 
~~> partial_evaluator [9000; Base]
Product([x, -3])


--

Successful Tranformation: 
Product([x, -3]), 
~~> reorder_product [8800; Base]
Product([-3, x])


--

Successful Tranformation: 
Sum([Product([5, x]),Product([9, y]),Product([-3, x]),Product([-1, y]),Product([-5, y]);int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([Product([5, x]),Product([9, y]),Product([-3, x]),Product([-1, y]),Product([-5, y]);int(1..)])


--

Successful Tranformation: 
(Sum([Product([5, x]),Product([9, y]),Product([-3, x]),Product([-1, y]),Product([-5, y]);int(1..)]) <= 10), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
FlatWeightedSumLeq([5, 9, -3, -1, -5],[x, y, x, y, y],10)


--


Final model:

find x: int(2..5)
find y: int(2..5)
find z: int(2..5)

such that

FlatWeightedSumLeq([5, 9, -3, -1, -5],[x, y, x, y, y],10)

