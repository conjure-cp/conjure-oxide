
Model before rewriting:

find x: int(2..20)
find y: int(0..5)

such that

(UnsafePow(Sum([x,2;int(1..2)]), UnsafeDiv(y, 2)) = 4)

--

Successful Tranformation: 
UnsafeDiv(y, 2), 
~~> div_to_bubble [6000; Bubble]
{SafeDiv(y, 2) @ (2 != 0)}


--

Successful Tranformation: 
(2 != 0), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
UnsafePow(Sum([x,2;int(1..2)]), {SafeDiv(y, 2) @ true}), 
~~> bubble_up [8900; Bubble]
{UnsafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({UnsafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) @ true} = 4), 
~~> bubble_up [8900; Bubble]
{(UnsafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(UnsafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(UnsafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),true;int(1..)])


--

Successful Tranformation: 
and([(UnsafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
(UnsafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),
true


--

Successful Tranformation: 
(UnsafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),
true, 
~~> partial_evaluator [9000; Base]
(UnsafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4)


--

Successful Tranformation: 
UnsafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)), 
~~> pow_to_bubble [6000; Bubble]
{SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) @ and([or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),(SafeDiv(y, 2) >= 0);int(1..)])}


--

Successful Tranformation: 
({SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) @ and([or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),(SafeDiv(y, 2) >= 0);int(1..)])} = 4), 
~~> bubble_up [8900; Bubble]
{(SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4) @ and([and([or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),(SafeDiv(y, 2) >= 0);int(1..)]);int(1..)])}


--

Successful Tranformation: 
{(SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4) @ and([and([or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),(SafeDiv(y, 2) >= 0);int(1..)]);int(1..)])}, 
~~> expand_bubble [8900; Bubble]
and([(SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),and([and([or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),(SafeDiv(y, 2) >= 0);int(1..)]);int(1..)]);int(1..)])


--

Successful Tranformation: 
and([(SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),and([and([or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),(SafeDiv(y, 2) >= 0);int(1..)]);int(1..)]);int(1..)]), 
~~> partial_evaluator [9000; Base]
(SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),
and([and([or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),(SafeDiv(y, 2) >= 0);int(1..)]);int(1..)])


--

Successful Tranformation: 
(SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),
and([and([or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),(SafeDiv(y, 2) >= 0);int(1..)]);int(1..)]), 
~~> partial_evaluator [9000; Base]
(SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),
and([or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),(SafeDiv(y, 2) >= 0);int(1..)])


--

Successful Tranformation: 
(SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),
and([or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),(SafeDiv(y, 2) >= 0);int(1..)]), 
~~> partial_evaluator [9000; Base]
(SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)) = 4),
or([(Sum([x,2;int(1..2)]) != 0),(SafeDiv(y, 2) != 0);int(1..)]),
(SafeDiv(y, 2) >= 0)


--

Successful Tranformation: 
SafePow(Sum([x,2;int(1..2)]), SafeDiv(y, 2)), 
~~> flatten_generic [4200; Minion]
SafePow(Sum([x,2;int(1..2)]), __0)
new variables:
  find __0: int(0..2)
new constraints:
  __0 =aux SafeDiv(y, 2)

--

Successful Tranformation: 
(SafeDiv(y, 2) != 0), 
~~> flatten_generic [4200; Minion]
(__1 != 0)
new variables:
  find __1: int(0..2)
new constraints:
  __1 =aux SafeDiv(y, 2)

--

Successful Tranformation: 
(SafeDiv(y, 2) >= 0), 
~~> flatten_generic [4200; Minion]
(__2 >= 0)
new variables:
  find __2: int(0..2)
new constraints:
  __2 =aux SafeDiv(y, 2)

--

Successful Tranformation: 
__0 =aux SafeDiv(y, 2), 
~~> introduce_diveq [4200; Minion]
DivEq(y, 2, __0)


--

Successful Tranformation: 
__1 =aux SafeDiv(y, 2), 
~~> introduce_diveq [4200; Minion]
DivEq(y, 2, __1)


--

Successful Tranformation: 
__2 =aux SafeDiv(y, 2), 
~~> introduce_diveq [4200; Minion]
DivEq(y, 2, __2)


--

Successful Tranformation: 
(__2 >= 0), 
~~> geq_to_ineq [4100; Minion]
Ineq(0, __2, 0)


--

Successful Tranformation: 
Sum([x,2;int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([x,2;int(1..)])


--

Successful Tranformation: 
SafePow(Sum([x,2;int(1..)]), __0), 
~~> flatten_generic [4200; Minion]
SafePow(__3, __0)
new variables:
  find __3: int(4..22)
new constraints:
  __3 =aux Sum([x,2;int(1..)])

--

Successful Tranformation: 
__3 =aux Sum([x,2;int(1..)]), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([x, 2], __3),SumGeq([x, 2], __3);int(1..)])


--

Successful Tranformation: 
(SafePow(__3, __0) = 4),
or([(Sum([x,2;int(1..2)]) != 0),(__1 != 0);int(1..)]),
Ineq(0, __2, 0),
DivEq(y, 2, __0),
DivEq(y, 2, __1),
DivEq(y, 2, __2),
and([SumLeq([x, 2], __3),SumGeq([x, 2], __3);int(1..)]), 
~~> partial_evaluator [9000; Base]
(SafePow(__3, __0) = 4),
or([(Sum([x,2;int(1..2)]) != 0),(__1 != 0);int(1..)]),
Ineq(0, __2, 0),
DivEq(y, 2, __0),
DivEq(y, 2, __1),
DivEq(y, 2, __2),
SumLeq([x, 2], __3),
SumGeq([x, 2], __3)


--

Successful Tranformation: 
(SafePow(__3, __0) = 4), 
~~> introduce_poweq [4200; Minion]
MinionPow(__3,__0,4)


--

Successful Tranformation: 
Sum([x,2;int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([x,2;int(1..)])


--

Successful Tranformation: 
(Sum([x,2;int(1..)]) != 0), 
~~> flatten_generic [4200; Minion]
(__4 != 0)
new variables:
  find __4: int(4..22)
new constraints:
  __4 =aux Sum([x,2;int(1..)])

--

Successful Tranformation: 
__4 =aux Sum([x,2;int(1..)]), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([x, 2], __4),SumGeq([x, 2], __4);int(1..)])


--

Successful Tranformation: 
MinionPow(__3,__0,4),
or([(__4 != 0),(__1 != 0);int(1..)]),
Ineq(0, __2, 0),
DivEq(y, 2, __0),
DivEq(y, 2, __1),
DivEq(y, 2, __2),
SumLeq([x, 2], __3),
SumGeq([x, 2], __3),
and([SumLeq([x, 2], __4),SumGeq([x, 2], __4);int(1..)]), 
~~> partial_evaluator [9000; Base]
MinionPow(__3,__0,4),
or([(__4 != 0),(__1 != 0);int(1..)]),
Ineq(0, __2, 0),
DivEq(y, 2, __0),
DivEq(y, 2, __1),
DivEq(y, 2, __2),
SumLeq([x, 2], __3),
SumGeq([x, 2], __3),
SumLeq([x, 2], __4),
SumGeq([x, 2], __4)


--


Final model:

find x: int(2..20)
find y: int(0..5)
find __0: int(0..2)
find __1: int(0..2)
find __2: int(0..2)
find __3: int(4..22)
find __4: int(4..22)

such that

MinionPow(__3,__0,4),
or([(__4 != 0),(__1 != 0);int(1..)]),
Ineq(0, __2, 0),
DivEq(y, 2, __0),
DivEq(y, 2, __1),
DivEq(y, 2, __2),
SumLeq([x, 2], __3),
SumGeq([x, 2], __3),
SumLeq([x, 2], __4),
SumGeq([x, 2], __4)

