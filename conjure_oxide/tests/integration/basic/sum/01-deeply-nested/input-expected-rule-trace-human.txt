Model before rewriting:

find a: int(1)
find b: int(1)
find c: int(1)
find d: int(1)
find e: int(1)

such that

(Sum([a,Sum([b,Sum([c,d;int(1..2)]);int(1..2)]),e;int(1..3)]) = 5)

--

Sum([a,Sum([b,Sum([c,d;int(1..2)]);int(1..2)]),e;int(1..3)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([a,b,c,d,e;int(1..3)]) 

--

Sum([a,b,c,d,e;int(1..3)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([a,b,c,d,e;int(1..)]) 

--

(Sum([a,b,c,d,e;int(1..)]) = 5), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([a, b, c, d, e], 5),SumGeq([a, b, c, d, e], 5);int(1..)]) 

--

and([SumLeq([a, b, c, d, e], 5),SumGeq([a, b, c, d, e], 5);int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
SumLeq([a, b, c, d, e], 5),
SumGeq([a, b, c, d, e], 5) 

--

Final model:

find a: int(1)
find b: int(1)
find c: int(1)
find d: int(1)
find e: int(1)

such that

SumLeq([a, b, c, d, e], 5),
SumGeq([a, b, c, d, e], 5)

