Model before rewriting:

find a: int(3..5)
find x: int(3..4)
find y: int(1..5)
find z: int(2..5)

such that

(UnsafeDiv(Sum([Sum([x, y]), z]), a) = 3)

--

Sum([Sum([x, y]), z]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([x, y, z]) 

--

UnsafeDiv(Sum([x, y, z]), a), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(Sum([x, y, z]), a) @ (a != 0)} 

--

({SafeDiv(Sum([x, y, z]), a) @ (a != 0)} = 3), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(SafeDiv(Sum([x, y, z]), a) = 3) @ and([(a != 0);int(1..)])} 

--

{(SafeDiv(Sum([x, y, z]), a) = 3) @ and([(a != 0);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(SafeDiv(Sum([x, y, z]), a) = 3),and([(a != 0);int(1..)]);int(1..)]) 

--

and([(a != 0);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(a != 0) 

--

SafeDiv(Sum([x, y, z]), a), 
   ~~> flatten_generic ([("Minion", 4200)]) 
SafeDiv(__0, a) 
new variables:
  find __0: int(6..14)
new constraints:
  __0 =aux Sum([x, y, z])
--

__0 =aux Sum([x, y, z]), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([x, y, z], __0),SumGeq([x, y, z], __0);int(1..)]) 

--

(SafeDiv(__0, a) = 3), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(__0, a, 3) 

--

Final model:

find a: int(3..5)
find x: int(3..4)
find y: int(1..5)
find z: int(2..5)
find __0: int(6..14)

such that

and([DivEq(__0, a, 3),(a != 0);int(1..)]),
and([SumLeq([x, y, z], __0),SumGeq([x, y, z], __0);int(1..)])

