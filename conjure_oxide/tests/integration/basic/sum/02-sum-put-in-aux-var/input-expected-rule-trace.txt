
Model before rewriting:

find a: int(3..5)
find x: int(3..4)
find y: int(1..5)
find z: int(2..5)

such that

(UnsafeDiv(Sum([Sum([x,y;int(1..2)]),z;int(1..2)]), a) = 3)

--

Successful Tranformation: 
Sum([Sum([x,y;int(1..2)]),z;int(1..2)]), 
~~> normalise_associative_commutative [8900; Base]
Sum([x,y,z;int(1..2)])


--

Successful Tranformation: 
UnsafeDiv(Sum([x,y,z;int(1..2)]), a), 
~~> div_to_bubble [6000; Bubble]
{SafeDiv(Sum([x,y,z;int(1..2)]), a) @ (a != 0)}


--

Successful Tranformation: 
({SafeDiv(Sum([x,y,z;int(1..2)]), a) @ (a != 0)} = 3), 
~~> bubble_up [8900; Bubble]
{(SafeDiv(Sum([x,y,z;int(1..2)]), a) = 3) @ and([(a != 0);int(1..)])}


--

Successful Tranformation: 
{(SafeDiv(Sum([x,y,z;int(1..2)]), a) = 3) @ and([(a != 0);int(1..)])}, 
~~> expand_bubble [8900; Bubble]
and([(SafeDiv(Sum([x,y,z;int(1..2)]), a) = 3),and([(a != 0);int(1..)]);int(1..)])


--

Successful Tranformation: 
and([(SafeDiv(Sum([x,y,z;int(1..2)]), a) = 3),and([(a != 0);int(1..)]);int(1..)]), 
~~> partial_evaluator [9000; Base]
(SafeDiv(Sum([x,y,z;int(1..2)]), a) = 3),
and([(a != 0);int(1..)])


--

Successful Tranformation: 
(SafeDiv(Sum([x,y,z;int(1..2)]), a) = 3),
and([(a != 0);int(1..)]), 
~~> partial_evaluator [9000; Base]
(SafeDiv(Sum([x,y,z;int(1..2)]), a) = 3),
(a != 0)


--

Successful Tranformation: 
Sum([x,y,z;int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([x,y,z;int(1..)])


--

Successful Tranformation: 
SafeDiv(Sum([x,y,z;int(1..)]), a), 
~~> flatten_generic [4200; Minion]
SafeDiv(__0, a)
new variables:
  find __0: int(6..14)
new constraints:
  __0 =aux Sum([x,y,z;int(1..)])

--

Successful Tranformation: 
__0 =aux Sum([x,y,z;int(1..)]), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([x, y, z], __0),SumGeq([x, y, z], __0);int(1..)])


--

Successful Tranformation: 
(SafeDiv(__0, a) = 3),
(a != 0),
and([SumLeq([x, y, z], __0),SumGeq([x, y, z], __0);int(1..)]), 
~~> partial_evaluator [9000; Base]
(SafeDiv(__0, a) = 3),
(a != 0),
SumLeq([x, y, z], __0),
SumGeq([x, y, z], __0)


--

Successful Tranformation: 
(SafeDiv(__0, a) = 3), 
~~> introduce_diveq [4200; Minion]
DivEq(__0, a, 3)


--


Final model:

find a: int(3..5)
find x: int(3..4)
find y: int(1..5)
find z: int(2..5)
find __0: int(6..14)

such that

DivEq(__0, a, 3),
(a != 0),
SumLeq([x, y, z], __0),
SumGeq([x, y, z], __0)

