Model before rewriting:

find x: int(-2..3)
find y: int(1..3)

such that

(Product([y, |x|]) = 2)

--

Product([y, |x|]), 
   ~~> flatten_generic ([("Minion", 4200)]) 
Product([y, __0]) 
new variables:
  find __0: int(0..3)
new constraints:
  __0 =aux |x|
--

__0 =aux |x|, 
   ~~> introduce_abseq ([("Minion", 4400)]) 
AbsEq(__0,x) 

--

(Product([y, __0]) = 2), 
   ~~> introduce_producteq ([("Minion", 4200)]) 
FlatProductEq(__0,y,2) 

--

Final model:

find x: int(-2..3)
find y: int(1..3)
find __0: int(0..3)

such that

FlatProductEq(__0,y,2),
AbsEq(__0,x)

