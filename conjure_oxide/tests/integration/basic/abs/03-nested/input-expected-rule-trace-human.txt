Model before rewriting:

find x: int(-5..2)
find y: int(-5..2)
find z: int(-5..2)

such that

(Sum([|(Sum([UnsafeDiv(x, 2), y]) - z)|, UnsafeDiv(|y|, 2)]) = 10)

--

(Sum([UnsafeDiv(x, 2), y]) - z), 
   ~~> minus_to_sum ([("Base", 8400)]) 
Sum([Sum([UnsafeDiv(x, 2), y]), -(z)]) 

--

Sum([Sum([UnsafeDiv(x, 2), y]), -(z)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([UnsafeDiv(x, 2), y, -(z)]) 

--

UnsafeDiv(x, 2), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(x, 2) @ (2 != 0)} 

--

(2 != 0), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

Sum([{SafeDiv(x, 2) @ true}, y, -(z)]), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([SafeDiv(x, 2), y, -(z)]) @ And([true])} 

--

And([true]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

|{Sum([SafeDiv(x, 2), y, -(z)]) @ true}|, 
   ~~> bubble_up ([("Bubble", 8900)]) 
{|Sum([SafeDiv(x, 2), y, -(z)])| @ And([true])} 

--

And([true]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

Sum([{|Sum([SafeDiv(x, 2), y, -(z)])| @ true}, UnsafeDiv(|y|, 2)]), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, UnsafeDiv(|y|, 2)]) @ And([true])} 

--

And([true]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

({Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, UnsafeDiv(|y|, 2)]) @ true} = 10), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, UnsafeDiv(|y|, 2)]) = 10) @ And([true])} 

--

And([true]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, UnsafeDiv(|y|, 2)]) = 10) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
And([(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, UnsafeDiv(|y|, 2)]) = 10), true]) 

--

And([(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, UnsafeDiv(|y|, 2)]) = 10), true]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
And([(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, UnsafeDiv(|y|, 2)]) = 10)]) 

--

And([(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, UnsafeDiv(|y|, 2)]) = 10)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, UnsafeDiv(|y|, 2)]) = 10) 

--

UnsafeDiv(|y|, 2), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(|y|, 2) @ (2 != 0)} 

--

(2 != 0), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, {SafeDiv(|y|, 2) @ true}]), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, SafeDiv(|y|, 2)]) @ And([true])} 

--

And([true]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

({Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, SafeDiv(|y|, 2)]) @ true} = 10), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, SafeDiv(|y|, 2)]) = 10) @ And([true])} 

--

And([true]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, SafeDiv(|y|, 2)]) = 10) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
And([(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, SafeDiv(|y|, 2)]) = 10), true]) 

--

And([(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, SafeDiv(|y|, 2)]) = 10), true]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
And([(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, SafeDiv(|y|, 2)]) = 10)]) 

--

And([(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, SafeDiv(|y|, 2)]) = 10)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, SafeDiv(|y|, 2)]) = 10) 

--

(Sum([|Sum([SafeDiv(x, 2), y, -(z)])|, SafeDiv(|y|, 2)]) = 10), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
And([SumLeq([__0, __1], 10), SumGeq([__0, __1], 10)]) 
new variables:
  __0: int(0..10)
  __1: int(0..2)
new constraints:
  __0 =aux |Sum([SafeDiv(x, 2), y, -(z)])|
  __1 =aux SafeDiv(|y|, 2)
--

|Sum([SafeDiv(x, 2), y, -(z)])|, 
   ~~> flatten_generic ([("Minion", 4200)]) 
|__2| 
new variables:
  __2: int(-10..8)
new constraints:
  __2 =aux Sum([SafeDiv(x, 2), y, -(z)])
--

__2 =aux Sum([SafeDiv(x, 2), y, -(z)]), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
And([FlatWeightedSumLeq([1, 1, -1],[__3, y, z],__2), FlatWeightedSumGeq([1, 1, -1],[__3, y, z],__2)]) 
new variables:
  __3: int(-3..1)
new constraints:
  __3 =aux SafeDiv(x, 2)
--

__0 =aux |__2|, 
   ~~> introduce_abseq ([("Minion", 4400)]) 
AbsEq(__0,__2) 

--

SafeDiv(|y|, 2), 
   ~~> flatten_generic ([("Minion", 4200)]) 
SafeDiv(__4, 2) 
new variables:
  __4: int(0..5)
new constraints:
  __4 =aux |y|
--

__4 =aux |y|, 
   ~~> introduce_abseq ([("Minion", 4400)]) 
AbsEq(__4,y) 

--

__1 =aux SafeDiv(__4, 2), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(__4, 2, __1) 

--

__3 =aux SafeDiv(x, 2), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(x, 2, __3) 

--

Final model:

find x: int(-5..2)
find y: int(-5..2)
find z: int(-5..2)
find __0: int(0..10)
find __1: int(0..2)
find __2: int(-10..8)
find __3: int(-3..1)
find __4: int(0..5)

such that

And([SumLeq([__0, __1], 10), SumGeq([__0, __1], 10)]),
AbsEq(__0,__2),
DivEq(__4, 2, __1),
And([FlatWeightedSumLeq([1, 1, -1],[__3, y, z],__2), FlatWeightedSumGeq([1, 1, -1],[__3, y, z],__2)]),
DivEq(x, 2, __3),
AbsEq(__4,y)

