Model before rewriting:

find x: int(-5..2)
find y: int(-5..2)
find z: int(-5..2)

such that

(Sum([|(Sum([UnsafeDiv(x, 2),y;int(1..2)]) - z)|,UnsafeDiv(|y|, 2);int(1..2)]) = 10)

--

(Sum([UnsafeDiv(x, 2),y;int(1..2)]) - z), 
   ~~> minus_to_sum ([("Base", 8400)]) 
Sum([Sum([UnsafeDiv(x, 2),y;int(1..2)]),-(z);int(1..)]) 

--

Sum([Sum([UnsafeDiv(x, 2),y;int(1..2)]),-(z);int(1..)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([UnsafeDiv(x, 2),y,-(z);int(1..)]) 

--

UnsafeDiv(x, 2), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(x, 2) @ (2 != 0)} 

--

(2 != 0), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

[{SafeDiv(x, 2) @ true},y,-(z);int(1..)], 
   ~~> bubble_up ([("Bubble", 8900)]) 
{[SafeDiv(x, 2),y,-(z);int(1..)] @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

Sum({[SafeDiv(x, 2),y,-(z);int(1..)] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([SafeDiv(x, 2),y,-(z);int(1..)]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

|{Sum([SafeDiv(x, 2),y,-(z);int(1..)]) @ true}|, 
   ~~> bubble_up ([("Bubble", 8900)]) 
{|Sum([SafeDiv(x, 2),y,-(z);int(1..)])| @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

[{|Sum([SafeDiv(x, 2),y,-(z);int(1..)])| @ true},UnsafeDiv(|y|, 2);int(1..2)], 
   ~~> bubble_up ([("Bubble", 8900)]) 
{[|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)] @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

Sum({[|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

({Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)]) @ true} = 10), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)]) = 10) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

{(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)]) = 10) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)]) = 10),true;int(1..)]) 

--

and([(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)]) = 10),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)]) = 10),
true 

--

(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)]) = 10),
true, 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,UnsafeDiv(|y|, 2);int(1..2)]) = 10) 

--

UnsafeDiv(|y|, 2), 
   ~~> div_to_bubble ([("Bubble", 6000)]) 
{SafeDiv(|y|, 2) @ (2 != 0)} 

--

(2 != 0), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

[|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,{SafeDiv(|y|, 2) @ true};int(1..2)], 
   ~~> bubble_up ([("Bubble", 8900)]) 
{[|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)] @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

Sum({[|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

({Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)]) @ true} = 10), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)]) = 10) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

{(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)]) = 10) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)]) = 10),true;int(1..)]) 

--

and([(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)]) = 10),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)]) = 10),
true 

--

(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)]) = 10),
true, 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Sum([|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|,SafeDiv(|y|, 2);int(1..2)]) = 10) 

--

|Sum([SafeDiv(x, 2),y,-(z);int(1..)])|, 
   ~~> flatten_generic ([("Minion", 4200)]) 
|__0| 
new variables:
  find __0: int(-10..8)
new constraints:
  __0 =aux Sum([SafeDiv(x, 2),y,-(z);int(1..)])
--

__0 =aux Sum([SafeDiv(x, 2),y,-(z);int(1..)]), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([FlatWeightedSumLeq([1, 1, -1],[__1, y, z],__0),FlatWeightedSumGeq([1, 1, -1],[__1, y, z],__0);int(1..)]) 
new variables:
  find __1: int(-3..1)
new constraints:
  __1 =aux SafeDiv(x, 2)
--

(Sum([|__0|,SafeDiv(|y|, 2);int(1..2)]) = 10),
and([FlatWeightedSumLeq([1, 1, -1],[__1, y, z],__0),FlatWeightedSumGeq([1, 1, -1],[__1, y, z],__0);int(1..)]),
__1 =aux SafeDiv(x, 2), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Sum([|__0|,SafeDiv(|y|, 2);int(1..2)]) = 10),
FlatWeightedSumLeq([1, 1, -1],[__1, y, z],__0),
FlatWeightedSumGeq([1, 1, -1],[__1, y, z],__0),
__1 =aux SafeDiv(x, 2) 

--

SafeDiv(|y|, 2), 
   ~~> flatten_generic ([("Minion", 4200)]) 
SafeDiv(__2, 2) 
new variables:
  find __2: int(0..5)
new constraints:
  __2 =aux |y|
--

__2 =aux |y|, 
   ~~> introduce_abseq ([("Minion", 4400)]) 
AbsEq(__2,y) 

--

__1 =aux SafeDiv(x, 2), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(x, 2, __1) 

--

Sum([|__0|,SafeDiv(__2, 2);int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([|__0|,SafeDiv(__2, 2);int(1..)]) 

--

(Sum([|__0|,SafeDiv(__2, 2);int(1..)]) = 10), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([__3, __4], 10),SumGeq([__3, __4], 10);int(1..)]) 
new variables:
  find __3: int(0..10)
  find __4: int(0..2)
new constraints:
  __3 =aux |__0|
  __4 =aux SafeDiv(__2, 2)
--

and([SumLeq([__3, __4], 10),SumGeq([__3, __4], 10);int(1..)]),
FlatWeightedSumLeq([1, 1, -1],[__1, y, z],__0),
FlatWeightedSumGeq([1, 1, -1],[__1, y, z],__0),
DivEq(x, 2, __1),
AbsEq(__2,y),
__3 =aux |__0|,
__4 =aux SafeDiv(__2, 2), 
   ~~> partial_evaluator ([("Base", 9000)]) 
SumLeq([__3, __4], 10),
SumGeq([__3, __4], 10),
FlatWeightedSumLeq([1, 1, -1],[__1, y, z],__0),
FlatWeightedSumGeq([1, 1, -1],[__1, y, z],__0),
DivEq(x, 2, __1),
AbsEq(__2,y),
__3 =aux |__0|,
__4 =aux SafeDiv(__2, 2) 

--

__3 =aux |__0|, 
   ~~> introduce_abseq ([("Minion", 4400)]) 
AbsEq(__3,__0) 

--

__4 =aux SafeDiv(__2, 2), 
   ~~> introduce_diveq ([("Minion", 4200)]) 
DivEq(__2, 2, __4) 

--

Final model:

find x: int(-5..2)
find y: int(-5..2)
find z: int(-5..2)
find __0: int(-10..8)
find __1: int(-3..1)
find __2: int(0..5)
find __3: int(0..10)
find __4: int(0..2)

such that

SumLeq([__3, __4], 10),
SumGeq([__3, __4], 10),
FlatWeightedSumLeq([1, 1, -1],[__1, y, z],__0),
FlatWeightedSumGeq([1, 1, -1],[__1, y, z],__0),
DivEq(x, 2, __1),
AbsEq(__2,y),
AbsEq(__3,__0),
DivEq(__2, 2, __4)

