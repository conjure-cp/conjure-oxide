Model before rewriting:

find m: matrix indexed by [[int(1..5)]] of int(1..5)
find x: int(1..2)
find y: int(1..2)

such that

(x = 1),
and([((y < 5)) -> ((m[x] = x)) | x: int(1..5),(x < 4)])

--

(y < 5), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(y <= Sum([5, -1])) 

--

Sum([5, -1]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
4 

--

(x < 4), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(x <= Sum([4, -1])) 

--

Sum([4, -1]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
3 

--

m, 
   ~~> select_representation ([("Base", 8000)]) 
m#matrix_to_atom 
new variables:
  find m#matrix_to_atom_1: int(1..5)
  find m#matrix_to_atom_2: int(1..5)
  find m#matrix_to_atom_3: int(1..5)
  find m#matrix_to_atom_4: int(1..5)
  find m#matrix_to_atom_5: int(1..5)
--

m#matrix_to_atom[x], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{m#matrix_to_atom[x] @ and([__inDomain(x,int(1..5));int(1..)])} 

--

({m#matrix_to_atom[x] @ and([__inDomain(x,int(1..5));int(1..)])} = x), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(m#matrix_to_atom[x] = x) @ and([and([__inDomain(x,int(1..5));int(1..)]);int(1..)])} 

--

{(m#matrix_to_atom[x] = x) @ and([and([__inDomain(x,int(1..5));int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(m#matrix_to_atom[x] = x),and([and([__inDomain(x,int(1..5));int(1..)]);int(1..)]);int(1..)]) 

--

and([and([__inDomain(x,int(1..5));int(1..)]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
and([__inDomain(x,int(1..5));int(1..)]) 

--

and([__inDomain(x,int(1..5));int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
__inDomain(x,int(1..5)) 

--

((y <= 4)) -> (and([(m#matrix_to_atom[x] = x),__inDomain(x,int(1..5));int(1..)])), 
   ~~> flatten_imply ([("Minion", 4200)]) 
(__0) -> (and([(m#matrix_to_atom[x] = x),__inDomain(x,int(1..5));int(1..)])) 
new variables:
  find __0: bool
new constraints:
  __0 =aux (y <= 4)
--

(__0) -> (and([(m#matrix_to_atom[x] = x),__inDomain(x,int(1..5));int(1..)])), 
   ~~> introduce_reifyimply_ineq_from_imply ([("Minion", 4400)]) 
ReifyImply(and([(m#matrix_to_atom[x] = x),__inDomain(x,int(1..5));int(1..)]), __0) 

--

__0 =aux (y <= 4), 
   ~~> bool_eq_to_reify ([("Minion", 4400)]) 
Reify((y <= 4), __0) 

--

(x <= 3), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(x, 3, 0) 

--

(y <= 4), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(y, 4, 0) 

--

[ReifyImply(and([(m#matrix_to_atom[x] = x),__inDomain(x,int(1..5));int(1..)]), __0) | x: int(1..5),Ineq(x, 3, 0)], 
   ~~> expand_comprehension ([("Base", 1000)]) 
[ReifyImply(and([(m#matrix_to_atom[1] = 1),__inDomain(1,int(1..5));int(1..)]), __0),ReifyImply(and([(m#matrix_to_atom[2] = 2),__inDomain(2,int(1..5));int(1..)]), __0),ReifyImply(and([(m#matrix_to_atom[3] = 3),__inDomain(3,int(1..5));int(1..)]), __0);int(1..)] 

--

__inDomain(1,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

__inDomain(2,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

__inDomain(3,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

and([(m#matrix_to_atom[1] = 1),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(m#matrix_to_atom[1] = 1);int(1..)]) 

--

and([(m#matrix_to_atom[2] = 2),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(m#matrix_to_atom[2] = 2);int(1..)]) 

--

and([(m#matrix_to_atom[3] = 3),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(m#matrix_to_atom[3] = 3);int(1..)]) 

--

and([(m#matrix_to_atom[1] = 1);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[1] = 1) 

--

and([(m#matrix_to_atom[2] = 2);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[2] = 2) 

--

and([(m#matrix_to_atom[3] = 3);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[3] = 3) 

--

m#matrix_to_atom[1], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
m#matrix_to_atom_1 

--

m#matrix_to_atom[2], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
m#matrix_to_atom_2 

--

m#matrix_to_atom[3], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
m#matrix_to_atom_3 

--

Final model:

find m: matrix indexed by [[int(1..5)]] of int(1..5)
find x: int(1..2)
find y: int(1..2)
find __0: bool
find m#matrix_to_atom_1: int(1..5)
find m#matrix_to_atom_2: int(1..5)
find m#matrix_to_atom_3: int(1..5)
find m#matrix_to_atom_4: int(1..5)
find m#matrix_to_atom_5: int(1..5)

such that

(x = 1),
and([ReifyImply((m#matrix_to_atom_1 = 1), __0),ReifyImply((m#matrix_to_atom_2 = 2), __0),ReifyImply((m#matrix_to_atom_3 = 3), __0);int(1..)]),
Reify(Ineq(y, 4, 0), __0)

