Model before rewriting:

find m: matrix indexed by [[int(1..5)]] of int(1..5)
find x: int(1..2)
find y: int(1..2)

such that

(x = 1),
and([given x: int(1..5)

such that

((y < 5)) -> ((m[x] = x))
 | x: int(1..5),(x < 4)])

--

(x = 1),
and([given x: int(1..5)

such that

((y < 5)) -> ((m#matrix_to_atom[x] = x))
 | x: int(1..5),(x < 4)]), 
   ~~> select_representation_matrix ([("Base", 8001)]) 
(x = 1),
and([given x: int(1..5)

such that

((y < 5)) -> ((m#matrix_to_atom[x] = x))
 | x: int(1..5),(x < 4)]) 
new variables:
  find m#matrix_to_atom_1: int(1..5)
  find m#matrix_to_atom_2: int(1..5)
  find m#matrix_to_atom_3: int(1..5)
  find m#matrix_to_atom_4: int(1..5)
  find m#matrix_to_atom_5: int(1..5)
--

(y < 5), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(y <= sum([5,-1;int(1..)])) 

--

(x = 1),
and([given x: int(1..5)

such that

((y <= sum([5,-1;int(1..)]))) -> ((m#matrix_to_atom[x] = x))
 | x: int(1..5),(x < 4)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(x = 1),
and([given x: int(1..5)

such that

((y <= 4)) -> ((m#matrix_to_atom[x] = x))
 | x: int(1..5),(x < 4)]) 

--

m#matrix_to_atom[x], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{m#matrix_to_atom[x] @ and([__inDomain(x,int(1..5));int(1..)])} 

--

({m#matrix_to_atom[x] @ and([__inDomain(x,int(1..5));int(1..)])} = x), 
   ~~> bubble_up ([("Bubble", 8800)]) 
{(m#matrix_to_atom[x] = x) @ and([__inDomain(x,int(1..5));int(1..)])} 

--

{(m#matrix_to_atom[x] = x) @ and([__inDomain(x,int(1..5));int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(m#matrix_to_atom[x] = x),and([__inDomain(x,int(1..5));int(1..)]);int(1..)]) 

--

and([__inDomain(x,int(1..5));int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
__inDomain(x,int(1..5)) 

--

__inDomain(x,int(1..5)), 
   ~~> introduce_wininterval_set_from_indomain ([("Minion", 4400)]) 
__minion_w_inintervalset(x,[1,5]) 

--

((y <= 4)) -> (and([(m#matrix_to_atom[x] = x),__minion_w_inintervalset(x,[1,5]);int(1..)])), 
   ~~> flatten_imply ([("Minion", 4200)]) 
(__0) -> (and([(m#matrix_to_atom[x] = x),__minion_w_inintervalset(x,[1,5]);int(1..)])) 
new variables:
  find __0: bool
new constraints:
  __0 =aux (y <= 4)
--

(__0) -> (and([(m#matrix_to_atom[x] = x),__minion_w_inintervalset(x,[1,5]);int(1..)])), 
   ~~> introduce_reifyimply_ineq_from_imply ([("Minion", 4400)]) 
ReifyImply(and([(m#matrix_to_atom[x] = x),__minion_w_inintervalset(x,[1,5]);int(1..)]), __0) 

--

__0 =aux (y <= 4), 
   ~~> bool_eq_to_reify ([("Minion", 4400)]) 
Reify((y <= 4), __0) 

--

(y <= 4), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(y, 4, 0) 

--

(x < 4), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(x <= sum([4,-1;int(1..)])) 

--

(x = 1),
and([given x: int(1..5)
find __0: bool

such that

ReifyImply(and([(m#matrix_to_atom[x] = x),__minion_w_inintervalset(x,[1,5]);int(1..)]), __0),
Reify(Ineq(y, 4, 0), __0)
 | x: int(1..5),(x <= sum([4,-1;int(1..)]))]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(x = 1),
and([given x: int(1..5)
find __0: bool

such that

ReifyImply(and([(m#matrix_to_atom[x] = x),__minion_w_inintervalset(x,[1,5]);int(1..)]), __0),
Reify(Ineq(y, 4, 0), __0)
 | x: int(1..5),(x <= 3)]) 

--

(x <= 3), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(x, 3, 0) 

--

[given x: int(1..5)
find __0: bool

such that

ReifyImply(and([(m#matrix_to_atom[x] = x),__minion_w_inintervalset(x,[1,5]);int(1..)]), __0),
Reify(Ineq(y, 4, 0), __0)
 | x: int(1..5),Ineq(x, 3, 0)], 
   ~~> expand_comprehension ([("Base", 2000)]) 
[and([ReifyImply(and([(m#matrix_to_atom[1] = 1),__minion_w_inintervalset(1,[1,5]);int(1..)]), __0),Reify(Ineq(y, 4, 0), __0);int(1..)]),and([ReifyImply(and([(m#matrix_to_atom[2] = 2),__minion_w_inintervalset(2,[1,5]);int(1..)]), __1),Reify(Ineq(y, 4, 0), __1);int(1..)]),and([ReifyImply(and([(m#matrix_to_atom[3] = 3),__minion_w_inintervalset(3,[1,5]);int(1..)]), __2),Reify(Ineq(y, 4, 0), __2);int(1..)]);int(1..)] 
new variables:
  find __0: bool
  find __1: bool
  find __2: bool
--

(x = 1),
and([and([ReifyImply(and([(m#matrix_to_atom[1] = 1),__minion_w_inintervalset(1,[1,5]);int(1..)]), __0),Reify(Ineq(y, 4, 0), __0);int(1..)]),and([ReifyImply(and([(m#matrix_to_atom[2] = 2),__minion_w_inintervalset(2,[1,5]);int(1..)]), __1),Reify(Ineq(y, 4, 0), __1);int(1..)]),and([ReifyImply(and([(m#matrix_to_atom[3] = 3),__minion_w_inintervalset(3,[1,5]);int(1..)]), __2),Reify(Ineq(y, 4, 0), __2);int(1..)]);int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(x = 1),
and([ReifyImply(and([(m#matrix_to_atom[1] = 1);int(1..)]), __0),Reify(Ineq(y, 4, 0), __0);int(1..)]),
and([ReifyImply(and([(m#matrix_to_atom[2] = 2);int(1..)]), __1),Reify(Ineq(y, 4, 0), __1);int(1..)]),
and([ReifyImply(and([(m#matrix_to_atom[3] = 3);int(1..)]), __2),Reify(Ineq(y, 4, 0), __2);int(1..)]) 

--

(x = 1),
and([ReifyImply(and([(m#matrix_to_atom[1] = 1);int(1..)]), __0),Reify(Ineq(y, 4, 0), __0);int(1..)]),
and([ReifyImply(and([(m#matrix_to_atom[2] = 2);int(1..)]), __1),Reify(Ineq(y, 4, 0), __1);int(1..)]),
and([ReifyImply(and([(m#matrix_to_atom[3] = 3);int(1..)]), __2),Reify(Ineq(y, 4, 0), __2);int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(x = 1),
ReifyImply(and([(m#matrix_to_atom[1] = 1);int(1..)]), __0),
Reify(Ineq(y, 4, 0), __0),
ReifyImply(and([(m#matrix_to_atom[2] = 2);int(1..)]), __1),
Reify(Ineq(y, 4, 0), __1),
ReifyImply(and([(m#matrix_to_atom[3] = 3);int(1..)]), __2),
Reify(Ineq(y, 4, 0), __2) 

--

and([(m#matrix_to_atom[1] = 1);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[1] = 1) 

--

and([(m#matrix_to_atom[2] = 2);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[2] = 2) 

--

and([(m#matrix_to_atom[3] = 3);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[3] = 3) 

--

(x = 1),
ReifyImply((m#matrix_to_atom[1] = 1), __0),
Reify(Ineq(y, 4, 0), __0),
ReifyImply((m#matrix_to_atom[2] = 2), __1),
Reify(Ineq(y, 4, 0), __1),
ReifyImply((m#matrix_to_atom[3] = 3), __2),
Reify(Ineq(y, 4, 0), __2), 
   ~~> index_matrix_to_atom ([("Base", 5000)]) 
(x = 1),
ReifyImply((m#matrix_to_atom_1 = 1), __0),
Reify(Ineq(y, 4, 0), __0),
ReifyImply((m#matrix_to_atom_2 = 2), __1),
Reify(Ineq(y, 4, 0), __1),
ReifyImply((m#matrix_to_atom_3 = 3), __2),
Reify(Ineq(y, 4, 0), __2) 

--

Final model:

find m: matrix indexed by [[int(1..5)]] of int(1..5)
find x: int(1..2)
find y: int(1..2)
find __0: bool
find __1: bool
find __2: bool
find m#matrix_to_atom_1: int(1..5)
find m#matrix_to_atom_2: int(1..5)
find m#matrix_to_atom_3: int(1..5)
find m#matrix_to_atom_4: int(1..5)
find m#matrix_to_atom_5: int(1..5)

such that

(x = 1),
ReifyImply((m#matrix_to_atom_1 = 1), __0),
Reify(Ineq(y, 4, 0), __0),
ReifyImply((m#matrix_to_atom_2 = 2), __1),
Reify(Ineq(y, 4, 0), __1),
ReifyImply((m#matrix_to_atom_3 = 3), __2),
Reify(Ineq(y, 4, 0), __2)

