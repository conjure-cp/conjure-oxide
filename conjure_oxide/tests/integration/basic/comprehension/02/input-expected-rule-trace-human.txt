Model before rewriting:

find m: matrix indexed by [[int(1..5)]] of int(1..5)
find n: matrix indexed by [[int(1..5)]] of int(1..5)

such that

and([(n[i] = (6 - i)) | i: int(1..5),]),
and([((n[i] < 5)) -> ((m[i] = i)) | i: int(1..5),(i < 4)])

--

, 
   ~~> eval_root ([("Constant", 9001)]) 
true 

--

(6 - i), 
   ~~> minus_to_sum ([("Base", 8400)]) 
Sum([6, -(i)]) 

--

(n[i] < 5), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(n[i] <= Sum([5, -1])) 

--

Sum([5, -1]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
4 

--

(i < 4), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(i <= Sum([4, -1])) 

--

Sum([4, -1]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
3 

--

n, 
   ~~> select_representation ([("Base", 8000)]) 
n#matrix_to_atom 
new variables:
  find n#matrix_to_atom_1: int(1..5)
  find n#matrix_to_atom_2: int(1..5)
  find n#matrix_to_atom_3: int(1..5)
  find n#matrix_to_atom_4: int(1..5)
  find n#matrix_to_atom_5: int(1..5)
--

n, 
   ~~> select_representation ([("Base", 8000)]) 
n#matrix_to_atom 

--

m, 
   ~~> select_representation ([("Base", 8000)]) 
m#matrix_to_atom 
new variables:
  find m#matrix_to_atom_1: int(1..5)
  find m#matrix_to_atom_2: int(1..5)
  find m#matrix_to_atom_3: int(1..5)
  find m#matrix_to_atom_4: int(1..5)
  find m#matrix_to_atom_5: int(1..5)
--

n#matrix_to_atom[i], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{n#matrix_to_atom[i] @ and([__inDomain(i,int(1..5));int(1..)])} 

--

({n#matrix_to_atom[i] @ and([__inDomain(i,int(1..5));int(1..)])} = Sum([6, -(i)])), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(n#matrix_to_atom[i] = Sum([6, -(i)])) @ and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)])} 

--

{(n#matrix_to_atom[i] = Sum([6, -(i)])) @ and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(n#matrix_to_atom[i] = Sum([6, -(i)])),and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)]);int(1..)]) 

--

and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
and([__inDomain(i,int(1..5));int(1..)]) 

--

and([__inDomain(i,int(1..5));int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
__inDomain(i,int(1..5)) 

--

n#matrix_to_atom[i], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{n#matrix_to_atom[i] @ and([__inDomain(i,int(1..5));int(1..)])} 

--

({n#matrix_to_atom[i] @ and([__inDomain(i,int(1..5));int(1..)])} <= 4), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(n#matrix_to_atom[i] <= 4) @ and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)])} 

--

{(n#matrix_to_atom[i] <= 4) @ and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(n#matrix_to_atom[i] <= 4),and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)]);int(1..)]) 

--

and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
and([__inDomain(i,int(1..5));int(1..)]) 

--

and([__inDomain(i,int(1..5));int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
__inDomain(i,int(1..5)) 

--

m#matrix_to_atom[i], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{m#matrix_to_atom[i] @ and([__inDomain(i,int(1..5));int(1..)])} 

--

({m#matrix_to_atom[i] @ and([__inDomain(i,int(1..5));int(1..)])} = i), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(m#matrix_to_atom[i] = i) @ and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)])} 

--

{(m#matrix_to_atom[i] = i) @ and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(m#matrix_to_atom[i] = i),and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)]);int(1..)]) 

--

and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
and([__inDomain(i,int(1..5));int(1..)]) 

--

and([__inDomain(i,int(1..5));int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
__inDomain(i,int(1..5)) 

--

(and([(n#matrix_to_atom[i] <= 4),__inDomain(i,int(1..5));int(1..)])) -> (and([(m#matrix_to_atom[i] = i),__inDomain(i,int(1..5));int(1..)])), 
   ~~> flatten_imply ([("Minion", 4200)]) 
(__0) -> (and([(m#matrix_to_atom[i] = i),__inDomain(i,int(1..5));int(1..)])) 
new variables:
  find __0: bool
new constraints:
  __0 =aux and([(n#matrix_to_atom[i] <= 4),__inDomain(i,int(1..5));int(1..)])
--

(__0) -> (and([(m#matrix_to_atom[i] = i),__inDomain(i,int(1..5));int(1..)])), 
   ~~> introduce_reifyimply_ineq_from_imply ([("Minion", 4400)]) 
ReifyImply(and([(m#matrix_to_atom[i] = i),__inDomain(i,int(1..5));int(1..)]), __0) 

--

__0 =aux and([(n#matrix_to_atom[i] <= 4),__inDomain(i,int(1..5));int(1..)]), 
   ~~> bool_eq_to_reify ([("Minion", 4400)]) 
Reify(and([(n#matrix_to_atom[i] <= 4),__inDomain(i,int(1..5));int(1..)]), __0) 

--

(n#matrix_to_atom[i] <= 4), 
   ~~> flatten_generic ([("Minion", 4200)]) 
(__1 <= 4) 
new variables:
  find __1: int(1..5)
new constraints:
  __1 =aux n#matrix_to_atom[i]
--

(i <= 3), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(i, 3, 0) 

--

(__1 <= 4), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(__1, 4, 0) 

--

[and([(n#matrix_to_atom[i] = Sum([6, -(i)])),__inDomain(i,int(1..5));int(1..)]) | i: int(1..5),true], 
   ~~> expand_comprehension ([("Base", 1000)]) 
[and([(n#matrix_to_atom[1] = Sum([6, -(1)])),__inDomain(1,int(1..5));int(1..)]),and([(n#matrix_to_atom[2] = Sum([6, -(2)])),__inDomain(2,int(1..5));int(1..)]),and([(n#matrix_to_atom[3] = Sum([6, -(3)])),__inDomain(3,int(1..5));int(1..)]),and([(n#matrix_to_atom[4] = Sum([6, -(4)])),__inDomain(4,int(1..5));int(1..)]),and([(n#matrix_to_atom[5] = Sum([6, -(5)])),__inDomain(5,int(1..5));int(1..)]);int(1..)] 

--

Sum([6, -(1)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
5 

--

__inDomain(1,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

Sum([6, -(2)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
4 

--

__inDomain(2,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

Sum([6, -(3)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
3 

--

__inDomain(3,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

Sum([6, -(4)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
2 

--

__inDomain(4,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

Sum([6, -(5)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
1 

--

__inDomain(5,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

and([(n#matrix_to_atom[1] = 5),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(n#matrix_to_atom[1] = 5);int(1..)]) 

--

and([(n#matrix_to_atom[2] = 4),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(n#matrix_to_atom[2] = 4);int(1..)]) 

--

and([(n#matrix_to_atom[3] = 3),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(n#matrix_to_atom[3] = 3);int(1..)]) 

--

and([(n#matrix_to_atom[4] = 2),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(n#matrix_to_atom[4] = 2);int(1..)]) 

--

and([(n#matrix_to_atom[5] = 1),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(n#matrix_to_atom[5] = 1);int(1..)]) 

--

and([(n#matrix_to_atom[1] = 5);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(n#matrix_to_atom[1] = 5) 

--

and([(n#matrix_to_atom[2] = 4);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(n#matrix_to_atom[2] = 4) 

--

and([(n#matrix_to_atom[3] = 3);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(n#matrix_to_atom[3] = 3) 

--

and([(n#matrix_to_atom[4] = 2);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(n#matrix_to_atom[4] = 2) 

--

and([(n#matrix_to_atom[5] = 1);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(n#matrix_to_atom[5] = 1) 

--

n#matrix_to_atom[1], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
n#matrix_to_atom_1 

--

n#matrix_to_atom[2], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
n#matrix_to_atom_2 

--

n#matrix_to_atom[3], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
n#matrix_to_atom_3 

--

n#matrix_to_atom[4], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
n#matrix_to_atom_4 

--

n#matrix_to_atom[5], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
n#matrix_to_atom_5 

--

[ReifyImply(and([(m#matrix_to_atom[i] = i),__inDomain(i,int(1..5));int(1..)]), __0) | i: int(1..5),Ineq(i, 3, 0)], 
   ~~> expand_comprehension ([("Base", 1000)]) 
[ReifyImply(and([(m#matrix_to_atom[1] = 1),__inDomain(1,int(1..5));int(1..)]), __0),ReifyImply(and([(m#matrix_to_atom[2] = 2),__inDomain(2,int(1..5));int(1..)]), __0),ReifyImply(and([(m#matrix_to_atom[3] = 3),__inDomain(3,int(1..5));int(1..)]), __0);int(1..)] 

--

__inDomain(1,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

__inDomain(2,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

__inDomain(3,int(1..5)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

and([(m#matrix_to_atom[1] = 1),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(m#matrix_to_atom[1] = 1);int(1..)]) 

--

and([(m#matrix_to_atom[2] = 2),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(m#matrix_to_atom[2] = 2);int(1..)]) 

--

and([(m#matrix_to_atom[3] = 3),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
and([(m#matrix_to_atom[3] = 3);int(1..)]) 

--

and([(m#matrix_to_atom[1] = 1);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[1] = 1) 

--

and([(m#matrix_to_atom[2] = 2);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[2] = 2) 

--

and([(m#matrix_to_atom[3] = 3);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[3] = 3) 

--

m#matrix_to_atom[1], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
m#matrix_to_atom_1 

--

m#matrix_to_atom[2], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
m#matrix_to_atom_2 

--

m#matrix_to_atom[3], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
m#matrix_to_atom_3 

--

Final model:

find m: matrix indexed by [[int(1..5)]] of int(1..5)
find n: matrix indexed by [[int(1..5)]] of int(1..5)
find __0: bool
find __1: int(1..5)
find m#matrix_to_atom_1: int(1..5)
find m#matrix_to_atom_2: int(1..5)
find m#matrix_to_atom_3: int(1..5)
find m#matrix_to_atom_4: int(1..5)
find m#matrix_to_atom_5: int(1..5)
find n#matrix_to_atom_1: int(1..5)
find n#matrix_to_atom_2: int(1..5)
find n#matrix_to_atom_3: int(1..5)
find n#matrix_to_atom_4: int(1..5)
find n#matrix_to_atom_5: int(1..5)

such that

and([(n#matrix_to_atom_1 = 5),(n#matrix_to_atom_2 = 4),(n#matrix_to_atom_3 = 3),(n#matrix_to_atom_4 = 2),(n#matrix_to_atom_5 = 1);int(1..)]),
and([ReifyImply((m#matrix_to_atom_1 = 1), __0),ReifyImply((m#matrix_to_atom_2 = 2), __0),ReifyImply((m#matrix_to_atom_3 = 3), __0);int(1..)]),
Reify(and([Ineq(__1, 4, 0),__inDomain(i,int(1..5));int(1..)]), __0),
__1 =aux n#matrix_to_atom[i]

