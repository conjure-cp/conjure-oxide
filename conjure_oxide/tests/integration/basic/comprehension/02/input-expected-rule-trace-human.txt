Model before rewriting:

find m: matrix indexed by [[int(1..5)]] of int(1..5)
find n: matrix indexed by [[int(1..5)]] of int(1..5)

such that

and([given i: int(1..5)

such that

(n[i] = (6 - i))
 | i: int(1..5),]),
and([given i: int(1..5)

such that

((n[i] < 5)) -> ((m[i] = i))
 | i: int(1..5),(i < 4)])

--

and([given i: int(1..5)

such that

(n[i] = (6 - i))
 | i: int(1..5),]),
and([given i: int(1..5)

such that

((n[i] < 5)) -> ((m[i] = i))
 | i: int(1..5),(i < 4)]), 
   ~~> select_representation_matrix ([("Base", 8001)]) 
and([given i: int(1..5)

such that

(n#matrix_to_atom[i] = (6 - i))
 | i: int(1..5),]),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]) 
new variables:
  find m#matrix_to_atom_1: int(1..5)
  find m#matrix_to_atom_2: int(1..5)
  find m#matrix_to_atom_3: int(1..5)
  find m#matrix_to_atom_4: int(1..5)
  find m#matrix_to_atom_5: int(1..5)
  find n#matrix_to_atom_1: int(1..5)
  find n#matrix_to_atom_2: int(1..5)
  find n#matrix_to_atom_3: int(1..5)
  find n#matrix_to_atom_4: int(1..5)
  find n#matrix_to_atom_5: int(1..5)
--

[given i: int(1..5)

such that

(n#matrix_to_atom[i] = (6 - i))
 | i: int(1..5),], 
   ~~> expand_comprehension ([("Base", 2000)]) 
[(n#matrix_to_atom[1] = (6 - 1)),(n#matrix_to_atom[2] = (6 - 2)),(n#matrix_to_atom[3] = (6 - 3)),(n#matrix_to_atom[4] = (6 - 4)),(n#matrix_to_atom[5] = (6 - 5));int(1..)] 

--

and([(n#matrix_to_atom[1] = (6 - 1)),(n#matrix_to_atom[2] = (6 - 2)),(n#matrix_to_atom[3] = (6 - 3)),(n#matrix_to_atom[4] = (6 - 4)),(n#matrix_to_atom[5] = (6 - 5));int(1..)]),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(n#matrix_to_atom[1] = 5),
(n#matrix_to_atom[2] = 4),
(n#matrix_to_atom[3] = 3),
(n#matrix_to_atom[4] = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]) 

--

n#matrix_to_atom[1], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{n#matrix_to_atom[1] @ and([__inDomain(1,int(1..5));int(1..)])} 

--

({n#matrix_to_atom[1] @ and([__inDomain(1,int(1..5));int(1..)])} = 5),
(n#matrix_to_atom[2] = 4),
(n#matrix_to_atom[3] = 3),
(n#matrix_to_atom[4] = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(n#matrix_to_atom[1] = 5),
(n#matrix_to_atom[2] = 4),
(n#matrix_to_atom[3] = 3),
(n#matrix_to_atom[4] = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]) 

--

n#matrix_to_atom[2], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{n#matrix_to_atom[2] @ and([__inDomain(2,int(1..5));int(1..)])} 

--

(n#matrix_to_atom[1] = 5),
({n#matrix_to_atom[2] @ and([__inDomain(2,int(1..5));int(1..)])} = 4),
(n#matrix_to_atom[3] = 3),
(n#matrix_to_atom[4] = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(n#matrix_to_atom[1] = 5),
(n#matrix_to_atom[2] = 4),
(n#matrix_to_atom[3] = 3),
(n#matrix_to_atom[4] = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]) 

--

n#matrix_to_atom[3], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{n#matrix_to_atom[3] @ and([__inDomain(3,int(1..5));int(1..)])} 

--

(n#matrix_to_atom[1] = 5),
(n#matrix_to_atom[2] = 4),
({n#matrix_to_atom[3] @ and([__inDomain(3,int(1..5));int(1..)])} = 3),
(n#matrix_to_atom[4] = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(n#matrix_to_atom[1] = 5),
(n#matrix_to_atom[2] = 4),
(n#matrix_to_atom[3] = 3),
(n#matrix_to_atom[4] = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]) 

--

n#matrix_to_atom[4], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{n#matrix_to_atom[4] @ and([__inDomain(4,int(1..5));int(1..)])} 

--

(n#matrix_to_atom[1] = 5),
(n#matrix_to_atom[2] = 4),
(n#matrix_to_atom[3] = 3),
({n#matrix_to_atom[4] @ and([__inDomain(4,int(1..5));int(1..)])} = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(n#matrix_to_atom[1] = 5),
(n#matrix_to_atom[2] = 4),
(n#matrix_to_atom[3] = 3),
(n#matrix_to_atom[4] = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]) 

--

n#matrix_to_atom[5], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{n#matrix_to_atom[5] @ and([__inDomain(5,int(1..5));int(1..)])} 

--

(n#matrix_to_atom[1] = 5),
(n#matrix_to_atom[2] = 4),
(n#matrix_to_atom[3] = 3),
(n#matrix_to_atom[4] = 2),
({n#matrix_to_atom[5] @ and([__inDomain(5,int(1..5));int(1..)])} = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(n#matrix_to_atom[1] = 5),
(n#matrix_to_atom[2] = 4),
(n#matrix_to_atom[3] = 3),
(n#matrix_to_atom[4] = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]) 

--

(n#matrix_to_atom[1] = 5),
(n#matrix_to_atom[2] = 4),
(n#matrix_to_atom[3] = 3),
(n#matrix_to_atom[4] = 2),
(n#matrix_to_atom[5] = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]), 
   ~~> index_matrix_to_atom ([("Base", 5000)]) 
(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] < 5)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]) 

--

(n#matrix_to_atom[i] < 5), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(n#matrix_to_atom[i] <= sum([5,-1;int(1..)])) 

--

(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] <= sum([5,-1;int(1..)]))) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
and([given i: int(1..5)

such that

((n#matrix_to_atom[i] <= 4)) -> ((m#matrix_to_atom[i] = i))
 | i: int(1..5),(i < 4)]) 

--

n#matrix_to_atom[i], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{n#matrix_to_atom[i] @ and([__inDomain(i,int(1..5));int(1..)])} 

--

({n#matrix_to_atom[i] @ and([__inDomain(i,int(1..5));int(1..)])} <= 4), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(n#matrix_to_atom[i] <= 4) @ and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)])} 

--

{(n#matrix_to_atom[i] <= 4) @ and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(n#matrix_to_atom[i] <= 4),and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)]);int(1..)]) 

--

and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
and([__inDomain(i,int(1..5));int(1..)]) 

--

and([__inDomain(i,int(1..5));int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
__inDomain(i,int(1..5)) 

--

m#matrix_to_atom[i], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{m#matrix_to_atom[i] @ and([__inDomain(i,int(1..5));int(1..)])} 

--

({m#matrix_to_atom[i] @ and([__inDomain(i,int(1..5));int(1..)])} = i), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(m#matrix_to_atom[i] = i) @ and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)])} 

--

{(m#matrix_to_atom[i] = i) @ and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(m#matrix_to_atom[i] = i),and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)]);int(1..)]) 

--

and([and([__inDomain(i,int(1..5));int(1..)]);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
and([__inDomain(i,int(1..5));int(1..)]) 

--

and([__inDomain(i,int(1..5));int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
__inDomain(i,int(1..5)) 

--

__inDomain(i,int(1..5)), 
   ~~> introduce_wininterval_set_from_indomain ([("Minion", 4400)]) 
__minion_w_inintervalset(i,[1,5]) 

--

__inDomain(i,int(1..5)), 
   ~~> introduce_wininterval_set_from_indomain ([("Minion", 4400)]) 
__minion_w_inintervalset(i,[1,5]) 

--

(and([(n#matrix_to_atom[i] <= 4),__minion_w_inintervalset(i,[1,5]);int(1..)])) -> (and([(m#matrix_to_atom[i] = i),__minion_w_inintervalset(i,[1,5]);int(1..)])), 
   ~~> flatten_imply ([("Minion", 4200)]) 
(__0) -> (and([(m#matrix_to_atom[i] = i),__minion_w_inintervalset(i,[1,5]);int(1..)])) 
new variables:
  find __0: bool
new constraints:
  __0 =aux and([(n#matrix_to_atom[i] <= 4),__minion_w_inintervalset(i,[1,5]);int(1..)])
--

(__0) -> (and([(m#matrix_to_atom[i] = i),__minion_w_inintervalset(i,[1,5]);int(1..)])), 
   ~~> introduce_reifyimply_ineq_from_imply ([("Minion", 4400)]) 
ReifyImply(and([(m#matrix_to_atom[i] = i),__minion_w_inintervalset(i,[1,5]);int(1..)]), __0) 

--

__0 =aux and([(n#matrix_to_atom[i] <= 4),__minion_w_inintervalset(i,[1,5]);int(1..)]), 
   ~~> bool_eq_to_reify ([("Minion", 4400)]) 
Reify(and([(n#matrix_to_atom[i] <= 4),__minion_w_inintervalset(i,[1,5]);int(1..)]), __0) 

--

(i < 4), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(i <= sum([4,-1;int(1..)])) 

--

(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
and([given i: int(1..5)
find __0: bool

such that

ReifyImply(and([(m#matrix_to_atom[i] = i),__minion_w_inintervalset(i,[1,5]);int(1..)]), __0),
Reify(and([(n#matrix_to_atom[i] <= 4),__minion_w_inintervalset(i,[1,5]);int(1..)]), __0)
 | i: int(1..5),(i <= sum([4,-1;int(1..)]))]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
and([given i: int(1..5)
find __0: bool

such that

ReifyImply(and([(m#matrix_to_atom[i] = i),__minion_w_inintervalset(i,[1,5]);int(1..)]), __0),
Reify(and([(n#matrix_to_atom[i] <= 4),__minion_w_inintervalset(i,[1,5]);int(1..)]), __0)
 | i: int(1..5),(i <= 3)]) 

--

(i <= 3), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(i, 3, 0) 

--

[given i: int(1..5)
find __0: bool

such that

ReifyImply(and([(m#matrix_to_atom[i] = i),__minion_w_inintervalset(i,[1,5]);int(1..)]), __0),
Reify(and([(n#matrix_to_atom[i] <= 4),__minion_w_inintervalset(i,[1,5]);int(1..)]), __0)
 | i: int(1..5),Ineq(i, 3, 0)], 
   ~~> expand_comprehension ([("Base", 2000)]) 
[and([ReifyImply(and([(m#matrix_to_atom[1] = 1),__minion_w_inintervalset(1,[1,5]);int(1..)]), __0),Reify(and([(n#matrix_to_atom[1] <= 4),__minion_w_inintervalset(1,[1,5]);int(1..)]), __0);int(1..)]),and([ReifyImply(and([(m#matrix_to_atom[2] = 2),__minion_w_inintervalset(2,[1,5]);int(1..)]), __1),Reify(and([(n#matrix_to_atom[2] <= 4),__minion_w_inintervalset(2,[1,5]);int(1..)]), __1);int(1..)]),and([ReifyImply(and([(m#matrix_to_atom[3] = 3),__minion_w_inintervalset(3,[1,5]);int(1..)]), __2),Reify(and([(n#matrix_to_atom[3] <= 4),__minion_w_inintervalset(3,[1,5]);int(1..)]), __2);int(1..)]);int(1..)] 
new variables:
  find __0: bool
  find __1: bool
  find __2: bool
--

(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
and([and([ReifyImply(and([(m#matrix_to_atom[1] = 1),__minion_w_inintervalset(1,[1,5]);int(1..)]), __0),Reify(and([(n#matrix_to_atom[1] <= 4),__minion_w_inintervalset(1,[1,5]);int(1..)]), __0);int(1..)]),and([ReifyImply(and([(m#matrix_to_atom[2] = 2),__minion_w_inintervalset(2,[1,5]);int(1..)]), __1),Reify(and([(n#matrix_to_atom[2] <= 4),__minion_w_inintervalset(2,[1,5]);int(1..)]), __1);int(1..)]),and([ReifyImply(and([(m#matrix_to_atom[3] = 3),__minion_w_inintervalset(3,[1,5]);int(1..)]), __2),Reify(and([(n#matrix_to_atom[3] <= 4),__minion_w_inintervalset(3,[1,5]);int(1..)]), __2);int(1..)]);int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
and([ReifyImply(and([(m#matrix_to_atom[1] = 1);int(1..)]), __0),Reify(and([(n#matrix_to_atom[1] <= 4);int(1..)]), __0);int(1..)]),
and([ReifyImply(and([(m#matrix_to_atom[2] = 2);int(1..)]), __1),Reify(and([(n#matrix_to_atom[2] <= 4);int(1..)]), __1);int(1..)]),
and([ReifyImply(and([(m#matrix_to_atom[3] = 3);int(1..)]), __2),Reify(and([(n#matrix_to_atom[3] <= 4);int(1..)]), __2);int(1..)]) 

--

(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
and([ReifyImply(and([(m#matrix_to_atom[1] = 1);int(1..)]), __0),Reify(and([(n#matrix_to_atom[1] <= 4);int(1..)]), __0);int(1..)]),
and([ReifyImply(and([(m#matrix_to_atom[2] = 2);int(1..)]), __1),Reify(and([(n#matrix_to_atom[2] <= 4);int(1..)]), __1);int(1..)]),
and([ReifyImply(and([(m#matrix_to_atom[3] = 3);int(1..)]), __2),Reify(and([(n#matrix_to_atom[3] <= 4);int(1..)]), __2);int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
ReifyImply(and([(m#matrix_to_atom[1] = 1);int(1..)]), __0),
Reify(and([(n#matrix_to_atom[1] <= 4);int(1..)]), __0),
ReifyImply(and([(m#matrix_to_atom[2] = 2);int(1..)]), __1),
Reify(and([(n#matrix_to_atom[2] <= 4);int(1..)]), __1),
ReifyImply(and([(m#matrix_to_atom[3] = 3);int(1..)]), __2),
Reify(and([(n#matrix_to_atom[3] <= 4);int(1..)]), __2) 

--

and([(m#matrix_to_atom[1] = 1);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[1] = 1) 

--

and([(n#matrix_to_atom[1] <= 4);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(n#matrix_to_atom[1] <= 4) 

--

and([(m#matrix_to_atom[2] = 2);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[2] = 2) 

--

and([(n#matrix_to_atom[2] <= 4);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(n#matrix_to_atom[2] <= 4) 

--

and([(m#matrix_to_atom[3] = 3);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(m#matrix_to_atom[3] = 3) 

--

and([(n#matrix_to_atom[3] <= 4);int(1..)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(n#matrix_to_atom[3] <= 4) 

--

(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
ReifyImply((m#matrix_to_atom[1] = 1), __0),
Reify((n#matrix_to_atom[1] <= 4), __0),
ReifyImply((m#matrix_to_atom[2] = 2), __1),
Reify((n#matrix_to_atom[2] <= 4), __1),
ReifyImply((m#matrix_to_atom[3] = 3), __2),
Reify((n#matrix_to_atom[3] <= 4), __2), 
   ~~> index_matrix_to_atom ([("Base", 5000)]) 
(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
ReifyImply((m#matrix_to_atom_1 = 1), __0),
Reify((n#matrix_to_atom_1 <= 4), __0),
ReifyImply((m#matrix_to_atom_2 = 2), __1),
Reify((n#matrix_to_atom_2 <= 4), __1),
ReifyImply((m#matrix_to_atom_3 = 3), __2),
Reify((n#matrix_to_atom_3 <= 4), __2) 

--

(n#matrix_to_atom_1 <= 4), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(n#matrix_to_atom_1, 4, 0) 

--

(n#matrix_to_atom_2 <= 4), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(n#matrix_to_atom_2, 4, 0) 

--

(n#matrix_to_atom_3 <= 4), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(n#matrix_to_atom_3, 4, 0) 

--

Final model:

find m: matrix indexed by [[int(1..5)]] of int(1..5)
find n: matrix indexed by [[int(1..5)]] of int(1..5)
find __0: bool
find __1: bool
find __2: bool
find m#matrix_to_atom_1: int(1..5)
find m#matrix_to_atom_2: int(1..5)
find m#matrix_to_atom_3: int(1..5)
find m#matrix_to_atom_4: int(1..5)
find m#matrix_to_atom_5: int(1..5)
find n#matrix_to_atom_1: int(1..5)
find n#matrix_to_atom_2: int(1..5)
find n#matrix_to_atom_3: int(1..5)
find n#matrix_to_atom_4: int(1..5)
find n#matrix_to_atom_5: int(1..5)

such that

(n#matrix_to_atom_1 = 5),
(n#matrix_to_atom_2 = 4),
(n#matrix_to_atom_3 = 3),
(n#matrix_to_atom_4 = 2),
(n#matrix_to_atom_5 = 1),
ReifyImply((m#matrix_to_atom_1 = 1), __0),
Reify(Ineq(n#matrix_to_atom_1, 4, 0), __0),
ReifyImply((m#matrix_to_atom_2 = 2), __1),
Reify(Ineq(n#matrix_to_atom_2, 4, 0), __1),
ReifyImply((m#matrix_to_atom_3 = 3), __2),
Reify(Ineq(n#matrix_to_atom_3, 4, 0), __2)

