
Model before rewriting:

find a: matrix indexed by [[int(1..2)]] of int(1..2)

such that

(Sum([a[i] | i: int(1..2),]) = 3)

--

Successful Tranformation: 
[a[i] | i: int(1..2),], 
~~> expand_comprehension [1000; Base]
[a[1],a[2];int(1..)]


--

Successful Tranformation: 
a, 
~~> select_representation [8000; Base]
a#matrix_to_atom
new variables:
  find a#matrix_to_atom_1: int(1..2)
  find a#matrix_to_atom_2: int(1..2)

--

Successful Tranformation: 
a, 
~~> select_representation [8000; Base]
a#matrix_to_atom


--

Successful Tranformation: 
a#matrix_to_atom[1], 
~~> index_to_bubble [6000; Bubble]
{a#matrix_to_atom[1] @ and([__inDomain(1,int(1..2));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(1,int(1..2));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
[{a#matrix_to_atom[1] @ true},a#matrix_to_atom[2];int(1..)], 
~~> bubble_up [8900; Bubble]
{[a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)] @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
Sum({[a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)] @ true}), 
~~> bubble_up [8900; Bubble]
{Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) @ true} = 3), 
~~> bubble_up [8900; Bubble]
{(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),true;int(1..)])


--

Successful Tranformation: 
and([(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),
true


--

Successful Tranformation: 
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),
true, 
~~> partial_evaluator [9000; Base]
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3)


--

Successful Tranformation: 
a#matrix_to_atom[2], 
~~> index_to_bubble [6000; Bubble]
{a#matrix_to_atom[2] @ and([__inDomain(2,int(1..2));int(1..)])}


--

Successful Tranformation: 
and([__inDomain(2,int(1..2));int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
[a#matrix_to_atom[1],{a#matrix_to_atom[2] @ true};int(1..)], 
~~> bubble_up [8900; Bubble]
{[a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)] @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
Sum({[a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)] @ true}), 
~~> bubble_up [8900; Bubble]
{Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
({Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) @ true} = 3), 
~~> bubble_up [8900; Bubble]
{(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3) @ and([true;int(1..)])}


--

Successful Tranformation: 
and([true;int(1..)]), 
~~> constant_evaluator [9001; Constant]
true


--

Successful Tranformation: 
{(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3) @ true}, 
~~> expand_bubble [8900; Bubble]
and([(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),true;int(1..)])


--

Successful Tranformation: 
and([(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),true;int(1..)]), 
~~> partial_evaluator [9000; Base]
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),
true


--

Successful Tranformation: 
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),
true, 
~~> partial_evaluator [9000; Base]
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3)


--

Successful Tranformation: 
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([__0, __1], 3),SumGeq([__0, __1], 3);int(1..)])
new variables:
  find __0: int(1..2)
  find __1: int(1..2)
new constraints:
  __0 =aux a#matrix_to_atom[1]
  __1 =aux a#matrix_to_atom[2]

--

Successful Tranformation: 
and([SumLeq([__0, __1], 3),SumGeq([__0, __1], 3);int(1..)]),
__0 =aux a#matrix_to_atom[1],
__1 =aux a#matrix_to_atom[2], 
~~> partial_evaluator [9000; Base]
SumLeq([__0, __1], 3),
SumGeq([__0, __1], 3),
__0 =aux a#matrix_to_atom[1],
__1 =aux a#matrix_to_atom[2]


--

Successful Tranformation: 
a#matrix_to_atom[1], 
~~> index_matrix_to_atom [2000; Base]
a#matrix_to_atom_1


--

Successful Tranformation: 
a#matrix_to_atom[2], 
~~> index_matrix_to_atom [2000; Base]
a#matrix_to_atom_2


--


Final model:

find a: matrix indexed by [[int(1..2)]] of int(1..2)
find __0: int(1..2)
find __1: int(1..2)
find a#matrix_to_atom_1: int(1..2)
find a#matrix_to_atom_2: int(1..2)

such that

SumLeq([__0, __1], 3),
SumGeq([__0, __1], 3),
__0 =aux a#matrix_to_atom_1,
__1 =aux a#matrix_to_atom_2

