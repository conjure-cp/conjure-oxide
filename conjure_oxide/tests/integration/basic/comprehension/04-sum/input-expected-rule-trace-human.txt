Model before rewriting:

find a: matrix indexed by [[int(1..2)]] of int(1..2)

such that

(Sum([a[i] | i: int(1..2),]) = 3)

--

[a[i] | i: int(1..2),], 
   ~~> expand_comprehension ([("Base", 1000)]) 
[a[1],a[2];int(1..)] 

--

a, 
   ~~> select_representation ([("Base", 8000)]) 
a#matrix_to_atom 
new variables:
  find a#matrix_to_atom_1: int(1..2)
  find a#matrix_to_atom_2: int(1..2)
--

a, 
   ~~> select_representation ([("Base", 8000)]) 
a#matrix_to_atom 

--

a#matrix_to_atom[1], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{a#matrix_to_atom[1] @ and([__inDomain(1,int(1..2));int(1..)])} 

--

and([__inDomain(1,int(1..2));int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

[{a#matrix_to_atom[1] @ true},a#matrix_to_atom[2];int(1..)], 
   ~~> bubble_up ([("Bubble", 8900)]) 
{[a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)] @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

Sum({[a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

({Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) @ true} = 3), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

{(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),true;int(1..)]) 

--

and([(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),
true 

--

(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),
true, 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3) 

--

a#matrix_to_atom[2], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{a#matrix_to_atom[2] @ and([__inDomain(2,int(1..2));int(1..)])} 

--

and([__inDomain(2,int(1..2));int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

[a#matrix_to_atom[1],{a#matrix_to_atom[2] @ true};int(1..)], 
   ~~> bubble_up ([("Bubble", 8900)]) 
{[a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)] @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

Sum({[a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

({Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) @ true} = 3), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
true 

--

{(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),true;int(1..)]) 

--

and([(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),true;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),
true 

--

(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3),
true, 
   ~~> partial_evaluator ([("Base", 9000)]) 
(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3) 

--

(Sum([a#matrix_to_atom[1],a#matrix_to_atom[2];int(1..)]) = 3), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([__0, __1], 3),SumGeq([__0, __1], 3);int(1..)]) 
new variables:
  find __0: int(1..2)
  find __1: int(1..2)
new constraints:
  __0 =aux a#matrix_to_atom[1]
  __1 =aux a#matrix_to_atom[2]
--

and([SumLeq([__0, __1], 3),SumGeq([__0, __1], 3);int(1..)]),
__0 =aux a#matrix_to_atom[1],
__1 =aux a#matrix_to_atom[2], 
   ~~> partial_evaluator ([("Base", 9000)]) 
SumLeq([__0, __1], 3),
SumGeq([__0, __1], 3),
__0 =aux a#matrix_to_atom[1],
__1 =aux a#matrix_to_atom[2] 

--

a#matrix_to_atom[1], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
a#matrix_to_atom_1 

--

a#matrix_to_atom[2], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
a#matrix_to_atom_2 

--

Final model:

find a: matrix indexed by [[int(1..2)]] of int(1..2)
find __0: int(1..2)
find __1: int(1..2)
find a#matrix_to_atom_1: int(1..2)
find a#matrix_to_atom_2: int(1..2)

such that

SumLeq([__0, __1], 3),
SumGeq([__0, __1], 3),
__0 =aux a#matrix_to_atom_1,
__1 =aux a#matrix_to_atom_2

