Model before rewriting:

letting k be 3
find position: matrix indexed by [[positionDomain]] of positionDomain
letting positionDomain be domain int(1..6)
letting two_k be 6

such that

and([(position[Sum([i,k;int(1..2)])] = Sum([Sum([position[i],i;int(1..2)]),1;int(1..2)])) | i: int(1..3),]),
allDiff(position)

--

position, 
   ~~> select_representation ([("Base", 8000)]) 
position#matrix_to_atom 
new variables:
  find position#matrix_to_atom_1: int(1..6)
  find position#matrix_to_atom_2: int(1..6)
  find position#matrix_to_atom_3: int(1..6)
  find position#matrix_to_atom_4: int(1..6)
  find position#matrix_to_atom_5: int(1..6)
  find position#matrix_to_atom_6: int(1..6)
--

and([(position[Sum([i,k;int(1..2)])] = Sum([Sum([position[i],i;int(1..2)]),1;int(1..2)])) | i: int(1..3),]),
allDiff(position#matrix_to_atom), 
   ~~> substitute_domain_lettings ([("Base", 5000)]) 
and([(position[Sum([i,k;int(1..2)])] = Sum([Sum([position[i],i;int(1..2)]),1;int(1..2)])) | i: int(1..3),]),
allDiff(position#matrix_to_atom) 

--

allDiff(position#matrix_to_atom), 
   ~~> matrix_ref_to_atom ([("Base", 2000)]) 
allDiff([position#matrix_to_atom_1,position#matrix_to_atom_2,position#matrix_to_atom_3,position#matrix_to_atom_4,position#matrix_to_atom_5,position#matrix_to_atom_6;int(1..)]) 

--

allDiff([position#matrix_to_atom_1,position#matrix_to_atom_2,position#matrix_to_atom_3,position#matrix_to_atom_4,position#matrix_to_atom_5,position#matrix_to_atom_6;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

[(position[Sum([i,k;int(1..2)])] = Sum([Sum([position[i],i;int(1..2)]),1;int(1..2)])) | i: int(1..3),], 
   ~~> expand_comprehension ([("Base", 1000)]) 
[(position[Sum([1,k;int(1..2)])] = Sum([Sum([position[1],1;int(1..2)]),1;int(1..2)])),(position[Sum([2,k;int(1..2)])] = Sum([Sum([position[2],2;int(1..2)]),1;int(1..2)])),(position[Sum([3,k;int(1..2)])] = Sum([Sum([position[3],3;int(1..2)]),1;int(1..2)]));int(1..)] 

--

and([(position[Sum([1,k;int(1..2)])] = Sum([Sum([position[1],1;int(1..2)]),1;int(1..2)])),(position[Sum([2,k;int(1..2)])] = Sum([Sum([position[2],2;int(1..2)]),1;int(1..2)])),(position[Sum([3,k;int(1..2)])] = Sum([Sum([position[3],3;int(1..2)]),1;int(1..2)]));int(1..)]),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position[Sum([1,k;int(1..2)])] = Sum([Sum([position[1],1;int(1..2)]),1;int(1..2)])),
(position[Sum([2,k;int(1..2)])] = Sum([Sum([position[2],2;int(1..2)]),1;int(1..2)])),
(position[Sum([3,k;int(1..2)])] = Sum([Sum([position[3],3;int(1..2)]),1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

Sum([Sum([position[1],1;int(1..2)]),1;int(1..2)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([position[1],1,1;int(1..2)]) 

--

Sum([Sum([position[2],2;int(1..2)]),1;int(1..2)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([position[2],2,1;int(1..2)]) 

--

Sum([Sum([position[3],3;int(1..2)]),1;int(1..2)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
Sum([position[3],3,1;int(1..2)]) 

--

position, 
   ~~> select_representation ([("Base", 8000)]) 
position#matrix_to_atom 

--

position, 
   ~~> select_representation ([("Base", 8000)]) 
position#matrix_to_atom 

--

position, 
   ~~> select_representation ([("Base", 8000)]) 
position#matrix_to_atom 

--

position, 
   ~~> select_representation ([("Base", 8000)]) 
position#matrix_to_atom 

--

position, 
   ~~> select_representation ([("Base", 8000)]) 
position#matrix_to_atom 

--

position, 
   ~~> select_representation ([("Base", 8000)]) 
position#matrix_to_atom 

--

position#matrix_to_atom[Sum([1,k;int(1..2)])], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{position#matrix_to_atom[Sum([1,k;int(1..2)])] @ and([__inDomain(Sum([1,k;int(1..2)]),int(1..6));int(1..)])} 

--

({position#matrix_to_atom[Sum([1,k;int(1..2)])] @ and([__inDomain(Sum([1,k;int(1..2)]),int(1..6));int(1..)])} = Sum([position#matrix_to_atom[1],1,1;int(1..2)])), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])) @ and([and([__inDomain(Sum([1,k;int(1..2)]),int(1..6));int(1..)]);int(1..)])} 

--

{(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])) @ and([and([__inDomain(Sum([1,k;int(1..2)]),int(1..6));int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),and([and([__inDomain(Sum([1,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]);int(1..)]) 

--

and([(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),and([and([__inDomain(Sum([1,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]);int(1..)]),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
and([and([__inDomain(Sum([1,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
and([and([__inDomain(Sum([1,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
and([__inDomain(Sum([1,k;int(1..2)]),int(1..6));int(1..)]),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
and([__inDomain(Sum([1,k;int(1..2)]),int(1..6));int(1..)]),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

position#matrix_to_atom[1], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{position#matrix_to_atom[1] @ and([__inDomain(1,int(1..6));int(1..)])} 

--

and([__inDomain(1,int(1..6));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

[{position#matrix_to_atom[1] @ true},1,1;int(1..2)], 
   ~~> bubble_up ([("Bubble", 8900)]) 
{[position#matrix_to_atom[1],1,1;int(1..2)] @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

Sum({[position#matrix_to_atom[1],1,1;int(1..2)] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([position#matrix_to_atom[1],1,1;int(1..2)]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = {Sum([position#matrix_to_atom[1],1,1;int(1..2)]) @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),true;int(1..)]) 

--

and([(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),true;int(1..)]),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
true,
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
true,
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

position#matrix_to_atom[Sum([2,k;int(1..2)])], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{position#matrix_to_atom[Sum([2,k;int(1..2)])] @ and([__inDomain(Sum([2,k;int(1..2)]),int(1..6));int(1..)])} 

--

({position#matrix_to_atom[Sum([2,k;int(1..2)])] @ and([__inDomain(Sum([2,k;int(1..2)]),int(1..6));int(1..)])} = Sum([position#matrix_to_atom[2],2,1;int(1..2)])), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])) @ and([and([__inDomain(Sum([2,k;int(1..2)]),int(1..6));int(1..)]);int(1..)])} 

--

{(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])) @ and([and([__inDomain(Sum([2,k;int(1..2)]),int(1..6));int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),and([and([__inDomain(Sum([2,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]);int(1..)]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
and([(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),and([and([__inDomain(Sum([2,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]);int(1..)]),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
and([and([__inDomain(Sum([2,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
and([and([__inDomain(Sum([2,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
and([__inDomain(Sum([2,k;int(1..2)]),int(1..6));int(1..)]),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
and([__inDomain(Sum([2,k;int(1..2)]),int(1..6));int(1..)]),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

position#matrix_to_atom[2], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{position#matrix_to_atom[2] @ and([__inDomain(2,int(1..6));int(1..)])} 

--

and([__inDomain(2,int(1..6));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

[{position#matrix_to_atom[2] @ true},2,1;int(1..2)], 
   ~~> bubble_up ([("Bubble", 8900)]) 
{[position#matrix_to_atom[2],2,1;int(1..2)] @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

Sum({[position#matrix_to_atom[2],2,1;int(1..2)] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([position#matrix_to_atom[2],2,1;int(1..2)]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

(position#matrix_to_atom[Sum([2,k;int(1..2)])] = {Sum([position#matrix_to_atom[2],2,1;int(1..2)]) @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),true;int(1..)]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
and([(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),true;int(1..)]),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
true,
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
true,
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

position#matrix_to_atom[Sum([3,k;int(1..2)])], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{position#matrix_to_atom[Sum([3,k;int(1..2)])] @ and([__inDomain(Sum([3,k;int(1..2)]),int(1..6));int(1..)])} 

--

({position#matrix_to_atom[Sum([3,k;int(1..2)])] @ and([__inDomain(Sum([3,k;int(1..2)]),int(1..6));int(1..)])} = Sum([position#matrix_to_atom[3],3,1;int(1..2)])), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])) @ and([and([__inDomain(Sum([3,k;int(1..2)]),int(1..6));int(1..)]);int(1..)])} 

--

{(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])) @ and([and([__inDomain(Sum([3,k;int(1..2)]),int(1..6));int(1..)]);int(1..)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),and([and([__inDomain(Sum([3,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]);int(1..)]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
and([(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),and([and([__inDomain(Sum([3,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]);int(1..)]),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
and([and([__inDomain(Sum([3,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
and([and([__inDomain(Sum([3,k;int(1..2)]),int(1..6));int(1..)]);int(1..)]),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
and([__inDomain(Sum([3,k;int(1..2)]),int(1..6));int(1..)]),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
and([__inDomain(Sum([3,k;int(1..2)]),int(1..6));int(1..)]),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__inDomain(Sum([3,k;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

position#matrix_to_atom[3], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{position#matrix_to_atom[3] @ and([__inDomain(3,int(1..6));int(1..)])} 

--

and([__inDomain(3,int(1..6));int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

[{position#matrix_to_atom[3] @ true},3,1;int(1..2)], 
   ~~> bubble_up ([("Bubble", 8900)]) 
{[position#matrix_to_atom[3],3,1;int(1..2)] @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

Sum({[position#matrix_to_atom[3],3,1;int(1..2)] @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{Sum([position#matrix_to_atom[3],3,1;int(1..2)]) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

(position#matrix_to_atom[Sum([3,k;int(1..2)])] = {Sum([position#matrix_to_atom[3],3,1;int(1..2)]) @ true}), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])) @ and([true;int(1..)])} 

--

and([true;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

{(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])) @ true}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
and([(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),true;int(1..)]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
and([(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),true;int(1..)]),
__inDomain(Sum([3,k;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
true,
__inDomain(Sum([3,k;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
true,
__inDomain(Sum([3,k;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(position#matrix_to_atom[Sum([1,k;int(1..2)])] = Sum([position#matrix_to_atom[1],1,1;int(1..2)])),
__inDomain(Sum([1,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,k;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,k;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,k;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__inDomain(Sum([3,k;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]) 

--

k, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
3 

--

k, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
3 

--

k, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
3 

--

k, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
3 

--

k, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
3 

--

k, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
3 

--

Sum([1,3;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([1,3;int(1..)]) 

--

Sum([1,3;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
4 

--

position#matrix_to_atom[4], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
position#matrix_to_atom_4 

--

Sum([position#matrix_to_atom[1],1,1;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([position#matrix_to_atom[1],1,1;int(1..)]) 

--

Sum([position#matrix_to_atom[1],1,1;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
Sum([position#matrix_to_atom[1],2;int(1..)]) 

--

(position#matrix_to_atom_4 = Sum([position#matrix_to_atom[1],2;int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([__0, 2], position#matrix_to_atom_4),SumGeq([__0, 2], position#matrix_to_atom_4);int(1..)]) 
new variables:
  find __0: int(1..6)
new constraints:
  __0 =aux position#matrix_to_atom[1]
--

and([SumLeq([__0, 2], position#matrix_to_atom_4),SumGeq([__0, 2], position#matrix_to_atom_4);int(1..)]),
__inDomain(Sum([1,3;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,3;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,3;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,3;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__inDomain(Sum([3,3;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1], 
   ~~> partial_evaluator ([("Base", 9000)]) 
SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
__inDomain(Sum([1,3;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([2,3;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,3;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,3;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__inDomain(Sum([3,3;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1] 

--

Sum([1,3;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([1,3;int(1..)]) 

--

Sum([1,3;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
4 

--

__inDomain(4,int(1..6)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
true,
(position#matrix_to_atom[Sum([2,3;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,3;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,3;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__inDomain(Sum([3,3;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1], 
   ~~> partial_evaluator ([("Base", 9000)]) 
SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
(position#matrix_to_atom[Sum([2,3;int(1..2)])] = Sum([position#matrix_to_atom[2],2,1;int(1..2)])),
__inDomain(Sum([2,3;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,3;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__inDomain(Sum([3,3;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1] 

--

Sum([2,3;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([2,3;int(1..)]) 

--

Sum([2,3;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
5 

--

position#matrix_to_atom[5], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
position#matrix_to_atom_5 

--

Sum([position#matrix_to_atom[2],2,1;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([position#matrix_to_atom[2],2,1;int(1..)]) 

--

Sum([position#matrix_to_atom[2],2,1;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
Sum([position#matrix_to_atom[2],3;int(1..)]) 

--

(position#matrix_to_atom_5 = Sum([position#matrix_to_atom[2],3;int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([__1, 3], position#matrix_to_atom_5),SumGeq([__1, 3], position#matrix_to_atom_5);int(1..)]) 
new variables:
  find __1: int(1..6)
new constraints:
  __1 =aux position#matrix_to_atom[2]
--

SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
and([SumLeq([__1, 3], position#matrix_to_atom_5),SumGeq([__1, 3], position#matrix_to_atom_5);int(1..)]),
__inDomain(Sum([2,3;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,3;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__inDomain(Sum([3,3;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1],
__1 =aux position#matrix_to_atom[2], 
   ~~> partial_evaluator ([("Base", 9000)]) 
SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
SumLeq([__1, 3], position#matrix_to_atom_5),
SumGeq([__1, 3], position#matrix_to_atom_5),
__inDomain(Sum([2,3;int(1..2)]),int(1..6)),
(position#matrix_to_atom[Sum([3,3;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__inDomain(Sum([3,3;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1],
__1 =aux position#matrix_to_atom[2] 

--

Sum([2,3;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([2,3;int(1..)]) 

--

Sum([2,3;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
5 

--

__inDomain(5,int(1..6)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
SumLeq([__1, 3], position#matrix_to_atom_5),
SumGeq([__1, 3], position#matrix_to_atom_5),
true,
(position#matrix_to_atom[Sum([3,3;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__inDomain(Sum([3,3;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1],
__1 =aux position#matrix_to_atom[2], 
   ~~> partial_evaluator ([("Base", 9000)]) 
SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
SumLeq([__1, 3], position#matrix_to_atom_5),
SumGeq([__1, 3], position#matrix_to_atom_5),
(position#matrix_to_atom[Sum([3,3;int(1..2)])] = Sum([position#matrix_to_atom[3],3,1;int(1..2)])),
__inDomain(Sum([3,3;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1],
__1 =aux position#matrix_to_atom[2] 

--

Sum([3,3;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([3,3;int(1..)]) 

--

Sum([3,3;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
6 

--

position#matrix_to_atom[6], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
position#matrix_to_atom_6 

--

Sum([position#matrix_to_atom[3],3,1;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([position#matrix_to_atom[3],3,1;int(1..)]) 

--

Sum([position#matrix_to_atom[3],3,1;int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
Sum([position#matrix_to_atom[3],4;int(1..)]) 

--

(position#matrix_to_atom_6 = Sum([position#matrix_to_atom[3],4;int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([__2, 4], position#matrix_to_atom_6),SumGeq([__2, 4], position#matrix_to_atom_6);int(1..)]) 
new variables:
  find __2: int(1..6)
new constraints:
  __2 =aux position#matrix_to_atom[3]
--

SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
SumLeq([__1, 3], position#matrix_to_atom_5),
SumGeq([__1, 3], position#matrix_to_atom_5),
and([SumLeq([__2, 4], position#matrix_to_atom_6),SumGeq([__2, 4], position#matrix_to_atom_6);int(1..)]),
__inDomain(Sum([3,3;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1],
__1 =aux position#matrix_to_atom[2],
__2 =aux position#matrix_to_atom[3], 
   ~~> partial_evaluator ([("Base", 9000)]) 
SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
SumLeq([__1, 3], position#matrix_to_atom_5),
SumGeq([__1, 3], position#matrix_to_atom_5),
SumLeq([__2, 4], position#matrix_to_atom_6),
SumGeq([__2, 4], position#matrix_to_atom_6),
__inDomain(Sum([3,3;int(1..2)]),int(1..6)),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1],
__1 =aux position#matrix_to_atom[2],
__2 =aux position#matrix_to_atom[3] 

--

Sum([3,3;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
Sum([3,3;int(1..)]) 

--

Sum([3,3;int(1..)]), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
6 

--

__inDomain(6,int(1..6)), 
   ~~> apply_eval_constant ([("Constant", 9001)]) 
true 

--

SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
SumLeq([__1, 3], position#matrix_to_atom_5),
SumGeq([__1, 3], position#matrix_to_atom_5),
SumLeq([__2, 4], position#matrix_to_atom_6),
SumGeq([__2, 4], position#matrix_to_atom_6),
true,
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1],
__1 =aux position#matrix_to_atom[2],
__2 =aux position#matrix_to_atom[3], 
   ~~> partial_evaluator ([("Base", 9000)]) 
SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
SumLeq([__1, 3], position#matrix_to_atom_5),
SumGeq([__1, 3], position#matrix_to_atom_5),
SumLeq([__2, 4], position#matrix_to_atom_6),
SumGeq([__2, 4], position#matrix_to_atom_6),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom[1],
__1 =aux position#matrix_to_atom[2],
__2 =aux position#matrix_to_atom[3] 

--

position#matrix_to_atom[1], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
position#matrix_to_atom_1 

--

position#matrix_to_atom[2], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
position#matrix_to_atom_2 

--

position#matrix_to_atom[3], 
   ~~> index_matrix_to_atom ([("Base", 2000)]) 
position#matrix_to_atom_3 

--

Final model:

letting k be 3
find position: matrix indexed by [[int(1..6)]] of int(1..6)
letting positionDomain be domain int(1..6)
letting two_k be 6
find __0: int(1..6)
find __1: int(1..6)
find __2: int(1..6)
find position#matrix_to_atom_1: int(1..6)
find position#matrix_to_atom_2: int(1..6)
find position#matrix_to_atom_3: int(1..6)
find position#matrix_to_atom_4: int(1..6)
find position#matrix_to_atom_5: int(1..6)
find position#matrix_to_atom_6: int(1..6)

such that

SumLeq([__0, 2], position#matrix_to_atom_4),
SumGeq([__0, 2], position#matrix_to_atom_4),
SumLeq([__1, 3], position#matrix_to_atom_5),
SumGeq([__1, 3], position#matrix_to_atom_5),
SumLeq([__2, 4], position#matrix_to_atom_6),
SumGeq([__2, 4], position#matrix_to_atom_6),
__flat_alldiff([position#matrix_to_atom_1, position#matrix_to_atom_2, position#matrix_to_atom_3, position#matrix_to_atom_4, position#matrix_to_atom_5, position#matrix_to_atom_6]),
__0 =aux position#matrix_to_atom_1,
__1 =aux position#matrix_to_atom_2,
__2 =aux position#matrix_to_atom_3

