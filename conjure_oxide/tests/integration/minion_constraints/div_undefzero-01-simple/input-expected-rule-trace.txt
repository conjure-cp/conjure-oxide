
Model before rewriting:

find x: int(1..10)
find y: int(2..4)

such that

(UnsafeDiv(x, y) = 5)

--

Successful Tranformation: 
UnsafeDiv(x, y), 
~~> div_to_bubble [6000; Bubble]
{SafeDiv(x, y) @ (y != 0)}


--

Successful Tranformation: 
({SafeDiv(x, y) @ (y != 0)} = 5), 
~~> bubble_up [8900; Bubble]
{(SafeDiv(x, y) = 5) @ and([(y != 0);int(1..)])}


--

Successful Tranformation: 
{(SafeDiv(x, y) = 5) @ and([(y != 0);int(1..)])}, 
~~> expand_bubble [8900; Bubble]
and([(SafeDiv(x, y) = 5),and([(y != 0);int(1..)]);int(1..)])


--

Successful Tranformation: 
and([(SafeDiv(x, y) = 5),and([(y != 0);int(1..)]);int(1..)]), 
~~> partial_evaluator [9000; Base]
(SafeDiv(x, y) = 5),
and([(y != 0);int(1..)])


--

Successful Tranformation: 
(SafeDiv(x, y) = 5),
and([(y != 0);int(1..)]), 
~~> partial_evaluator [9000; Base]
(SafeDiv(x, y) = 5),
(y != 0)


--

Successful Tranformation: 
(SafeDiv(x, y) = 5), 
~~> introduce_diveq [4200; Minion]
DivEq(x, y, 5)


--


Final model:

find x: int(1..10)
find y: int(2..4)

such that

DivEq(x, y, 5),
(y != 0)

