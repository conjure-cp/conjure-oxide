language ESSENCE' 1.0

$ as with 03, but testing the rules that flatten modneqs.
$
$ these appear a lot with nested mods, because of the additional definedness
$ constraints we add. For example:
$
$ x%(y%z) ~[safe-mod]-> x % (y%z) /\ (y%z) != 0 
$
$ ... 
find x : int(5..7)
find y : int(0..3)
find z : int(0..4)

such that x % (y%z) != 3
