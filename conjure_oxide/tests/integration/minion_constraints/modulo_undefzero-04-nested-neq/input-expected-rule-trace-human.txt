y % z, 
   ~~> mod_to_bubble ([("Bubble", 6000)]) 
{SafeMod(y,z) @ (z != 0)} 

--

x % {SafeMod(y,z) @ (z != 0)}, 
   ~~> bubble_up ([("Bubble", 8900)]) 
{x % SafeMod(y,z) @ And([(z != 0)])} 

--

({x % SafeMod(y,z) @ And([(z != 0)])} != 3), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(x % SafeMod(y,z) != 3) @ And([And([(z != 0)])])} 

--

{(x % SafeMod(y,z) != 3) @ And([And([(z != 0)])])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
And([(x % SafeMod(y,z) != 3), And([And([(z != 0)])])]) 

--

And([And([(z != 0)])]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
And([(z != 0)]) 

--

And([(z != 0)]), 
   ~~> remove_unit_vector_and ([("Base", 8800)]) 
(z != 0) 

--

x % SafeMod(y,z), 
   ~~> mod_to_bubble ([("Bubble", 6000)]) 
{SafeMod(x,SafeMod(y,z)) @ (SafeMod(y,z) != 0)} 

--

({SafeMod(x,SafeMod(y,z)) @ (SafeMod(y,z) != 0)} != 3), 
   ~~> bubble_up ([("Bubble", 8900)]) 
{(SafeMod(x,SafeMod(y,z)) != 3) @ And([(SafeMod(y,z) != 0)])} 

--

{(SafeMod(x,SafeMod(y,z)) != 3) @ And([(SafeMod(y,z) != 0)])}, 
   ~~> expand_bubble ([("Bubble", 8900)]) 
And([(SafeMod(x,SafeMod(y,z)) != 3), And([(SafeMod(y,z) != 0)])]) 

--

And([And([(SafeMod(x,SafeMod(y,z)) != 3), And([(SafeMod(y,z) != 0)])]), (z != 0)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
And([(SafeMod(x,SafeMod(y,z)) != 3), (SafeMod(y,z) != 0), (z != 0)]) 

--

(SafeMod(x,SafeMod(y,z)) != 3), 
   ~~> flatten_binop ([("Minion", 4200)]) 
(__0 != 3) 
new variables:
  __0: int(0..2)
new constraints:
  __0 =aux SafeMod(x,SafeMod(y,z))
--

(SafeMod(y,z) != 0), 
   ~~> flatten_binop ([("Minion", 4200)]) 
(__1 != 0) 
new variables:
  __1: int(0..3)
new constraints:
  __1 =aux SafeMod(y,z)
--

SafeMod(x,SafeMod(y,z)), 
   ~~> flatten_binop ([("Minion", 4200)]) 
SafeMod(x,__2) 
new variables:
  __2: int(0..3)
new constraints:
  __2 =aux SafeMod(y,z)
--

__0 =aux SafeMod(x,__2), 
   ~~> introduce_modeq ([("Minion", 4200)]) 
ModEq(x, __2, __0) 

--

__1 =aux SafeMod(y,z), 
   ~~> introduce_modeq ([("Minion", 4200)]) 
ModEq(y, z, __1) 

--

__2 =aux SafeMod(y,z), 
   ~~> introduce_modeq ([("Minion", 4200)]) 
ModEq(y, z, __2) 

--

