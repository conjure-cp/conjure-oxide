{"message":"Rule applicable: flatten_binop ([(\"Minion\", 4400)]), to expression: (x % y % z != 3), resulting in: (__0 != 3)","target":"rule_engine"}
{"message":"Rule applicable: mod_to_bubble ([(\"Bubble\", 6000)]), to expression: y % z, resulting in: {SafeMod(y,z) @ (z != 0)}","target":"rule_engine"}
{"message":"Rule applicable: bubble_up ([(\"Bubble\", 8900)]), to expression: x % {SafeMod(y,z) @ (z != 0)}, resulting in: {x % SafeMod(y,z) @ And([(z != 0)])}","target":"rule_engine"}
{"message":"Rule applicable: bubble_up ([(\"Bubble\", 8900)]), to expression: __0 =aux {x % SafeMod(y,z) @ And([(z != 0)])}, resulting in: {__0 =aux x % SafeMod(y,z) @ And([And([(z != 0)])])}","target":"rule_engine"}
{"message":"Rule applicable: expand_bubble ([(\"Bubble\", 8900)]), to expression: {__0 =aux x % SafeMod(y,z) @ And([And([(z != 0)])])}, resulting in: And([__0 =aux x % SafeMod(y,z), And([And([(z != 0)])])])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([(__0 != 3), And([__0 =aux x % SafeMod(y,z), And([And([(z != 0)])])])]), resulting in: And([(__0 != 3), __0 =aux x % SafeMod(y,z), (z != 0)])","target":"rule_engine"}
{"message":"Rule applicable: mod_to_bubble ([(\"Bubble\", 6000)]), to expression: x % SafeMod(y,z), resulting in: {SafeMod(x,SafeMod(y,z)) @ (SafeMod(y,z) != 0)}","target":"rule_engine"}
{"message":"Rule applicable: bubble_up ([(\"Bubble\", 8900)]), to expression: __0 =aux {SafeMod(x,SafeMod(y,z)) @ (SafeMod(y,z) != 0)}, resulting in: {__0 =aux SafeMod(x,SafeMod(y,z)) @ And([(SafeMod(y,z) != 0)])}","target":"rule_engine"}
{"message":"Rule applicable: expand_bubble ([(\"Bubble\", 8900)]), to expression: {__0 =aux SafeMod(x,SafeMod(y,z)) @ And([(SafeMod(y,z) != 0)])}, resulting in: And([__0 =aux SafeMod(x,SafeMod(y,z)), And([(SafeMod(y,z) != 0)])])","target":"rule_engine"}
{"message":"Rule applicable: normalise_associative_commutative ([(\"Base\", 8400)]), to expression: And([(__0 != 3), And([__0 =aux SafeMod(x,SafeMod(y,z)), And([(SafeMod(y,z) != 0)])]), (z != 0)]), resulting in: And([(__0 != 3), __0 =aux SafeMod(x,SafeMod(y,z)), (SafeMod(y,z) != 0), (z != 0)])","target":"rule_engine"}
{"message":"Rule applicable: flatten_binop ([(\"Minion\", 4400)]), to expression: SafeMod(x,SafeMod(y,z)), resulting in: SafeMod(x,__1)","target":"rule_engine"}
{"message":"Rule applicable: introduce_modeq ([(\"Minion\", 4200)]), to expression: __0 =aux SafeMod(x,__1), resulting in: ModEq(x, __1, __0)","target":"rule_engine"}
{"message":"Rule applicable: flatten_binop ([(\"Minion\", 4400)]), to expression: (SafeMod(y,z) != 0), resulting in: (__2 != 0)","target":"rule_engine"}
{"message":"Rule applicable: introduce_modeq ([(\"Minion\", 4200)]), to expression: __1 =aux SafeMod(y,z), resulting in: ModEq(y, z, __1)","target":"rule_engine"}
{"message":"Rule applicable: introduce_modeq ([(\"Minion\", 4200)]), to expression: __2 =aux SafeMod(y,z), resulting in: ModEq(y, z, __2)","target":"rule_engine"}
{"count":15,"message":" Number of rules applied"}
