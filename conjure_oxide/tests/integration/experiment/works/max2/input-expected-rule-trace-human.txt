Model before rewriting:

find a: int(1..4)
find b: int(1..4)
find x: int(1..4)

such that

(Max([a, b]) >= 2),
(x = Sum([Max([a, b]), 1]))

--

Max([a, b]), 
   ~~> max_to_var ([("Base", 6000)]) 
__0 
new variables:
  __0: int(1..4)
new constraints:
  (__0 >= a)
  (__0 >= b)
  Or([(__0 = a), (__0 = b)])
--

Max([a, b]), 
   ~~> max_to_var ([("Base", 6000)]) 
__1 
new variables:
  __1: int(1..4)
new constraints:
  (__1 >= a)
  (__1 >= b)
  Or([(__1 = a), (__1 = b)])
--

(x = Sum([__1, 1])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
And([SumLeq([__1, 1], x), SumGeq([__1, 1], x)]) 

--

(__0 >= 2), 
   ~~> geq_to_ineq ([("Minion", 4100)]) 
Ineq(2, __0, 0) 

--

(__0 >= a), 
   ~~> geq_to_ineq ([("Minion", 4100)]) 
Ineq(a, __0, 0) 

--

(__0 >= b), 
   ~~> geq_to_ineq ([("Minion", 4100)]) 
Ineq(b, __0, 0) 

--

(__1 >= a), 
   ~~> geq_to_ineq ([("Minion", 4100)]) 
Ineq(a, __1, 0) 

--

(__1 >= b), 
   ~~> geq_to_ineq ([("Minion", 4100)]) 
Ineq(b, __1, 0) 

--

Final model:

find a: int(1..4)
find b: int(1..4)
find x: int(1..4)
find __0: int(1..4)
find __1: int(1..4)

such that

Ineq(2, __0, 0),
And([SumLeq([__1, 1], x), SumGeq([__1, 1], x)]),
Ineq(a, __0, 0),
Ineq(b, __0, 0),
Or([(__0 = a), (__0 = b)]),
Ineq(a, __1, 0),
Ineq(b, __1, 0),
Or([(__1 = a), (__1 = b)])

