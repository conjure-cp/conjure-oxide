
Model before rewriting:

find a: int(1..4)
find b: int(1..4)
find x: int(1..4)

such that

(max([a,b;int(1..2)]) >= 2),
(x = Sum([max([a,b;int(1..2)]),1;int(1..2)]))

--

Successful Tranformation: 
max([a,b;int(1..2)]), 
~~> matrix_to_list [2000; Base]
max([a,b;int(1..)])


--

Successful Tranformation: 
max([a,b;int(1..)]), 
~~> max_to_var [6000; Base]
__0
new variables:
  find __0: int(1..4)
new constraints:
  (__0 >= a)
  (__0 >= b)
  or([(__0 = a),(__0 = b);int(1..)])

--

Successful Tranformation: 
(__0 >= 2), 
~~> geq_to_ineq [4100; Minion]
Ineq(2, __0, 0)


--

Successful Tranformation: 
(__0 >= a), 
~~> geq_to_ineq [4100; Minion]
Ineq(a, __0, 0)


--

Successful Tranformation: 
(__0 >= b), 
~~> geq_to_ineq [4100; Minion]
Ineq(b, __0, 0)


--

Successful Tranformation: 
Sum([max([a,b;int(1..2)]),1;int(1..2)]), 
~~> matrix_to_list [2000; Base]
Sum([max([a,b;int(1..2)]),1;int(1..)])


--

Successful Tranformation: 
max([a,b;int(1..2)]), 
~~> matrix_to_list [2000; Base]
max([a,b;int(1..)])


--

Successful Tranformation: 
max([a,b;int(1..)]), 
~~> max_to_var [6000; Base]
__1
new variables:
  find __1: int(1..4)
new constraints:
  (__1 >= a)
  (__1 >= b)
  or([(__1 = a),(__1 = b);int(1..)])

--

Successful Tranformation: 
(x = Sum([__1,1;int(1..)])), 
~~> introduce_weighted_sumleq_sumgeq [4600; Minion]
and([SumLeq([__1, 1], x),SumGeq([__1, 1], x);int(1..)])


--

Successful Tranformation: 
Ineq(2, __0, 0),
and([SumLeq([__1, 1], x),SumGeq([__1, 1], x);int(1..)]),
Ineq(a, __0, 0),
Ineq(b, __0, 0),
or([(__0 = a),(__0 = b);int(1..)]),
(__1 >= a),
(__1 >= b),
or([(__1 = a),(__1 = b);int(1..)]), 
~~> partial_evaluator [9000; Base]
Ineq(2, __0, 0),
SumLeq([__1, 1], x),
SumGeq([__1, 1], x),
Ineq(a, __0, 0),
Ineq(b, __0, 0),
or([(__0 = a),(__0 = b);int(1..)]),
(__1 >= a),
(__1 >= b),
or([(__1 = a),(__1 = b);int(1..)])


--

Successful Tranformation: 
(__1 >= a), 
~~> geq_to_ineq [4100; Minion]
Ineq(a, __1, 0)


--

Successful Tranformation: 
(__1 >= b), 
~~> geq_to_ineq [4100; Minion]
Ineq(b, __1, 0)


--


Final model:

find a: int(1..4)
find b: int(1..4)
find x: int(1..4)
find __0: int(1..4)
find __1: int(1..4)

such that

Ineq(2, __0, 0),
SumLeq([__1, 1], x),
SumGeq([__1, 1], x),
Ineq(a, __0, 0),
Ineq(b, __0, 0),
or([(__0 = a),(__0 = b);int(1..)]),
Ineq(a, __1, 0),
Ineq(b, __1, 0),
or([(__1 = a),(__1 = b);int(1..)])

