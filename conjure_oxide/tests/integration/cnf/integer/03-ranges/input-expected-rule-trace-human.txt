Model before rewriting:

find a: int(3)
find b: int(1..5)

such that

(a < 100),
(b < 100)

clauses:



--

a, 
   ~~> integer_decision_representation ([("CNF", 9500)]) 
CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) 
new variables:
  find a#int_to_atom_00: bool
  find a#int_to_atom_01: bool
  find a#int_to_atom_02: bool
  find a#int_to_atom_03: bool
  find a#int_to_atom_04: bool
  find a#int_to_atom_05: bool
  find a#int_to_atom_06: bool
  find a#int_to_atom_07: bool
new constraints:
  or([(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) = 3);int(1..)])
--

100, 
   ~~> literal_cnf_int ([("CNF", 9500)]) 
CnfInt([false,false,true,false,false,true,true,false;int(1..)]) 

--

b, 
   ~~> integer_decision_representation ([("CNF", 9500)]) 
CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) 
new variables:
  find b#int_to_atom_00: bool
  find b#int_to_atom_01: bool
  find b#int_to_atom_02: bool
  find b#int_to_atom_03: bool
  find b#int_to_atom_04: bool
  find b#int_to_atom_05: bool
  find b#int_to_atom_06: bool
  find b#int_to_atom_07: bool
new constraints:
  or([and([(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) >= 1),(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) <= 5);int(1..)]);int(1..)])
--

100, 
   ~~> literal_cnf_int ([("CNF", 9500)]) 
CnfInt([false,false,true,false,false,true,true,false;int(1..)]) 

--

3, 
   ~~> literal_cnf_int ([("CNF", 9500)]) 
CnfInt([true,true,false,false,false,false,false,false;int(1..)]) 

--

1, 
   ~~> literal_cnf_int ([("CNF", 9500)]) 
CnfInt([true,false,false,false,false,false,false,false;int(1..)]) 

--

5, 
   ~~> literal_cnf_int ([("CNF", 9500)]) 
CnfInt([true,false,true,false,false,false,false,false;int(1..)]) 

--

(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) = CnfInt([true,true,false,false,false,false,false,false;int(1..)])), 
   ~~> cnf_int_eq ([("CNF", 9100)]) 
__15 
new variables:
  find __0: bool
  find __1: bool
  find __2: bool
  find __3: bool
  find __4: bool
  find __5: bool
  find __6: bool
  find __7: bool
  find __8: bool
  find __9: bool
  find __10: bool
  find __11: bool
  find __12: bool
  find __13: bool
  find __14: bool
  find __15: bool
new clauses:
  Clause([Not(a#int_to_atom_00),__0;int(1..)])
  Clause([a#int_to_atom_00,Not(__0);int(1..)])
  Clause([Not(__1),__0;int(1..)])
  Clause([__1,Not(__0);int(1..)])
  Clause([Not(a#int_to_atom_01),__2;int(1..)])
  Clause([a#int_to_atom_01,Not(__2);int(1..)])
  Clause([Not(__3),__2;int(1..)])
  Clause([Not(__3),__1;int(1..)])
  Clause([__3,Not(__2),Not(__1);int(1..)])
  Clause([a#int_to_atom_02,__4;int(1..)])
  Clause([Not(a#int_to_atom_02),Not(__4);int(1..)])
  Clause([Not(__5),__4;int(1..)])
  Clause([Not(__5),__3;int(1..)])
  Clause([__5,Not(__4),Not(__3);int(1..)])
  Clause([a#int_to_atom_03,__6;int(1..)])
  Clause([Not(a#int_to_atom_03),Not(__6);int(1..)])
  Clause([Not(__7),__6;int(1..)])
  Clause([Not(__7),__5;int(1..)])
  Clause([__7,Not(__6),Not(__5);int(1..)])
  Clause([a#int_to_atom_04,__8;int(1..)])
  Clause([Not(a#int_to_atom_04),Not(__8);int(1..)])
  Clause([Not(__9),__8;int(1..)])
  Clause([Not(__9),__7;int(1..)])
  Clause([__9,Not(__8),Not(__7);int(1..)])
  Clause([a#int_to_atom_05,__10;int(1..)])
  Clause([Not(a#int_to_atom_05),Not(__10);int(1..)])
  Clause([Not(__11),__10;int(1..)])
  Clause([Not(__11),__9;int(1..)])
  Clause([__11,Not(__10),Not(__9);int(1..)])
  Clause([a#int_to_atom_06,__12;int(1..)])
  Clause([Not(a#int_to_atom_06),Not(__12);int(1..)])
  Clause([Not(__13),__12;int(1..)])
  Clause([Not(__13),__11;int(1..)])
  Clause([__13,Not(__12),Not(__11);int(1..)])
  Clause([a#int_to_atom_07,__14;int(1..)])
  Clause([Not(a#int_to_atom_07),Not(__14);int(1..)])
  Clause([Not(__15),__14;int(1..)])
  Clause([Not(__15),__13;int(1..)])
  Clause([__15,Not(__14),Not(__13);int(1..)])
--

or([__15;int(1..)]), 
   ~~> remove_unit_vector_or ([("Base", 8800)]) 
__15 

--

or([and([(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) >= CnfInt([true,false,false,false,false,false,false,false;int(1..)])),(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) <= CnfInt([true,false,true,false,false,false,false,false;int(1..)]));int(1..)]);int(1..)]), 
   ~~> remove_unit_vector_or ([("Base", 8800)]) 
and([(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) >= CnfInt([true,false,false,false,false,false,false,false;int(1..)])),(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) <= CnfInt([true,false,true,false,false,false,false,false;int(1..)]));int(1..)]) 

--

(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) < CnfInt([false,false,true,false,false,true,true,false;int(1..)])),
(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) < CnfInt([false,false,true,false,false,true,true,false;int(1..)])),
__15,
and([(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) >= CnfInt([true,false,false,false,false,false,false,false;int(1..)])),(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) <= CnfInt([true,false,true,false,false,false,false,false;int(1..)]));int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) < CnfInt([false,false,true,false,false,true,true,false;int(1..)])),
(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) < CnfInt([false,false,true,false,false,true,true,false;int(1..)])),
__15,
(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) >= CnfInt([true,false,false,false,false,false,false,false;int(1..)])),
(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) <= CnfInt([true,false,true,false,false,false,false,false;int(1..)])) 

--

(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) < CnfInt([false,false,true,false,false,true,true,false;int(1..)])), 
   ~~> cnf_int_ineq ([("CNF", 4100)]) 
__52 
new variables:
  find __16: bool
  find __17: bool
  find __18: bool
  find __19: bool
  find __20: bool
  find __21: bool
  find __22: bool
  find __23: bool
  find __24: bool
  find __25: bool
  find __26: bool
  find __27: bool
  find __28: bool
  find __29: bool
  find __30: bool
  find __31: bool
  find __32: bool
  find __33: bool
  find __34: bool
  find __35: bool
  find __36: bool
  find __37: bool
  find __38: bool
  find __39: bool
  find __40: bool
  find __41: bool
  find __42: bool
  find __43: bool
  find __44: bool
  find __45: bool
  find __46: bool
  find __47: bool
  find __48: bool
  find __49: bool
  find __50: bool
  find __51: bool
  find __52: bool
new clauses:
  Clause([Not(a#int_to_atom_00),Not(__16);int(1..)])
  Clause([a#int_to_atom_00,__16;int(1..)])
  Clause([Not(__17);int(1..)])
  Clause([Not(__17),__16;int(1..)])
  Clause([Not(a#int_to_atom_01),Not(__18);int(1..)])
  Clause([a#int_to_atom_01,__18;int(1..)])
  Clause([Not(__19);int(1..)])
  Clause([Not(__19),__18;int(1..)])
  Clause([a#int_to_atom_01,__20;int(1..)])
  Clause([Not(a#int_to_atom_01),Not(__20);int(1..)])
  Clause([Not(__21),__20;int(1..)])
  Clause([Not(__21),__17;int(1..)])
  Clause([__21,Not(__20),Not(__17);int(1..)])
  Clause([Not(__19),__22;int(1..)])
  Clause([Not(__21),__22;int(1..)])
  Clause([Not(__22),__19,__21;int(1..)])
  Clause([Not(a#int_to_atom_02),Not(__23);int(1..)])
  Clause([a#int_to_atom_02,__23;int(1..)])
  Clause([Not(__24),__23;int(1..)])
  Clause([__24,Not(__23);int(1..)])
  Clause([Not(a#int_to_atom_02),__25;int(1..)])
  Clause([a#int_to_atom_02,Not(__25);int(1..)])
  Clause([Not(__26),__25;int(1..)])
  Clause([Not(__26),__22;int(1..)])
  Clause([__26,Not(__25),Not(__22);int(1..)])
  Clause([Not(__24),__27;int(1..)])
  Clause([Not(__26),__27;int(1..)])
  Clause([Not(__27),__24,__26;int(1..)])
  Clause([Not(a#int_to_atom_03),Not(__28);int(1..)])
  Clause([a#int_to_atom_03,__28;int(1..)])
  Clause([Not(__29);int(1..)])
  Clause([Not(__29),__28;int(1..)])
  Clause([a#int_to_atom_03,__30;int(1..)])
  Clause([Not(a#int_to_atom_03),Not(__30);int(1..)])
  Clause([Not(__31),__30;int(1..)])
  Clause([Not(__31),__27;int(1..)])
  Clause([__31,Not(__30),Not(__27);int(1..)])
  Clause([Not(__29),__32;int(1..)])
  Clause([Not(__31),__32;int(1..)])
  Clause([Not(__32),__29,__31;int(1..)])
  Clause([Not(a#int_to_atom_04),Not(__33);int(1..)])
  Clause([a#int_to_atom_04,__33;int(1..)])
  Clause([Not(__34);int(1..)])
  Clause([Not(__34),__33;int(1..)])
  Clause([a#int_to_atom_04,__35;int(1..)])
  Clause([Not(a#int_to_atom_04),Not(__35);int(1..)])
  Clause([Not(__36),__35;int(1..)])
  Clause([Not(__36),__32;int(1..)])
  Clause([__36,Not(__35),Not(__32);int(1..)])
  Clause([Not(__34),__37;int(1..)])
  Clause([Not(__36),__37;int(1..)])
  Clause([Not(__37),__34,__36;int(1..)])
  Clause([Not(a#int_to_atom_05),Not(__38);int(1..)])
  Clause([a#int_to_atom_05,__38;int(1..)])
  Clause([Not(__39),__38;int(1..)])
  Clause([__39,Not(__38);int(1..)])
  Clause([Not(a#int_to_atom_05),__40;int(1..)])
  Clause([a#int_to_atom_05,Not(__40);int(1..)])
  Clause([Not(__41),__40;int(1..)])
  Clause([Not(__41),__37;int(1..)])
  Clause([__41,Not(__40),Not(__37);int(1..)])
  Clause([Not(__39),__42;int(1..)])
  Clause([Not(__41),__42;int(1..)])
  Clause([Not(__42),__39,__41;int(1..)])
  Clause([Not(a#int_to_atom_06),Not(__43);int(1..)])
  Clause([a#int_to_atom_06,__43;int(1..)])
  Clause([Not(__44),__43;int(1..)])
  Clause([__44,Not(__43);int(1..)])
  Clause([Not(a#int_to_atom_06),__45;int(1..)])
  Clause([a#int_to_atom_06,Not(__45);int(1..)])
  Clause([Not(__46),__45;int(1..)])
  Clause([Not(__46),__42;int(1..)])
  Clause([__46,Not(__45),Not(__42);int(1..)])
  Clause([Not(__44),__47;int(1..)])
  Clause([Not(__46),__47;int(1..)])
  Clause([Not(__47),__44,__46;int(1..)])
  Clause([__48;int(1..)])
  Clause([Not(__49),__48;int(1..)])
  Clause([Not(__49),a#int_to_atom_07;int(1..)])
  Clause([__49,Not(__48),Not(a#int_to_atom_07);int(1..)])
  Clause([a#int_to_atom_07,__50;int(1..)])
  Clause([Not(a#int_to_atom_07),Not(__50);int(1..)])
  Clause([Not(__51),__50;int(1..)])
  Clause([Not(__51),__47;int(1..)])
  Clause([__51,Not(__50),Not(__47);int(1..)])
  Clause([Not(__49),__52;int(1..)])
  Clause([Not(__51),__52;int(1..)])
  Clause([Not(__52),__49,__51;int(1..)])
--

(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) < CnfInt([false,false,true,false,false,true,true,false;int(1..)])), 
   ~~> cnf_int_ineq ([("CNF", 4100)]) 
__89 
new variables:
  find __53: bool
  find __54: bool
  find __55: bool
  find __56: bool
  find __57: bool
  find __58: bool
  find __59: bool
  find __60: bool
  find __61: bool
  find __62: bool
  find __63: bool
  find __64: bool
  find __65: bool
  find __66: bool
  find __67: bool
  find __68: bool
  find __69: bool
  find __70: bool
  find __71: bool
  find __72: bool
  find __73: bool
  find __74: bool
  find __75: bool
  find __76: bool
  find __77: bool
  find __78: bool
  find __79: bool
  find __80: bool
  find __81: bool
  find __82: bool
  find __83: bool
  find __84: bool
  find __85: bool
  find __86: bool
  find __87: bool
  find __88: bool
  find __89: bool
new clauses:
  Clause([Not(b#int_to_atom_00),Not(__53);int(1..)])
  Clause([b#int_to_atom_00,__53;int(1..)])
  Clause([Not(__54);int(1..)])
  Clause([Not(__54),__53;int(1..)])
  Clause([Not(b#int_to_atom_01),Not(__55);int(1..)])
  Clause([b#int_to_atom_01,__55;int(1..)])
  Clause([Not(__56);int(1..)])
  Clause([Not(__56),__55;int(1..)])
  Clause([b#int_to_atom_01,__57;int(1..)])
  Clause([Not(b#int_to_atom_01),Not(__57);int(1..)])
  Clause([Not(__58),__57;int(1..)])
  Clause([Not(__58),__54;int(1..)])
  Clause([__58,Not(__57),Not(__54);int(1..)])
  Clause([Not(__56),__59;int(1..)])
  Clause([Not(__58),__59;int(1..)])
  Clause([Not(__59),__56,__58;int(1..)])
  Clause([Not(b#int_to_atom_02),Not(__60);int(1..)])
  Clause([b#int_to_atom_02,__60;int(1..)])
  Clause([Not(__61),__60;int(1..)])
  Clause([__61,Not(__60);int(1..)])
  Clause([Not(b#int_to_atom_02),__62;int(1..)])
  Clause([b#int_to_atom_02,Not(__62);int(1..)])
  Clause([Not(__63),__62;int(1..)])
  Clause([Not(__63),__59;int(1..)])
  Clause([__63,Not(__62),Not(__59);int(1..)])
  Clause([Not(__61),__64;int(1..)])
  Clause([Not(__63),__64;int(1..)])
  Clause([Not(__64),__61,__63;int(1..)])
  Clause([Not(b#int_to_atom_03),Not(__65);int(1..)])
  Clause([b#int_to_atom_03,__65;int(1..)])
  Clause([Not(__66);int(1..)])
  Clause([Not(__66),__65;int(1..)])
  Clause([b#int_to_atom_03,__67;int(1..)])
  Clause([Not(b#int_to_atom_03),Not(__67);int(1..)])
  Clause([Not(__68),__67;int(1..)])
  Clause([Not(__68),__64;int(1..)])
  Clause([__68,Not(__67),Not(__64);int(1..)])
  Clause([Not(__66),__69;int(1..)])
  Clause([Not(__68),__69;int(1..)])
  Clause([Not(__69),__66,__68;int(1..)])
  Clause([Not(b#int_to_atom_04),Not(__70);int(1..)])
  Clause([b#int_to_atom_04,__70;int(1..)])
  Clause([Not(__71);int(1..)])
  Clause([Not(__71),__70;int(1..)])
  Clause([b#int_to_atom_04,__72;int(1..)])
  Clause([Not(b#int_to_atom_04),Not(__72);int(1..)])
  Clause([Not(__73),__72;int(1..)])
  Clause([Not(__73),__69;int(1..)])
  Clause([__73,Not(__72),Not(__69);int(1..)])
  Clause([Not(__71),__74;int(1..)])
  Clause([Not(__73),__74;int(1..)])
  Clause([Not(__74),__71,__73;int(1..)])
  Clause([Not(b#int_to_atom_05),Not(__75);int(1..)])
  Clause([b#int_to_atom_05,__75;int(1..)])
  Clause([Not(__76),__75;int(1..)])
  Clause([__76,Not(__75);int(1..)])
  Clause([Not(b#int_to_atom_05),__77;int(1..)])
  Clause([b#int_to_atom_05,Not(__77);int(1..)])
  Clause([Not(__78),__77;int(1..)])
  Clause([Not(__78),__74;int(1..)])
  Clause([__78,Not(__77),Not(__74);int(1..)])
  Clause([Not(__76),__79;int(1..)])
  Clause([Not(__78),__79;int(1..)])
  Clause([Not(__79),__76,__78;int(1..)])
  Clause([Not(b#int_to_atom_06),Not(__80);int(1..)])
  Clause([b#int_to_atom_06,__80;int(1..)])
  Clause([Not(__81),__80;int(1..)])
  Clause([__81,Not(__80);int(1..)])
  Clause([Not(b#int_to_atom_06),__82;int(1..)])
  Clause([b#int_to_atom_06,Not(__82);int(1..)])
  Clause([Not(__83),__82;int(1..)])
  Clause([Not(__83),__79;int(1..)])
  Clause([__83,Not(__82),Not(__79);int(1..)])
  Clause([Not(__81),__84;int(1..)])
  Clause([Not(__83),__84;int(1..)])
  Clause([Not(__84),__81,__83;int(1..)])
  Clause([__85;int(1..)])
  Clause([Not(__86),__85;int(1..)])
  Clause([Not(__86),b#int_to_atom_07;int(1..)])
  Clause([__86,Not(__85),Not(b#int_to_atom_07);int(1..)])
  Clause([b#int_to_atom_07,__87;int(1..)])
  Clause([Not(b#int_to_atom_07),Not(__87);int(1..)])
  Clause([Not(__88),__87;int(1..)])
  Clause([Not(__88),__84;int(1..)])
  Clause([__88,Not(__87),Not(__84);int(1..)])
  Clause([Not(__86),__89;int(1..)])
  Clause([Not(__88),__89;int(1..)])
  Clause([Not(__89),__86,__88;int(1..)])
--

(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) >= CnfInt([true,false,false,false,false,false,false,false;int(1..)])), 
   ~~> cnf_int_ineq ([("CNF", 4100)]) 
__125 
new variables:
  find __90: bool
  find __91: bool
  find __92: bool
  find __93: bool
  find __94: bool
  find __95: bool
  find __96: bool
  find __97: bool
  find __98: bool
  find __99: bool
  find __100: bool
  find __101: bool
  find __102: bool
  find __103: bool
  find __104: bool
  find __105: bool
  find __106: bool
  find __107: bool
  find __108: bool
  find __109: bool
  find __110: bool
  find __111: bool
  find __112: bool
  find __113: bool
  find __114: bool
  find __115: bool
  find __116: bool
  find __117: bool
  find __118: bool
  find __119: bool
  find __120: bool
  find __121: bool
  find __122: bool
  find __123: bool
  find __124: bool
  find __125: bool
new clauses:
  Clause([Not(__90),b#int_to_atom_00;int(1..)])
  Clause([__90,Not(b#int_to_atom_00);int(1..)])
  Clause([__91;int(1..)])
  Clause([Not(__92),b#int_to_atom_01;int(1..)])
  Clause([Not(__92),__91;int(1..)])
  Clause([__92,Not(b#int_to_atom_01),Not(__91);int(1..)])
  Clause([b#int_to_atom_01,__93;int(1..)])
  Clause([Not(b#int_to_atom_01),Not(__93);int(1..)])
  Clause([Not(__94),__93;int(1..)])
  Clause([Not(__94),__90;int(1..)])
  Clause([__94,Not(__93),Not(__90);int(1..)])
  Clause([Not(__92),__95;int(1..)])
  Clause([Not(__94),__95;int(1..)])
  Clause([Not(__95),__92,__94;int(1..)])
  Clause([__96;int(1..)])
  Clause([Not(__97),b#int_to_atom_02;int(1..)])
  Clause([Not(__97),__96;int(1..)])
  Clause([__97,Not(b#int_to_atom_02),Not(__96);int(1..)])
  Clause([b#int_to_atom_02,__98;int(1..)])
  Clause([Not(b#int_to_atom_02),Not(__98);int(1..)])
  Clause([Not(__99),__98;int(1..)])
  Clause([Not(__99),__95;int(1..)])
  Clause([__99,Not(__98),Not(__95);int(1..)])
  Clause([Not(__97),__100;int(1..)])
  Clause([Not(__99),__100;int(1..)])
  Clause([Not(__100),__97,__99;int(1..)])
  Clause([__101;int(1..)])
  Clause([Not(__102),b#int_to_atom_03;int(1..)])
  Clause([Not(__102),__101;int(1..)])
  Clause([__102,Not(b#int_to_atom_03),Not(__101);int(1..)])
  Clause([b#int_to_atom_03,__103;int(1..)])
  Clause([Not(b#int_to_atom_03),Not(__103);int(1..)])
  Clause([Not(__104),__103;int(1..)])
  Clause([Not(__104),__100;int(1..)])
  Clause([__104,Not(__103),Not(__100);int(1..)])
  Clause([Not(__102),__105;int(1..)])
  Clause([Not(__104),__105;int(1..)])
  Clause([Not(__105),__102,__104;int(1..)])
  Clause([__106;int(1..)])
  Clause([Not(__107),b#int_to_atom_04;int(1..)])
  Clause([Not(__107),__106;int(1..)])
  Clause([__107,Not(b#int_to_atom_04),Not(__106);int(1..)])
  Clause([b#int_to_atom_04,__108;int(1..)])
  Clause([Not(b#int_to_atom_04),Not(__108);int(1..)])
  Clause([Not(__109),__108;int(1..)])
  Clause([Not(__109),__105;int(1..)])
  Clause([__109,Not(__108),Not(__105);int(1..)])
  Clause([Not(__107),__110;int(1..)])
  Clause([Not(__109),__110;int(1..)])
  Clause([Not(__110),__107,__109;int(1..)])
  Clause([__111;int(1..)])
  Clause([Not(__112),b#int_to_atom_05;int(1..)])
  Clause([Not(__112),__111;int(1..)])
  Clause([__112,Not(b#int_to_atom_05),Not(__111);int(1..)])
  Clause([b#int_to_atom_05,__113;int(1..)])
  Clause([Not(b#int_to_atom_05),Not(__113);int(1..)])
  Clause([Not(__114),__113;int(1..)])
  Clause([Not(__114),__110;int(1..)])
  Clause([__114,Not(__113),Not(__110);int(1..)])
  Clause([Not(__112),__115;int(1..)])
  Clause([Not(__114),__115;int(1..)])
  Clause([Not(__115),__112,__114;int(1..)])
  Clause([__116;int(1..)])
  Clause([Not(__117),b#int_to_atom_06;int(1..)])
  Clause([Not(__117),__116;int(1..)])
  Clause([__117,Not(b#int_to_atom_06),Not(__116);int(1..)])
  Clause([b#int_to_atom_06,__118;int(1..)])
  Clause([Not(b#int_to_atom_06),Not(__118);int(1..)])
  Clause([Not(__119),__118;int(1..)])
  Clause([Not(__119),__115;int(1..)])
  Clause([__119,Not(__118),Not(__115);int(1..)])
  Clause([Not(__117),__120;int(1..)])
  Clause([Not(__119),__120;int(1..)])
  Clause([Not(__120),__117,__119;int(1..)])
  Clause([Not(b#int_to_atom_07),Not(__121);int(1..)])
  Clause([b#int_to_atom_07,__121;int(1..)])
  Clause([Not(__122),__121;int(1..)])
  Clause([Not(__122);int(1..)])
  Clause([b#int_to_atom_07,__123;int(1..)])
  Clause([Not(b#int_to_atom_07),Not(__123);int(1..)])
  Clause([Not(__124),__123;int(1..)])
  Clause([Not(__124),__120;int(1..)])
  Clause([__124,Not(__123),Not(__120);int(1..)])
  Clause([Not(__122),__125;int(1..)])
  Clause([Not(__124),__125;int(1..)])
  Clause([Not(__125),__122,__124;int(1..)])
--

(CnfInt([b#int_to_atom_00,b#int_to_atom_01,b#int_to_atom_02,b#int_to_atom_03,b#int_to_atom_04,b#int_to_atom_05,b#int_to_atom_06,b#int_to_atom_07;int(1..)]) <= CnfInt([true,false,true,false,false,false,false,false;int(1..)])), 
   ~~> cnf_int_ineq ([("CNF", 4100)]) 
__161 
new variables:
  find __126: bool
  find __127: bool
  find __128: bool
  find __129: bool
  find __130: bool
  find __131: bool
  find __132: bool
  find __133: bool
  find __134: bool
  find __135: bool
  find __136: bool
  find __137: bool
  find __138: bool
  find __139: bool
  find __140: bool
  find __141: bool
  find __142: bool
  find __143: bool
  find __144: bool
  find __145: bool
  find __146: bool
  find __147: bool
  find __148: bool
  find __149: bool
  find __150: bool
  find __151: bool
  find __152: bool
  find __153: bool
  find __154: bool
  find __155: bool
  find __156: bool
  find __157: bool
  find __158: bool
  find __159: bool
  find __160: bool
  find __161: bool
new clauses:
  Clause([__126,b#int_to_atom_00;int(1..)])
  Clause([__126;int(1..)])
  Clause([Not(b#int_to_atom_01),Not(__127);int(1..)])
  Clause([b#int_to_atom_01,__127;int(1..)])
  Clause([Not(__128);int(1..)])
  Clause([Not(__128),__127;int(1..)])
  Clause([b#int_to_atom_01,__129;int(1..)])
  Clause([Not(b#int_to_atom_01),Not(__129);int(1..)])
  Clause([Not(__130),__129;int(1..)])
  Clause([Not(__130),__126;int(1..)])
  Clause([__130,Not(__129),Not(__126);int(1..)])
  Clause([Not(__128),__131;int(1..)])
  Clause([Not(__130),__131;int(1..)])
  Clause([Not(__131),__128,__130;int(1..)])
  Clause([Not(b#int_to_atom_02),Not(__132);int(1..)])
  Clause([b#int_to_atom_02,__132;int(1..)])
  Clause([Not(__133),__132;int(1..)])
  Clause([__133,Not(__132);int(1..)])
  Clause([Not(b#int_to_atom_02),__134;int(1..)])
  Clause([b#int_to_atom_02,Not(__134);int(1..)])
  Clause([Not(__135),__134;int(1..)])
  Clause([Not(__135),__131;int(1..)])
  Clause([__135,Not(__134),Not(__131);int(1..)])
  Clause([Not(__133),__136;int(1..)])
  Clause([Not(__135),__136;int(1..)])
  Clause([Not(__136),__133,__135;int(1..)])
  Clause([Not(b#int_to_atom_03),Not(__137);int(1..)])
  Clause([b#int_to_atom_03,__137;int(1..)])
  Clause([Not(__138);int(1..)])
  Clause([Not(__138),__137;int(1..)])
  Clause([b#int_to_atom_03,__139;int(1..)])
  Clause([Not(b#int_to_atom_03),Not(__139);int(1..)])
  Clause([Not(__140),__139;int(1..)])
  Clause([Not(__140),__136;int(1..)])
  Clause([__140,Not(__139),Not(__136);int(1..)])
  Clause([Not(__138),__141;int(1..)])
  Clause([Not(__140),__141;int(1..)])
  Clause([Not(__141),__138,__140;int(1..)])
  Clause([Not(b#int_to_atom_04),Not(__142);int(1..)])
  Clause([b#int_to_atom_04,__142;int(1..)])
  Clause([Not(__143);int(1..)])
  Clause([Not(__143),__142;int(1..)])
  Clause([b#int_to_atom_04,__144;int(1..)])
  Clause([Not(b#int_to_atom_04),Not(__144);int(1..)])
  Clause([Not(__145),__144;int(1..)])
  Clause([Not(__145),__141;int(1..)])
  Clause([__145,Not(__144),Not(__141);int(1..)])
  Clause([Not(__143),__146;int(1..)])
  Clause([Not(__145),__146;int(1..)])
  Clause([Not(__146),__143,__145;int(1..)])
  Clause([Not(b#int_to_atom_05),Not(__147);int(1..)])
  Clause([b#int_to_atom_05,__147;int(1..)])
  Clause([Not(__148);int(1..)])
  Clause([Not(__148),__147;int(1..)])
  Clause([b#int_to_atom_05,__149;int(1..)])
  Clause([Not(b#int_to_atom_05),Not(__149);int(1..)])
  Clause([Not(__150),__149;int(1..)])
  Clause([Not(__150),__146;int(1..)])
  Clause([__150,Not(__149),Not(__146);int(1..)])
  Clause([Not(__148),__151;int(1..)])
  Clause([Not(__150),__151;int(1..)])
  Clause([Not(__151),__148,__150;int(1..)])
  Clause([Not(b#int_to_atom_06),Not(__152);int(1..)])
  Clause([b#int_to_atom_06,__152;int(1..)])
  Clause([Not(__153);int(1..)])
  Clause([Not(__153),__152;int(1..)])
  Clause([b#int_to_atom_06,__154;int(1..)])
  Clause([Not(b#int_to_atom_06),Not(__154);int(1..)])
  Clause([Not(__155),__154;int(1..)])
  Clause([Not(__155),__151;int(1..)])
  Clause([__155,Not(__154),Not(__151);int(1..)])
  Clause([Not(__153),__156;int(1..)])
  Clause([Not(__155),__156;int(1..)])
  Clause([Not(__156),__153,__155;int(1..)])
  Clause([__157;int(1..)])
  Clause([Not(__158),__157;int(1..)])
  Clause([Not(__158),b#int_to_atom_07;int(1..)])
  Clause([__158,Not(__157),Not(b#int_to_atom_07);int(1..)])
  Clause([b#int_to_atom_07,__159;int(1..)])
  Clause([Not(b#int_to_atom_07),Not(__159);int(1..)])
  Clause([Not(__160),__159;int(1..)])
  Clause([Not(__160),__156;int(1..)])
  Clause([__160,Not(__159),Not(__156);int(1..)])
  Clause([Not(__158),__161;int(1..)])
  Clause([Not(__160),__161;int(1..)])
  Clause([Not(__161),__158,__160;int(1..)])
--

Final model:

find a: int(3)
find b: int(1..5)
find __0: bool
find __1: bool
find __2: bool
find __3: bool
find __4: bool
find __5: bool
find __6: bool
find __7: bool
find __8: bool
find __9: bool
find __10: bool
find __11: bool
find __12: bool
find __13: bool
find __14: bool
find __15: bool
find __16: bool
find __17: bool
find __18: bool
find __19: bool
find __20: bool
find __21: bool
find __22: bool
find __23: bool
find __24: bool
find __25: bool
find __26: bool
find __27: bool
find __28: bool
find __29: bool
find __30: bool
find __31: bool
find __32: bool
find __33: bool
find __34: bool
find __35: bool
find __36: bool
find __37: bool
find __38: bool
find __39: bool
find __40: bool
find __41: bool
find __42: bool
find __43: bool
find __44: bool
find __45: bool
find __46: bool
find __47: bool
find __48: bool
find __49: bool
find __50: bool
find __51: bool
find __52: bool
find __53: bool
find __54: bool
find __55: bool
find __56: bool
find __57: bool
find __58: bool
find __59: bool
find __60: bool
find __61: bool
find __62: bool
find __63: bool
find __64: bool
find __65: bool
find __66: bool
find __67: bool
find __68: bool
find __69: bool
find __70: bool
find __71: bool
find __72: bool
find __73: bool
find __74: bool
find __75: bool
find __76: bool
find __77: bool
find __78: bool
find __79: bool
find __80: bool
find __81: bool
find __82: bool
find __83: bool
find __84: bool
find __85: bool
find __86: bool
find __87: bool
find __88: bool
find __89: bool
find __90: bool
find __91: bool
find __92: bool
find __93: bool
find __94: bool
find __95: bool
find __96: bool
find __97: bool
find __98: bool
find __99: bool
find __100: bool
find __101: bool
find __102: bool
find __103: bool
find __104: bool
find __105: bool
find __106: bool
find __107: bool
find __108: bool
find __109: bool
find __110: bool
find __111: bool
find __112: bool
find __113: bool
find __114: bool
find __115: bool
find __116: bool
find __117: bool
find __118: bool
find __119: bool
find __120: bool
find __121: bool
find __122: bool
find __123: bool
find __124: bool
find __125: bool
find __126: bool
find __127: bool
find __128: bool
find __129: bool
find __130: bool
find __131: bool
find __132: bool
find __133: bool
find __134: bool
find __135: bool
find __136: bool
find __137: bool
find __138: bool
find __139: bool
find __140: bool
find __141: bool
find __142: bool
find __143: bool
find __144: bool
find __145: bool
find __146: bool
find __147: bool
find __148: bool
find __149: bool
find __150: bool
find __151: bool
find __152: bool
find __153: bool
find __154: bool
find __155: bool
find __156: bool
find __157: bool
find __158: bool
find __159: bool
find __160: bool
find __161: bool
find a#int_to_atom_00: bool
find a#int_to_atom_01: bool
find a#int_to_atom_02: bool
find a#int_to_atom_03: bool
find a#int_to_atom_04: bool
find a#int_to_atom_05: bool
find a#int_to_atom_06: bool
find a#int_to_atom_07: bool
find b#int_to_atom_00: bool
find b#int_to_atom_01: bool
find b#int_to_atom_02: bool
find b#int_to_atom_03: bool
find b#int_to_atom_04: bool
find b#int_to_atom_05: bool
find b#int_to_atom_06: bool
find b#int_to_atom_07: bool

such that

__52,
__89,
__15,
__125,
__161

clauses:

Clause([Not(a#int_to_atom_00),__0;int(1..)]),
Clause([a#int_to_atom_00,Not(__0);int(1..)]),
Clause([Not(__1),__0;int(1..)]),
Clause([__1,Not(__0);int(1..)]),
Clause([Not(a#int_to_atom_01),__2;int(1..)]),
Clause([a#int_to_atom_01,Not(__2);int(1..)]),
Clause([Not(__3),__2;int(1..)]),
Clause([Not(__3),__1;int(1..)]),
Clause([__3,Not(__2),Not(__1);int(1..)]),
Clause([a#int_to_atom_02,__4;int(1..)]),
Clause([Not(a#int_to_atom_02),Not(__4);int(1..)]),
Clause([Not(__5),__4;int(1..)]),
Clause([Not(__5),__3;int(1..)]),
Clause([__5,Not(__4),Not(__3);int(1..)]),
Clause([a#int_to_atom_03,__6;int(1..)]),
Clause([Not(a#int_to_atom_03),Not(__6);int(1..)]),
Clause([Not(__7),__6;int(1..)]),
Clause([Not(__7),__5;int(1..)]),
Clause([__7,Not(__6),Not(__5);int(1..)]),
Clause([a#int_to_atom_04,__8;int(1..)]),
Clause([Not(a#int_to_atom_04),Not(__8);int(1..)]),
Clause([Not(__9),__8;int(1..)]),
Clause([Not(__9),__7;int(1..)]),
Clause([__9,Not(__8),Not(__7);int(1..)]),
Clause([a#int_to_atom_05,__10;int(1..)]),
Clause([Not(a#int_to_atom_05),Not(__10);int(1..)]),
Clause([Not(__11),__10;int(1..)]),
Clause([Not(__11),__9;int(1..)]),
Clause([__11,Not(__10),Not(__9);int(1..)]),
Clause([a#int_to_atom_06,__12;int(1..)]),
Clause([Not(a#int_to_atom_06),Not(__12);int(1..)]),
Clause([Not(__13),__12;int(1..)]),
Clause([Not(__13),__11;int(1..)]),
Clause([__13,Not(__12),Not(__11);int(1..)]),
Clause([a#int_to_atom_07,__14;int(1..)]),
Clause([Not(a#int_to_atom_07),Not(__14);int(1..)]),
Clause([Not(__15),__14;int(1..)]),
Clause([Not(__15),__13;int(1..)]),
Clause([__15,Not(__14),Not(__13);int(1..)]),
Clause([Not(a#int_to_atom_00),Not(__16);int(1..)]),
Clause([a#int_to_atom_00,__16;int(1..)]),
Clause([Not(__17);int(1..)]),
Clause([Not(__17),__16;int(1..)]),
Clause([Not(a#int_to_atom_01),Not(__18);int(1..)]),
Clause([a#int_to_atom_01,__18;int(1..)]),
Clause([Not(__19);int(1..)]),
Clause([Not(__19),__18;int(1..)]),
Clause([a#int_to_atom_01,__20;int(1..)]),
Clause([Not(a#int_to_atom_01),Not(__20);int(1..)]),
Clause([Not(__21),__20;int(1..)]),
Clause([Not(__21),__17;int(1..)]),
Clause([__21,Not(__20),Not(__17);int(1..)]),
Clause([Not(__19),__22;int(1..)]),
Clause([Not(__21),__22;int(1..)]),
Clause([Not(__22),__19,__21;int(1..)]),
Clause([Not(a#int_to_atom_02),Not(__23);int(1..)]),
Clause([a#int_to_atom_02,__23;int(1..)]),
Clause([Not(__24),__23;int(1..)]),
Clause([__24,Not(__23);int(1..)]),
Clause([Not(a#int_to_atom_02),__25;int(1..)]),
Clause([a#int_to_atom_02,Not(__25);int(1..)]),
Clause([Not(__26),__25;int(1..)]),
Clause([Not(__26),__22;int(1..)]),
Clause([__26,Not(__25),Not(__22);int(1..)]),
Clause([Not(__24),__27;int(1..)]),
Clause([Not(__26),__27;int(1..)]),
Clause([Not(__27),__24,__26;int(1..)]),
Clause([Not(a#int_to_atom_03),Not(__28);int(1..)]),
Clause([a#int_to_atom_03,__28;int(1..)]),
Clause([Not(__29);int(1..)]),
Clause([Not(__29),__28;int(1..)]),
Clause([a#int_to_atom_03,__30;int(1..)]),
Clause([Not(a#int_to_atom_03),Not(__30);int(1..)]),
Clause([Not(__31),__30;int(1..)]),
Clause([Not(__31),__27;int(1..)]),
Clause([__31,Not(__30),Not(__27);int(1..)]),
Clause([Not(__29),__32;int(1..)]),
Clause([Not(__31),__32;int(1..)]),
Clause([Not(__32),__29,__31;int(1..)]),
Clause([Not(a#int_to_atom_04),Not(__33);int(1..)]),
Clause([a#int_to_atom_04,__33;int(1..)]),
Clause([Not(__34);int(1..)]),
Clause([Not(__34),__33;int(1..)]),
Clause([a#int_to_atom_04,__35;int(1..)]),
Clause([Not(a#int_to_atom_04),Not(__35);int(1..)]),
Clause([Not(__36),__35;int(1..)]),
Clause([Not(__36),__32;int(1..)]),
Clause([__36,Not(__35),Not(__32);int(1..)]),
Clause([Not(__34),__37;int(1..)]),
Clause([Not(__36),__37;int(1..)]),
Clause([Not(__37),__34,__36;int(1..)]),
Clause([Not(a#int_to_atom_05),Not(__38);int(1..)]),
Clause([a#int_to_atom_05,__38;int(1..)]),
Clause([Not(__39),__38;int(1..)]),
Clause([__39,Not(__38);int(1..)]),
Clause([Not(a#int_to_atom_05),__40;int(1..)]),
Clause([a#int_to_atom_05,Not(__40);int(1..)]),
Clause([Not(__41),__40;int(1..)]),
Clause([Not(__41),__37;int(1..)]),
Clause([__41,Not(__40),Not(__37);int(1..)]),
Clause([Not(__39),__42;int(1..)]),
Clause([Not(__41),__42;int(1..)]),
Clause([Not(__42),__39,__41;int(1..)]),
Clause([Not(a#int_to_atom_06),Not(__43);int(1..)]),
Clause([a#int_to_atom_06,__43;int(1..)]),
Clause([Not(__44),__43;int(1..)]),
Clause([__44,Not(__43);int(1..)]),
Clause([Not(a#int_to_atom_06),__45;int(1..)]),
Clause([a#int_to_atom_06,Not(__45);int(1..)]),
Clause([Not(__46),__45;int(1..)]),
Clause([Not(__46),__42;int(1..)]),
Clause([__46,Not(__45),Not(__42);int(1..)]),
Clause([Not(__44),__47;int(1..)]),
Clause([Not(__46),__47;int(1..)]),
Clause([Not(__47),__44,__46;int(1..)]),
Clause([__48;int(1..)]),
Clause([Not(__49),__48;int(1..)]),
Clause([Not(__49),a#int_to_atom_07;int(1..)]),
Clause([__49,Not(__48),Not(a#int_to_atom_07);int(1..)]),
Clause([a#int_to_atom_07,__50;int(1..)]),
Clause([Not(a#int_to_atom_07),Not(__50);int(1..)]),
Clause([Not(__51),__50;int(1..)]),
Clause([Not(__51),__47;int(1..)]),
Clause([__51,Not(__50),Not(__47);int(1..)]),
Clause([Not(__49),__52;int(1..)]),
Clause([Not(__51),__52;int(1..)]),
Clause([Not(__52),__49,__51;int(1..)]),
Clause([Not(b#int_to_atom_00),Not(__53);int(1..)]),
Clause([b#int_to_atom_00,__53;int(1..)]),
Clause([Not(__54);int(1..)]),
Clause([Not(__54),__53;int(1..)]),
Clause([Not(b#int_to_atom_01),Not(__55);int(1..)]),
Clause([b#int_to_atom_01,__55;int(1..)]),
Clause([Not(__56);int(1..)]),
Clause([Not(__56),__55;int(1..)]),
Clause([b#int_to_atom_01,__57;int(1..)]),
Clause([Not(b#int_to_atom_01),Not(__57);int(1..)]),
Clause([Not(__58),__57;int(1..)]),
Clause([Not(__58),__54;int(1..)]),
Clause([__58,Not(__57),Not(__54);int(1..)]),
Clause([Not(__56),__59;int(1..)]),
Clause([Not(__58),__59;int(1..)]),
Clause([Not(__59),__56,__58;int(1..)]),
Clause([Not(b#int_to_atom_02),Not(__60);int(1..)]),
Clause([b#int_to_atom_02,__60;int(1..)]),
Clause([Not(__61),__60;int(1..)]),
Clause([__61,Not(__60);int(1..)]),
Clause([Not(b#int_to_atom_02),__62;int(1..)]),
Clause([b#int_to_atom_02,Not(__62);int(1..)]),
Clause([Not(__63),__62;int(1..)]),
Clause([Not(__63),__59;int(1..)]),
Clause([__63,Not(__62),Not(__59);int(1..)]),
Clause([Not(__61),__64;int(1..)]),
Clause([Not(__63),__64;int(1..)]),
Clause([Not(__64),__61,__63;int(1..)]),
Clause([Not(b#int_to_atom_03),Not(__65);int(1..)]),
Clause([b#int_to_atom_03,__65;int(1..)]),
Clause([Not(__66);int(1..)]),
Clause([Not(__66),__65;int(1..)]),
Clause([b#int_to_atom_03,__67;int(1..)]),
Clause([Not(b#int_to_atom_03),Not(__67);int(1..)]),
Clause([Not(__68),__67;int(1..)]),
Clause([Not(__68),__64;int(1..)]),
Clause([__68,Not(__67),Not(__64);int(1..)]),
Clause([Not(__66),__69;int(1..)]),
Clause([Not(__68),__69;int(1..)]),
Clause([Not(__69),__66,__68;int(1..)]),
Clause([Not(b#int_to_atom_04),Not(__70);int(1..)]),
Clause([b#int_to_atom_04,__70;int(1..)]),
Clause([Not(__71);int(1..)]),
Clause([Not(__71),__70;int(1..)]),
Clause([b#int_to_atom_04,__72;int(1..)]),
Clause([Not(b#int_to_atom_04),Not(__72);int(1..)]),
Clause([Not(__73),__72;int(1..)]),
Clause([Not(__73),__69;int(1..)]),
Clause([__73,Not(__72),Not(__69);int(1..)]),
Clause([Not(__71),__74;int(1..)]),
Clause([Not(__73),__74;int(1..)]),
Clause([Not(__74),__71,__73;int(1..)]),
Clause([Not(b#int_to_atom_05),Not(__75);int(1..)]),
Clause([b#int_to_atom_05,__75;int(1..)]),
Clause([Not(__76),__75;int(1..)]),
Clause([__76,Not(__75);int(1..)]),
Clause([Not(b#int_to_atom_05),__77;int(1..)]),
Clause([b#int_to_atom_05,Not(__77);int(1..)]),
Clause([Not(__78),__77;int(1..)]),
Clause([Not(__78),__74;int(1..)]),
Clause([__78,Not(__77),Not(__74);int(1..)]),
Clause([Not(__76),__79;int(1..)]),
Clause([Not(__78),__79;int(1..)]),
Clause([Not(__79),__76,__78;int(1..)]),
Clause([Not(b#int_to_atom_06),Not(__80);int(1..)]),
Clause([b#int_to_atom_06,__80;int(1..)]),
Clause([Not(__81),__80;int(1..)]),
Clause([__81,Not(__80);int(1..)]),
Clause([Not(b#int_to_atom_06),__82;int(1..)]),
Clause([b#int_to_atom_06,Not(__82);int(1..)]),
Clause([Not(__83),__82;int(1..)]),
Clause([Not(__83),__79;int(1..)]),
Clause([__83,Not(__82),Not(__79);int(1..)]),
Clause([Not(__81),__84;int(1..)]),
Clause([Not(__83),__84;int(1..)]),
Clause([Not(__84),__81,__83;int(1..)]),
Clause([__85;int(1..)]),
Clause([Not(__86),__85;int(1..)]),
Clause([Not(__86),b#int_to_atom_07;int(1..)]),
Clause([__86,Not(__85),Not(b#int_to_atom_07);int(1..)]),
Clause([b#int_to_atom_07,__87;int(1..)]),
Clause([Not(b#int_to_atom_07),Not(__87);int(1..)]),
Clause([Not(__88),__87;int(1..)]),
Clause([Not(__88),__84;int(1..)]),
Clause([__88,Not(__87),Not(__84);int(1..)]),
Clause([Not(__86),__89;int(1..)]),
Clause([Not(__88),__89;int(1..)]),
Clause([Not(__89),__86,__88;int(1..)]),
Clause([Not(__90),b#int_to_atom_00;int(1..)]),
Clause([__90,Not(b#int_to_atom_00);int(1..)]),
Clause([__91;int(1..)]),
Clause([Not(__92),b#int_to_atom_01;int(1..)]),
Clause([Not(__92),__91;int(1..)]),
Clause([__92,Not(b#int_to_atom_01),Not(__91);int(1..)]),
Clause([b#int_to_atom_01,__93;int(1..)]),
Clause([Not(b#int_to_atom_01),Not(__93);int(1..)]),
Clause([Not(__94),__93;int(1..)]),
Clause([Not(__94),__90;int(1..)]),
Clause([__94,Not(__93),Not(__90);int(1..)]),
Clause([Not(__92),__95;int(1..)]),
Clause([Not(__94),__95;int(1..)]),
Clause([Not(__95),__92,__94;int(1..)]),
Clause([__96;int(1..)]),
Clause([Not(__97),b#int_to_atom_02;int(1..)]),
Clause([Not(__97),__96;int(1..)]),
Clause([__97,Not(b#int_to_atom_02),Not(__96);int(1..)]),
Clause([b#int_to_atom_02,__98;int(1..)]),
Clause([Not(b#int_to_atom_02),Not(__98);int(1..)]),
Clause([Not(__99),__98;int(1..)]),
Clause([Not(__99),__95;int(1..)]),
Clause([__99,Not(__98),Not(__95);int(1..)]),
Clause([Not(__97),__100;int(1..)]),
Clause([Not(__99),__100;int(1..)]),
Clause([Not(__100),__97,__99;int(1..)]),
Clause([__101;int(1..)]),
Clause([Not(__102),b#int_to_atom_03;int(1..)]),
Clause([Not(__102),__101;int(1..)]),
Clause([__102,Not(b#int_to_atom_03),Not(__101);int(1..)]),
Clause([b#int_to_atom_03,__103;int(1..)]),
Clause([Not(b#int_to_atom_03),Not(__103);int(1..)]),
Clause([Not(__104),__103;int(1..)]),
Clause([Not(__104),__100;int(1..)]),
Clause([__104,Not(__103),Not(__100);int(1..)]),
Clause([Not(__102),__105;int(1..)]),
Clause([Not(__104),__105;int(1..)]),
Clause([Not(__105),__102,__104;int(1..)]),
Clause([__106;int(1..)]),
Clause([Not(__107),b#int_to_atom_04;int(1..)]),
Clause([Not(__107),__106;int(1..)]),
Clause([__107,Not(b#int_to_atom_04),Not(__106);int(1..)]),
Clause([b#int_to_atom_04,__108;int(1..)]),
Clause([Not(b#int_to_atom_04),Not(__108);int(1..)]),
Clause([Not(__109),__108;int(1..)]),
Clause([Not(__109),__105;int(1..)]),
Clause([__109,Not(__108),Not(__105);int(1..)]),
Clause([Not(__107),__110;int(1..)]),
Clause([Not(__109),__110;int(1..)]),
Clause([Not(__110),__107,__109;int(1..)]),
Clause([__111;int(1..)]),
Clause([Not(__112),b#int_to_atom_05;int(1..)]),
Clause([Not(__112),__111;int(1..)]),
Clause([__112,Not(b#int_to_atom_05),Not(__111);int(1..)]),
Clause([b#int_to_atom_05,__113;int(1..)]),
Clause([Not(b#int_to_atom_05),Not(__113);int(1..)]),
Clause([Not(__114),__113;int(1..)]),
Clause([Not(__114),__110;int(1..)]),
Clause([__114,Not(__113),Not(__110);int(1..)]),
Clause([Not(__112),__115;int(1..)]),
Clause([Not(__114),__115;int(1..)]),
Clause([Not(__115),__112,__114;int(1..)]),
Clause([__116;int(1..)]),
Clause([Not(__117),b#int_to_atom_06;int(1..)]),
Clause([Not(__117),__116;int(1..)]),
Clause([__117,Not(b#int_to_atom_06),Not(__116);int(1..)]),
Clause([b#int_to_atom_06,__118;int(1..)]),
Clause([Not(b#int_to_atom_06),Not(__118);int(1..)]),
Clause([Not(__119),__118;int(1..)]),
Clause([Not(__119),__115;int(1..)]),
Clause([__119,Not(__118),Not(__115);int(1..)]),
Clause([Not(__117),__120;int(1..)]),
Clause([Not(__119),__120;int(1..)]),
Clause([Not(__120),__117,__119;int(1..)]),
Clause([Not(b#int_to_atom_07),Not(__121);int(1..)]),
Clause([b#int_to_atom_07,__121;int(1..)]),
Clause([Not(__122),__121;int(1..)]),
Clause([Not(__122);int(1..)]),
Clause([b#int_to_atom_07,__123;int(1..)]),
Clause([Not(b#int_to_atom_07),Not(__123);int(1..)]),
Clause([Not(__124),__123;int(1..)]),
Clause([Not(__124),__120;int(1..)]),
Clause([__124,Not(__123),Not(__120);int(1..)]),
Clause([Not(__122),__125;int(1..)]),
Clause([Not(__124),__125;int(1..)]),
Clause([Not(__125),__122,__124;int(1..)]),
Clause([__126,b#int_to_atom_00;int(1..)]),
Clause([__126;int(1..)]),
Clause([Not(b#int_to_atom_01),Not(__127);int(1..)]),
Clause([b#int_to_atom_01,__127;int(1..)]),
Clause([Not(__128);int(1..)]),
Clause([Not(__128),__127;int(1..)]),
Clause([b#int_to_atom_01,__129;int(1..)]),
Clause([Not(b#int_to_atom_01),Not(__129);int(1..)]),
Clause([Not(__130),__129;int(1..)]),
Clause([Not(__130),__126;int(1..)]),
Clause([__130,Not(__129),Not(__126);int(1..)]),
Clause([Not(__128),__131;int(1..)]),
Clause([Not(__130),__131;int(1..)]),
Clause([Not(__131),__128,__130;int(1..)]),
Clause([Not(b#int_to_atom_02),Not(__132);int(1..)]),
Clause([b#int_to_atom_02,__132;int(1..)]),
Clause([Not(__133),__132;int(1..)]),
Clause([__133,Not(__132);int(1..)]),
Clause([Not(b#int_to_atom_02),__134;int(1..)]),
Clause([b#int_to_atom_02,Not(__134);int(1..)]),
Clause([Not(__135),__134;int(1..)]),
Clause([Not(__135),__131;int(1..)]),
Clause([__135,Not(__134),Not(__131);int(1..)]),
Clause([Not(__133),__136;int(1..)]),
Clause([Not(__135),__136;int(1..)]),
Clause([Not(__136),__133,__135;int(1..)]),
Clause([Not(b#int_to_atom_03),Not(__137);int(1..)]),
Clause([b#int_to_atom_03,__137;int(1..)]),
Clause([Not(__138);int(1..)]),
Clause([Not(__138),__137;int(1..)]),
Clause([b#int_to_atom_03,__139;int(1..)]),
Clause([Not(b#int_to_atom_03),Not(__139);int(1..)]),
Clause([Not(__140),__139;int(1..)]),
Clause([Not(__140),__136;int(1..)]),
Clause([__140,Not(__139),Not(__136);int(1..)]),
Clause([Not(__138),__141;int(1..)]),
Clause([Not(__140),__141;int(1..)]),
Clause([Not(__141),__138,__140;int(1..)]),
Clause([Not(b#int_to_atom_04),Not(__142);int(1..)]),
Clause([b#int_to_atom_04,__142;int(1..)]),
Clause([Not(__143);int(1..)]),
Clause([Not(__143),__142;int(1..)]),
Clause([b#int_to_atom_04,__144;int(1..)]),
Clause([Not(b#int_to_atom_04),Not(__144);int(1..)]),
Clause([Not(__145),__144;int(1..)]),
Clause([Not(__145),__141;int(1..)]),
Clause([__145,Not(__144),Not(__141);int(1..)]),
Clause([Not(__143),__146;int(1..)]),
Clause([Not(__145),__146;int(1..)]),
Clause([Not(__146),__143,__145;int(1..)]),
Clause([Not(b#int_to_atom_05),Not(__147);int(1..)]),
Clause([b#int_to_atom_05,__147;int(1..)]),
Clause([Not(__148);int(1..)]),
Clause([Not(__148),__147;int(1..)]),
Clause([b#int_to_atom_05,__149;int(1..)]),
Clause([Not(b#int_to_atom_05),Not(__149);int(1..)]),
Clause([Not(__150),__149;int(1..)]),
Clause([Not(__150),__146;int(1..)]),
Clause([__150,Not(__149),Not(__146);int(1..)]),
Clause([Not(__148),__151;int(1..)]),
Clause([Not(__150),__151;int(1..)]),
Clause([Not(__151),__148,__150;int(1..)]),
Clause([Not(b#int_to_atom_06),Not(__152);int(1..)]),
Clause([b#int_to_atom_06,__152;int(1..)]),
Clause([Not(__153);int(1..)]),
Clause([Not(__153),__152;int(1..)]),
Clause([b#int_to_atom_06,__154;int(1..)]),
Clause([Not(b#int_to_atom_06),Not(__154);int(1..)]),
Clause([Not(__155),__154;int(1..)]),
Clause([Not(__155),__151;int(1..)]),
Clause([__155,Not(__154),Not(__151);int(1..)]),
Clause([Not(__153),__156;int(1..)]),
Clause([Not(__155),__156;int(1..)]),
Clause([Not(__156),__153,__155;int(1..)]),
Clause([__157;int(1..)]),
Clause([Not(__158),__157;int(1..)]),
Clause([Not(__158),b#int_to_atom_07;int(1..)]),
Clause([__158,Not(__157),Not(b#int_to_atom_07);int(1..)]),
Clause([b#int_to_atom_07,__159;int(1..)]),
Clause([Not(b#int_to_atom_07),Not(__159);int(1..)]),
Clause([Not(__160),__159;int(1..)]),
Clause([Not(__160),__156;int(1..)]),
Clause([__160,Not(__159),Not(__156);int(1..)]),
Clause([Not(__158),__161;int(1..)]),
Clause([Not(__160),__161;int(1..)]),
Clause([Not(__161),__158,__160;int(1..)])

