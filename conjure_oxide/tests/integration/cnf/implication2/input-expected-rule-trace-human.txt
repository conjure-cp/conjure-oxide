Model before rewriting:

find a: bool
find b: bool
find c: bool

such that

(a) -> ((b) -> (c))

--

(a) -> ((b) -> (c)), 
   ~~> normalise_implies_uncurry ([("Base", 8400)]) 
(and([a,b;int(1..)])) -> (c) 

--

(and([a,b;int(1..)])) -> (c), 
   ~~> remove_implication ([("CNF", 4100)]) 
or([Not(and([a,b;int(1..)])),c;int(1..)]) 

--

Not(and([a,b;int(1..)])), 
   ~~> distribute_not_over_and ([("Base", 8400)]) 
or([Not(a),Not(b);int(1..)]) 

--

or([or([Not(a),Not(b);int(1..)]),c;int(1..)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
or([Not(a),Not(b),c;int(1..)]) 

--

Final model:

find a: bool
find b: bool
find c: bool

such that

or([Not(a),Not(b),c;int(1..)])

