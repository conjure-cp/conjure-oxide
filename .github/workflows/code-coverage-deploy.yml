name: "Code and Documentation Coverage (Deploy)"
# see https://securitylab.github.com/research/github-actions-preventing-pwn-requests/

on:
  workflow_run:
    workflows: ["Code and Documentation Coverage (PR)"]
    types:
      - completed


# see https://github.com/JamesIves/github-pages-deploy-action/tree/dev
permissions:
  contents: write

env:
  rust_release: nightly

jobs:
  deploy-coverage: 
    name: "Info: Code Coverage"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set shas
        id: sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const {data: callee_run } = await github.rest.actions.getWorkflowRun({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });

            console.log(callee_run);

            // from manual inspection in jq, seems to hold head.sha for PR, not
            // whatever GITHUB_SHA is. 
            return callee_run.head_sha;

        
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          name: code-coverage-${{ steps.sha.outputs.result }}
          workflow: code-coverage.yml
          path: ./deploy

      - name: Deploy to Github Pages 
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./deploy
          target-folder: "coverage/${{ steps.sha.outputs.result }}"
          branch: gh-pages
          commit-message: "Actions: Code Coverage for ${{ steps.sha.outputs.result }}"
    
  indexes:
    needs: deploy-coverage
    name: "Regenerate indexes for coverage"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Checkout the pages repository
        uses: actions/checkout@v2
        with:
          ref: "gh-pages"
          path: "pages"

      - name: Set shas
        id: sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const {data: callee_run } = await github.rest.actions.getWorkflowRun({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });

            console.log(callee_run);
            return callee_run.head_sha;

      - name: "Generate indexes"
        run: |
          ./tools/ci/genindex.py pages/coverage/

      - uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./pages/coverage/
          target-folder: ./coverage/
          branch: gh-pages
          commit-message: "Actions: Update coverage indexes"

  comment:
    permissions: write-all
    needs: deploy-coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            target
            solvers/minion/vendor
            solvers/chuffed/vendor

          key: ${{ runner.os }}-${{ env.rust_release }}-${{ github.event.repository.updated_at }}
          restore-keys: ${{ runner.os }}-${{ env.rust_release }}

      - name: Install rust ${{ env.rust_release }}
        run: rustup update ${{ env.rust_release }} && rustup default ${{ env.rust_release }}

      # from https://github.com/bewee/rustdoc-coverage-action-example/

      - name: Checkout main
        uses: actions/checkout@v2
        with: 
          ref: main

      - name: Calculate main doc coverage
        id: maindoc
        run: |
           RUSTDOCFLAGS='-Z unstable-options --show-coverage' cargo +nightly doc --workspace --no-deps > coverage.md
           echo 'coverage<<EOFABC' >> $GITHUB_OUTPUT
           echo "$(cat coverage.md)" >> $GITHUB_OUTPUT
           echo 'EOFABC' >> $GITHUB_OUTPUT

      - name: Get pr info
        id: prinfo
        uses: actions/github-script@v6
        with:
          script: |
            const {data: callee_run } = await github.rest.actions.getWorkflowRun({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });

            console.log(callee_run.pull_requests[0]);

            // from manual inspection in jq, seems to hold head.sha for PR, not
            // whatever GITHUB_SHA is. 
            return callee_run.pull_requests[0];

      - name: Get pr repo
        id: prrepo
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const {data: callee_run } = await github.rest.actions.getWorkflowRun({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            return callee_run.repository.full_name;

      - name: Checkout this PR
        uses: actions/checkout@v2
        with:
          ref: ${{fromJson(steps.prinfo.outputs.result).head.sha}}
          repository: ${{steps.prrepo.outputs.result}}

      - name: Calculate PR doc coverage
        id: prddoc
        run: |
           RUSTDOCFLAGS='-Z unstable-options --show-coverage' cargo +nightly doc --workspace --no-deps > coverage.md
           echo 'coverage<<EOFABC' >> $GITHUB_OUTPUT
           echo "$(cat coverage.md)" >> $GITHUB_OUTPUT
           echo 'EOFABC' >> $GITHUB_OUTPUT

      - name: Generate lcov summary for main and pr
        continue-on-error: true
        id: lcov
        run: |

          sudo apt-get install -y lcov
          wget https://${{github.repository_owner}}.github.io/conjure-oxide/coverage/main/lcov.info
          lcov --summary lcov.info > cov.txt
          echo "main<<EOFABC" >> $GITHUB_OUTPUT
          echo "$(cat cov.txt | tail -n +3)" >> $GITHUB_OUTPUT
          echo 'EOFABC' >> $GITHUB_OUTPUT

          rm lcov.info
          wget https://${{github.repository_owner}}.github.io/conjure-oxide/coverage/${{fromJson(steps.prinfo.outputs.result).head.sha}}/lcov.info
          lcov --summary lcov.info > cov.txt
          echo "pr<<EOFABC" >> $GITHUB_OUTPUT
          echo "$(cat cov.txt | tail -n +3)" >> $GITHUB_OUTPUT
          echo 'EOFABC' >> $GITHUB_OUTPUT

      - name: Find coverage comment
        uses: peter-evans/find-comment@v1
        continue-on-error: true
        id: fc
        with:
          issue-number: ${{fromJson(steps.prinfo.outputs.result).number}}
          comment-author: "github-actions[bot]"
          body-includes: "## Documentation Coverage"

      - name: Delete coverage comment if it exists
        if: steps.fc.outputs.comment-id != ''
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ steps.fc.outputs.comment-id }}
            })

      - name: Create coverage comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{fromJson(steps.prinfo.outputs.result).number}}
          body: |
            ## Documentation Coverage

            <details>
            <summary>This PR</summary>

            ```
            ${{steps.prddoc.outputs.coverage}}
            ```

            </details>

            <details>
            <summary>Main</summary>
            
            ```
            ${{steps.maindoc.outputs.coverage}}
            ```

            </details>

            ## Code Coverage

            [This PR](https://${{github.repository_owner}}.github.io/conjure-oxide/coverage/${{fromJson(steps.prinfo.outputs.result).head.sha}})
            ```
            ${{steps.lcov.outputs.pr}}
            ```

            [Main](https://${{github.repository_owner}}.github.io/conjure-oxide/coverage/main)
            ```
            ${{steps.lcov.outputs.main}}
            ```