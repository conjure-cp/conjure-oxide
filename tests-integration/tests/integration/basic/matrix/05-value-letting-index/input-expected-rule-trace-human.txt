Model before rewriting:

letting a be [[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)]
find b: int(1..5)

such that

(b < a[-(2), 2]),
allDiff(a[-(2),..])

clauses:



--

(b < a[-(2), 2]),
allDiff(a[-(2),..]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(b < a[-2, 2]),
allDiff(a[-2,..]) 

--

(b < a[-2, 2]), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(b <= sum([a[-2, 2],-1;int(1..)])) 

--

a[-2, 2], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{a[-2, 2] @ and([__inDomain(-2,int(-2..0)),__inDomain(2,int(1,2,4));int(1..)])} 

--

(b <= sum([{a[-2, 2] @ and([__inDomain(-2,int(-2..0)),__inDomain(2,int(1,2,4));int(1..)])},-1;int(1..)])),
allDiff(a[-2,..]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(b <= sum([a[-2, 2],-1;int(1..)])),
allDiff(a[-2,..]) 

--

a[-2,..], 
   ~~> slice_to_bubble ([("Bubble", 6000)]) 
{a[-2,..] @ and([__inDomain(-2,int(-2..0));int(1..)])} 

--

(b <= sum([a[-2, 2],-1;int(1..)])),
allDiff({a[-2,..] @ and([__inDomain(-2,int(-2..0));int(1..)])}), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(b <= sum([a[-2, 2],-1;int(1..)])),
allDiff(a[-2,..]) 

--

a, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
[[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)] 

--

(b <= sum([[[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)][-2, 2],-1;int(1..)])),
allDiff(a[-2,..]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(b <= 1),
allDiff(a[-2,..]) 

--

a, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
[[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)] 

--

(b <= 1),
allDiff([[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)][-2,..]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(b <= 1) 

--

(b <= 1), 
   ~~> leq_to_ineq ([("Minion", 4100)]) 
Ineq(b, 1, 0) 

--

Final model:

letting a be [[1,2,3;int(1,2,4)],[1,3,2;int(1,2,4)],[3,2,1;int(1,2,4)];int(-2..0)]
find b: int(1..5)

such that

Ineq(b, 1, 0)

clauses:



