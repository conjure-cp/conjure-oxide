Model before rewriting:

find a: int(-1..1)
find b: int(-1..1)
find x: int(1..3)
find y: int(-1..1)
find z: int(-1..1)

such that

(x = sum([sum([-(y),-((sum([z,1;int(1..2)]) - a));int(1..2)]),b;int(1..2)]))

clauses:



--

sum([sum([-(y),-((sum([z,1;int(1..2)]) - a));int(1..2)]),b;int(1..2)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
sum([-(y),-((sum([z,1;int(1..2)]) - a)),b;int(1..2)]) 

--

(sum([z,1;int(1..2)]) - a), 
   ~~> minus_to_sum ([("Base", 8400)]) 
sum([sum([z,1;int(1..2)]),-(a);int(1..)]) 

--

sum([sum([z,1;int(1..2)]),-(a);int(1..)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
sum([z,1,-(a);int(1..)]) 

--

-(sum([z,1,-(a);int(1..)])), 
   ~~> distribute_negation_over_sum ([("Base", 8400)]) 
sum([-(z),-(1),-(-(a));int(1..)]) 

--

(x = sum([-(y),sum([-(z),-(1),-(-(a));int(1..)]),b;int(1..2)])), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(x = sum([-(y),sum([-(z),-1,-(-(a));int(1..)]),b;int(1..2)])) 

--

sum([-(y),sum([-(z),-1,-(-(a));int(1..)]),b;int(1..2)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
sum([-(y),-(z),-1,-(-(a)),b;int(1..2)]) 

--

-(-(a)), 
   ~~> elmininate_double_negation ([("Base", 8400)]) 
a 

--

sum([-(y),-(z),-1,a,b;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
sum([-(y),-(z),-1,a,b;int(1..)]) 

--

(x = sum([-(y),-(z),-1,a,b;int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([FlatWeightedSumLeq([1, 1, 1, -1, -1],[-1, a, b, y, z],x),FlatWeightedSumGeq([1, 1, 1, -1, -1],[-1, a, b, y, z],x);int(1..)]) 

--

and([FlatWeightedSumLeq([1, 1, 1, -1, -1],[-1, a, b, y, z],x),FlatWeightedSumGeq([1, 1, 1, -1, -1],[-1, a, b, y, z],x);int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
FlatWeightedSumLeq([1, 1, 1, -1, -1],[-1, a, b, y, z],x),
FlatWeightedSumGeq([1, 1, 1, -1, -1],[-1, a, b, y, z],x) 

--

Final model:

find a: int(-1..1)
find b: int(-1..1)
find x: int(1..3)
find y: int(-1..1)
find z: int(-1..1)

such that

FlatWeightedSumLeq([1, 1, 1, -1, -1],[-1, a, b, y, z],x),
FlatWeightedSumGeq([1, 1, 1, -1, -1],[-1, a, b, y, z],x)

clauses:



