Model before rewriting:

find majorDiagonal: matrix indexed by [[int(0..3)]] of int(0..6)
find minorDiagonal: matrix indexed by [[int(0..3)]] of int(-3..3)
find row: matrix indexed by [[int(0..7)]] of int(0..7)

such that

and([given queen: int(0..3)

such that

and([(majorDiagonal[queen] = sum([queen,row[queen];int(1..2)])),(minorDiagonal[queen] = (queen - row[queen]));int(1..2)])

clauses:


 | queen: int(0..3),]),
allDiff(row),
allDiff(majorDiagonal),
allDiff(minorDiagonal)

clauses:



--

and([given queen: int(0..3)

such that

and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = (queen - row#matrix_to_atom[queen]));int(1..2)])

clauses:


 | queen: int(0..3),]),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> select_representation_matrix ([("Base", 8001)]) 
and([given queen: int(0..3)

such that

and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = (queen - row#matrix_to_atom[queen]));int(1..2)])

clauses:


 | queen: int(0..3),]),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 
new variables:
  find majorDiagonal#matrix_to_atom_0: int(0..6)
  find majorDiagonal#matrix_to_atom_1: int(0..6)
  find majorDiagonal#matrix_to_atom_2: int(0..6)
  find majorDiagonal#matrix_to_atom_3: int(0..6)
  find minorDiagonal#matrix_to_atom_0: int(-3..3)
  find minorDiagonal#matrix_to_atom_1: int(-3..3)
  find minorDiagonal#matrix_to_atom_2: int(-3..3)
  find minorDiagonal#matrix_to_atom_3: int(-3..3)
  find row#matrix_to_atom_0: int(0..7)
  find row#matrix_to_atom_1: int(0..7)
  find row#matrix_to_atom_2: int(0..7)
  find row#matrix_to_atom_3: int(0..7)
  find row#matrix_to_atom_4: int(0..7)
  find row#matrix_to_atom_5: int(0..7)
  find row#matrix_to_atom_6: int(0..7)
  find row#matrix_to_atom_7: int(0..7)
--

Model before rewriting:

find queen: int(0..3)
find __0: bool
find __1: bool

such that

(true != and([__0,__1;int(1..2)]))

clauses:



--

(true != and([__0,__1;int(1..2)])), 
   ~~> flatten_generic ([("Minion", 4200)]) 
(true != __2) 
new variables:
  find __2: bool
new constraints:
  __2 =aux and([__0,__1;int(1..2)])
--

__2 =aux and([__0,__1;int(1..2)]), 
   ~~> bool_eq_to_reify ([("Minion", 4400)]) 
Reify(and([__0,__1;int(1..2)]), __2) 

--

and([__0,__1;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
and([__0,__1;int(1..)]) 

--

Final model:

find queen: int(0..3)
find __0: bool
find __1: bool
find __2: bool

such that

(true != __2),
Reify(and([__0,__1;int(1..)]), __2)

clauses:



Model before rewriting:

given queen: int(0..3)

such that

and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = (queen - row#matrix_to_atom[queen]));int(1..2)])

clauses:



--

(queen - row#matrix_to_atom[queen]), 
   ~~> minus_to_sum ([("Base", 8400)]) 
sum([queen,-(row#matrix_to_atom[queen]);int(1..)]) 

--

majorDiagonal#matrix_to_atom[queen], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{majorDiagonal#matrix_to_atom[queen] @ and([__inDomain(queen,int(0..3));int(1..)])} 

--

and([({majorDiagonal#matrix_to_atom[queen] @ and([__inDomain(queen,int(0..3));int(1..)])} = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]));int(1..2)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]));int(1..2)]) 

--

row#matrix_to_atom[queen], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{row#matrix_to_atom[queen] @ and([__inDomain(queen,int(0..7));int(1..)])} 

--

and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,{row#matrix_to_atom[queen] @ and([__inDomain(queen,int(0..7));int(1..)])};int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]));int(1..2)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]));int(1..2)]) 

--

minorDiagonal#matrix_to_atom[queen], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{minorDiagonal#matrix_to_atom[queen] @ and([__inDomain(queen,int(0..3));int(1..)])} 

--

and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),({minorDiagonal#matrix_to_atom[queen] @ and([__inDomain(queen,int(0..3));int(1..)])} = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]));int(1..2)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]));int(1..2)]) 

--

row#matrix_to_atom[queen], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{row#matrix_to_atom[queen] @ and([__inDomain(queen,int(0..7));int(1..)])} 

--

and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = sum([queen,-({row#matrix_to_atom[queen] @ and([__inDomain(queen,int(0..7));int(1..)])});int(1..)]));int(1..2)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]));int(1..2)]) 

--

and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]));int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]));int(1..)]) 

--

and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]));int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),
(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)])) 

--

sum([queen,row#matrix_to_atom[queen];int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
sum([queen,row#matrix_to_atom[queen];int(1..)]) 

--

Final model:

given queen: int(0..3)

such that

(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..)])),
(minorDiagonal#matrix_to_atom[queen] = sum([queen,-(row#matrix_to_atom[queen]);int(1..)]))

clauses:



and([given queen: int(0..3)

such that

and([(majorDiagonal#matrix_to_atom[queen] = sum([queen,row#matrix_to_atom[queen];int(1..2)])),(minorDiagonal#matrix_to_atom[queen] = (queen - row#matrix_to_atom[queen]));int(1..2)])

clauses:


 | queen: int(0..3),__0: bool,__1: bool,__2: bool,]), 
   ~~> expand_comprehension_ac ([("Better_AC_Comprehension_Expansion", 2001)]) 
and([and([(majorDiagonal#matrix_to_atom[0] = sum([0,row#matrix_to_atom[0];int(1..)])),(minorDiagonal#matrix_to_atom[0] = sum([0,-(row#matrix_to_atom[0]);int(1..)]));int(1..)]),and([(majorDiagonal#matrix_to_atom[1] = sum([1,row#matrix_to_atom[1];int(1..)])),(minorDiagonal#matrix_to_atom[1] = sum([1,-(row#matrix_to_atom[1]);int(1..)]));int(1..)]),and([(majorDiagonal#matrix_to_atom[2] = sum([2,row#matrix_to_atom[2];int(1..)])),(minorDiagonal#matrix_to_atom[2] = sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..)]),and([(majorDiagonal#matrix_to_atom[3] = sum([3,row#matrix_to_atom[3];int(1..)])),(minorDiagonal#matrix_to_atom[3] = sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..)]);int(1..)]) 

--

and([and([(majorDiagonal#matrix_to_atom[0] = sum([0,row#matrix_to_atom[0];int(1..)])),(minorDiagonal#matrix_to_atom[0] = sum([0,-(row#matrix_to_atom[0]);int(1..)]));int(1..)]),and([(majorDiagonal#matrix_to_atom[1] = sum([1,row#matrix_to_atom[1];int(1..)])),(minorDiagonal#matrix_to_atom[1] = sum([1,-(row#matrix_to_atom[1]);int(1..)]));int(1..)]),and([(majorDiagonal#matrix_to_atom[2] = sum([2,row#matrix_to_atom[2];int(1..)])),(minorDiagonal#matrix_to_atom[2] = sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..)]),and([(majorDiagonal#matrix_to_atom[3] = sum([3,row#matrix_to_atom[3];int(1..)])),(minorDiagonal#matrix_to_atom[3] = sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..)]);int(1..)]),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
and([(majorDiagonal#matrix_to_atom[0] = sum([0,row#matrix_to_atom[0];int(1..)])),(minorDiagonal#matrix_to_atom[0] = sum([0,-(row#matrix_to_atom[0]);int(1..)]));int(1..)]),
and([(majorDiagonal#matrix_to_atom[1] = sum([1,row#matrix_to_atom[1];int(1..)])),(minorDiagonal#matrix_to_atom[1] = sum([1,-(row#matrix_to_atom[1]);int(1..)]));int(1..)]),
and([(majorDiagonal#matrix_to_atom[2] = sum([2,row#matrix_to_atom[2];int(1..)])),(minorDiagonal#matrix_to_atom[2] = sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..)]),
and([(majorDiagonal#matrix_to_atom[3] = sum([3,row#matrix_to_atom[3];int(1..)])),(minorDiagonal#matrix_to_atom[3] = sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..)]),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

and([(majorDiagonal#matrix_to_atom[0] = sum([0,row#matrix_to_atom[0];int(1..)])),(minorDiagonal#matrix_to_atom[0] = sum([0,-(row#matrix_to_atom[0]);int(1..)]));int(1..)]),
and([(majorDiagonal#matrix_to_atom[1] = sum([1,row#matrix_to_atom[1];int(1..)])),(minorDiagonal#matrix_to_atom[1] = sum([1,-(row#matrix_to_atom[1]);int(1..)]));int(1..)]),
and([(majorDiagonal#matrix_to_atom[2] = sum([2,row#matrix_to_atom[2];int(1..)])),(minorDiagonal#matrix_to_atom[2] = sum([2,-(row#matrix_to_atom[2]);int(1..)]));int(1..)]),
and([(majorDiagonal#matrix_to_atom[3] = sum([3,row#matrix_to_atom[3];int(1..)])),(minorDiagonal#matrix_to_atom[3] = sum([3,-(row#matrix_to_atom[3]);int(1..)]));int(1..)]),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(majorDiagonal#matrix_to_atom[0] = sum([0,row#matrix_to_atom[0];int(1..)])),
(minorDiagonal#matrix_to_atom[0] = sum([0,-(row#matrix_to_atom[0]);int(1..)])),
(majorDiagonal#matrix_to_atom[1] = sum([1,row#matrix_to_atom[1];int(1..)])),
(minorDiagonal#matrix_to_atom[1] = sum([1,-(row#matrix_to_atom[1]);int(1..)])),
(majorDiagonal#matrix_to_atom[2] = sum([2,row#matrix_to_atom[2];int(1..)])),
(minorDiagonal#matrix_to_atom[2] = sum([2,-(row#matrix_to_atom[2]);int(1..)])),
(majorDiagonal#matrix_to_atom[3] = sum([3,row#matrix_to_atom[3];int(1..)])),
(minorDiagonal#matrix_to_atom[3] = sum([3,-(row#matrix_to_atom[3]);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

(majorDiagonal#matrix_to_atom[0] = sum([0,row#matrix_to_atom[0];int(1..)])),
(minorDiagonal#matrix_to_atom[0] = sum([0,-(row#matrix_to_atom[0]);int(1..)])),
(majorDiagonal#matrix_to_atom[1] = sum([1,row#matrix_to_atom[1];int(1..)])),
(minorDiagonal#matrix_to_atom[1] = sum([1,-(row#matrix_to_atom[1]);int(1..)])),
(majorDiagonal#matrix_to_atom[2] = sum([2,row#matrix_to_atom[2];int(1..)])),
(minorDiagonal#matrix_to_atom[2] = sum([2,-(row#matrix_to_atom[2]);int(1..)])),
(majorDiagonal#matrix_to_atom[3] = sum([3,row#matrix_to_atom[3];int(1..)])),
(minorDiagonal#matrix_to_atom[3] = sum([3,-(row#matrix_to_atom[3]);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> index_matrix_to_atom ([("Base", 5000)]) 
(majorDiagonal#matrix_to_atom_0 = sum([0,row#matrix_to_atom_0;int(1..)])),
(minorDiagonal#matrix_to_atom_0 = sum([0,-(row#matrix_to_atom_0);int(1..)])),
(majorDiagonal#matrix_to_atom_1 = sum([1,row#matrix_to_atom_1;int(1..)])),
(minorDiagonal#matrix_to_atom_1 = sum([1,-(row#matrix_to_atom_1);int(1..)])),
(majorDiagonal#matrix_to_atom_2 = sum([2,row#matrix_to_atom_2;int(1..)])),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

(majorDiagonal#matrix_to_atom_0 = sum([0,row#matrix_to_atom_0;int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0);int(1..)]) 

--

and([SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0);int(1..)]),
(minorDiagonal#matrix_to_atom_0 = sum([0,-(row#matrix_to_atom_0);int(1..)])),
(majorDiagonal#matrix_to_atom_1 = sum([1,row#matrix_to_atom_1;int(1..)])),
(minorDiagonal#matrix_to_atom_1 = sum([1,-(row#matrix_to_atom_1);int(1..)])),
(majorDiagonal#matrix_to_atom_2 = sum([2,row#matrix_to_atom_2;int(1..)])),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
(minorDiagonal#matrix_to_atom_0 = sum([0,-(row#matrix_to_atom_0);int(1..)])),
(majorDiagonal#matrix_to_atom_1 = sum([1,row#matrix_to_atom_1;int(1..)])),
(minorDiagonal#matrix_to_atom_1 = sum([1,-(row#matrix_to_atom_1);int(1..)])),
(majorDiagonal#matrix_to_atom_2 = sum([2,row#matrix_to_atom_2;int(1..)])),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

(minorDiagonal#matrix_to_atom_0 = sum([0,-(row#matrix_to_atom_0);int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0);int(1..)]) 

--

SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
and([FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0);int(1..)]),
(majorDiagonal#matrix_to_atom_1 = sum([1,row#matrix_to_atom_1;int(1..)])),
(minorDiagonal#matrix_to_atom_1 = sum([1,-(row#matrix_to_atom_1);int(1..)])),
(majorDiagonal#matrix_to_atom_2 = sum([2,row#matrix_to_atom_2;int(1..)])),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
(majorDiagonal#matrix_to_atom_1 = sum([1,row#matrix_to_atom_1;int(1..)])),
(minorDiagonal#matrix_to_atom_1 = sum([1,-(row#matrix_to_atom_1);int(1..)])),
(majorDiagonal#matrix_to_atom_2 = sum([2,row#matrix_to_atom_2;int(1..)])),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

(majorDiagonal#matrix_to_atom_1 = sum([1,row#matrix_to_atom_1;int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1);int(1..)]) 

--

SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
and([SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1);int(1..)]),
(minorDiagonal#matrix_to_atom_1 = sum([1,-(row#matrix_to_atom_1);int(1..)])),
(majorDiagonal#matrix_to_atom_2 = sum([2,row#matrix_to_atom_2;int(1..)])),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
(minorDiagonal#matrix_to_atom_1 = sum([1,-(row#matrix_to_atom_1);int(1..)])),
(majorDiagonal#matrix_to_atom_2 = sum([2,row#matrix_to_atom_2;int(1..)])),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

(minorDiagonal#matrix_to_atom_1 = sum([1,-(row#matrix_to_atom_1);int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1);int(1..)]) 

--

SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
and([FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1);int(1..)]),
(majorDiagonal#matrix_to_atom_2 = sum([2,row#matrix_to_atom_2;int(1..)])),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
(majorDiagonal#matrix_to_atom_2 = sum([2,row#matrix_to_atom_2;int(1..)])),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

(majorDiagonal#matrix_to_atom_2 = sum([2,row#matrix_to_atom_2;int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),SumGeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2);int(1..)]) 

--

SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
and([SumLeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),SumGeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2);int(1..)]),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
SumLeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
SumGeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

(minorDiagonal#matrix_to_atom_2 = sum([2,-(row#matrix_to_atom_2);int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([FlatWeightedSumLeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),FlatWeightedSumGeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2);int(1..)]) 

--

SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
SumLeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
SumGeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
and([FlatWeightedSumLeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),FlatWeightedSumGeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2);int(1..)]),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
SumLeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
SumGeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
FlatWeightedSumLeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
FlatWeightedSumGeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

(majorDiagonal#matrix_to_atom_3 = sum([3,row#matrix_to_atom_3;int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([SumLeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3),SumGeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3);int(1..)]) 

--

SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
SumLeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
SumGeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
FlatWeightedSumLeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
FlatWeightedSumGeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
and([SumLeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3),SumGeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3);int(1..)]),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
SumLeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
SumGeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
FlatWeightedSumLeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
FlatWeightedSumGeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
SumLeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3),
SumGeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3),
(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

(minorDiagonal#matrix_to_atom_3 = sum([3,-(row#matrix_to_atom_3);int(1..)])), 
   ~~> introduce_weighted_sumleq_sumgeq ([("Minion", 4600)]) 
and([FlatWeightedSumLeq([1, -1],[3, row#matrix_to_atom_3],minorDiagonal#matrix_to_atom_3),FlatWeightedSumGeq([1, -1],[3, row#matrix_to_atom_3],minorDiagonal#matrix_to_atom_3);int(1..)]) 

--

SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
SumLeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
SumGeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
FlatWeightedSumLeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
FlatWeightedSumGeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
SumLeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3),
SumGeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3),
and([FlatWeightedSumLeq([1, -1],[3, row#matrix_to_atom_3],minorDiagonal#matrix_to_atom_3),FlatWeightedSumGeq([1, -1],[3, row#matrix_to_atom_3],minorDiagonal#matrix_to_atom_3);int(1..)]),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
SumLeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
SumGeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
FlatWeightedSumLeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
FlatWeightedSumGeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
SumLeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3),
SumGeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3),
FlatWeightedSumLeq([1, -1],[3, row#matrix_to_atom_3],minorDiagonal#matrix_to_atom_3),
FlatWeightedSumGeq([1, -1],[3, row#matrix_to_atom_3],minorDiagonal#matrix_to_atom_3),
allDiff(row#matrix_to_atom),
allDiff(majorDiagonal#matrix_to_atom),
allDiff(minorDiagonal#matrix_to_atom) 

--

allDiff(row#matrix_to_atom), 
   ~~> matrix_ref_to_atom ([("Base", 2000)]) 
allDiff([row#matrix_to_atom_0,row#matrix_to_atom_1,row#matrix_to_atom_2,row#matrix_to_atom_3,row#matrix_to_atom_4,row#matrix_to_atom_5,row#matrix_to_atom_6,row#matrix_to_atom_7;int(1..)]) 

--

allDiff([row#matrix_to_atom_0,row#matrix_to_atom_1,row#matrix_to_atom_2,row#matrix_to_atom_3,row#matrix_to_atom_4,row#matrix_to_atom_5,row#matrix_to_atom_6,row#matrix_to_atom_7;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]) 

--

allDiff(majorDiagonal#matrix_to_atom), 
   ~~> matrix_ref_to_atom ([("Base", 2000)]) 
allDiff([majorDiagonal#matrix_to_atom_0,majorDiagonal#matrix_to_atom_1,majorDiagonal#matrix_to_atom_2,majorDiagonal#matrix_to_atom_3;int(1..)]) 

--

allDiff([majorDiagonal#matrix_to_atom_0,majorDiagonal#matrix_to_atom_1,majorDiagonal#matrix_to_atom_2,majorDiagonal#matrix_to_atom_3;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]) 

--

allDiff(minorDiagonal#matrix_to_atom), 
   ~~> matrix_ref_to_atom ([("Base", 2000)]) 
allDiff([minorDiagonal#matrix_to_atom_0,minorDiagonal#matrix_to_atom_1,minorDiagonal#matrix_to_atom_2,minorDiagonal#matrix_to_atom_3;int(1..)]) 

--

allDiff([minorDiagonal#matrix_to_atom_0,minorDiagonal#matrix_to_atom_1,minorDiagonal#matrix_to_atom_2,minorDiagonal#matrix_to_atom_3;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3]) 

--

Final model:

find majorDiagonal: matrix indexed by [[int(0..3)]] of int(0..6)
find minorDiagonal: matrix indexed by [[int(0..3)]] of int(-3..3)
find row: matrix indexed by [[int(0..7)]] of int(0..7)
find majorDiagonal#matrix_to_atom_0: int(0..6)
find majorDiagonal#matrix_to_atom_1: int(0..6)
find majorDiagonal#matrix_to_atom_2: int(0..6)
find majorDiagonal#matrix_to_atom_3: int(0..6)
find minorDiagonal#matrix_to_atom_0: int(-3..3)
find minorDiagonal#matrix_to_atom_1: int(-3..3)
find minorDiagonal#matrix_to_atom_2: int(-3..3)
find minorDiagonal#matrix_to_atom_3: int(-3..3)
find row#matrix_to_atom_0: int(0..7)
find row#matrix_to_atom_1: int(0..7)
find row#matrix_to_atom_2: int(0..7)
find row#matrix_to_atom_3: int(0..7)
find row#matrix_to_atom_4: int(0..7)
find row#matrix_to_atom_5: int(0..7)
find row#matrix_to_atom_6: int(0..7)
find row#matrix_to_atom_7: int(0..7)

such that

SumLeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
SumGeq([0, row#matrix_to_atom_0], majorDiagonal#matrix_to_atom_0),
FlatWeightedSumLeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
FlatWeightedSumGeq([1, -1],[0, row#matrix_to_atom_0],minorDiagonal#matrix_to_atom_0),
SumLeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
SumGeq([1, row#matrix_to_atom_1], majorDiagonal#matrix_to_atom_1),
FlatWeightedSumLeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
FlatWeightedSumGeq([1, -1],[1, row#matrix_to_atom_1],minorDiagonal#matrix_to_atom_1),
SumLeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
SumGeq([2, row#matrix_to_atom_2], majorDiagonal#matrix_to_atom_2),
FlatWeightedSumLeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
FlatWeightedSumGeq([1, -1],[2, row#matrix_to_atom_2],minorDiagonal#matrix_to_atom_2),
SumLeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3),
SumGeq([3, row#matrix_to_atom_3], majorDiagonal#matrix_to_atom_3),
FlatWeightedSumLeq([1, -1],[3, row#matrix_to_atom_3],minorDiagonal#matrix_to_atom_3),
FlatWeightedSumGeq([1, -1],[3, row#matrix_to_atom_3],minorDiagonal#matrix_to_atom_3),
__flat_alldiff([row#matrix_to_atom_0, row#matrix_to_atom_1, row#matrix_to_atom_2, row#matrix_to_atom_3, row#matrix_to_atom_4, row#matrix_to_atom_5, row#matrix_to_atom_6, row#matrix_to_atom_7]),
__flat_alldiff([majorDiagonal#matrix_to_atom_0, majorDiagonal#matrix_to_atom_1, majorDiagonal#matrix_to_atom_2, majorDiagonal#matrix_to_atom_3]),
__flat_alldiff([minorDiagonal#matrix_to_atom_0, minorDiagonal#matrix_to_atom_1, minorDiagonal#matrix_to_atom_2, minorDiagonal#matrix_to_atom_3])

clauses:



