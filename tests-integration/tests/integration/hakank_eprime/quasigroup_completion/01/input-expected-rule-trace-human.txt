Model before rewriting:

letting mat be [[0,1,0,0;int(1..4)],[0,0,2,0;int(1..4)],[0,3,0,0;int(1..4)],[0,0,0,4;int(1..4)];int(1..4)]
letting n be 4
find x: matrix indexed by [[int(1..4), int(1..4)]] of int(1..4)

such that

and([given i: int(1..4)
given j: int(1..4)

such that

((0 < mat[i, j])) -> ((x[i, j] = mat[i, j]))
 | i: int(1..4),j: int(1..4),]),
and([given i: int(1..4)

such that

and([allDiff(x[i,..]),allDiff(x[..,i]);int(1..2)])
 | i: int(1..4),])

--

and([given i: int(1..4)
given j: int(1..4)

such that

((0 < mat[i, j])) -> ((x#matrix_to_atom[i, j] = mat[i, j]))
 | i: int(1..4),j: int(1..4),]),
and([given i: int(1..4)

such that

and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..2)])
 | i: int(1..4),]), 
   ~~> select_representation_matrix ([("Base", 8001)]) 
and([given i: int(1..4)
given j: int(1..4)

such that

((0 < mat[i, j])) -> ((x#matrix_to_atom[i, j] = mat[i, j]))
 | i: int(1..4),j: int(1..4),]),
and([given i: int(1..4)

such that

and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..2)])
 | i: int(1..4),]) 
new variables:
  find x#matrix_to_atom_1_1: int(1..4)
  find x#matrix_to_atom_1_2: int(1..4)
  find x#matrix_to_atom_1_3: int(1..4)
  find x#matrix_to_atom_1_4: int(1..4)
  find x#matrix_to_atom_2_1: int(1..4)
  find x#matrix_to_atom_2_2: int(1..4)
  find x#matrix_to_atom_2_3: int(1..4)
  find x#matrix_to_atom_2_4: int(1..4)
  find x#matrix_to_atom_3_1: int(1..4)
  find x#matrix_to_atom_3_2: int(1..4)
  find x#matrix_to_atom_3_3: int(1..4)
  find x#matrix_to_atom_3_4: int(1..4)
  find x#matrix_to_atom_4_1: int(1..4)
  find x#matrix_to_atom_4_2: int(1..4)
  find x#matrix_to_atom_4_3: int(1..4)
  find x#matrix_to_atom_4_4: int(1..4)
--

Model before rewriting:

find i: int(1..4)
find j: int(1..4)
find __0: bool
find __1: bool

such that

(true != (__0) -> (__1))

--

(__0) -> (__1), 
   ~~> introduce_reifyimply_ineq_from_imply ([("Minion", 4400)]) 
Ineq(__0, __1, 0) 

--

(true != Ineq(__0, __1, 0)), 
   ~~> flatten_generic ([("Minion", 4200)]) 
(true != __2) 
new variables:
  find __2: bool
new constraints:
  __2 =aux Ineq(__0, __1, 0)
--

__2 =aux Ineq(__0, __1, 0), 
   ~~> bool_eq_to_reify ([("Minion", 4400)]) 
Reify(Ineq(__0, __1, 0), __2) 

--

Final model:

find i: int(1..4)
find j: int(1..4)
find __0: bool
find __1: bool
find __2: bool

such that

(true != __2),
Reify(Ineq(__0, __1, 0), __2)

Model before rewriting:

given i: int(1..4)
given j: int(1..4)

such that

((0 < mat[i, j])) -> ((x#matrix_to_atom[i, j] = mat[i, j]))

--

(0 < mat[i, j]), 
   ~~> lt_to_leq ([("Minion", 8400)]) 
(0 <= sum([mat[i, j],-1;int(1..)])) 

--

mat[i, j], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{mat[i, j] @ and([__inDomain(i,int(1..4)),__inDomain(j,int(1..4));int(1..)])} 

--

((0 <= sum([{mat[i, j] @ and([__inDomain(i,int(1..4)),__inDomain(j,int(1..4));int(1..)])},-1;int(1..)]))) -> ((x#matrix_to_atom[i, j] = mat[i, j])), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
((0 <= sum([mat[i, j],-1;int(1..)]))) -> ((x#matrix_to_atom[i, j] = mat[i, j])) 

--

x#matrix_to_atom[i, j], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{x#matrix_to_atom[i, j] @ and([__inDomain(i,int(1..4)),__inDomain(j,int(1..4));int(1..)])} 

--

((0 <= sum([mat[i, j],-1;int(1..)]))) -> (({x#matrix_to_atom[i, j] @ and([__inDomain(i,int(1..4)),__inDomain(j,int(1..4));int(1..)])} = mat[i, j])), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
((0 <= sum([mat[i, j],-1;int(1..)]))) -> ((x#matrix_to_atom[i, j] = mat[i, j])) 

--

mat[i, j], 
   ~~> index_to_bubble ([("Bubble", 6000)]) 
{mat[i, j] @ and([__inDomain(i,int(1..4)),__inDomain(j,int(1..4));int(1..)])} 

--

((0 <= sum([mat[i, j],-1;int(1..)]))) -> ((x#matrix_to_atom[i, j] = {mat[i, j] @ and([__inDomain(i,int(1..4)),__inDomain(j,int(1..4));int(1..)])})), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
((0 <= sum([mat[i, j],-1;int(1..)]))) -> ((x#matrix_to_atom[i, j] = mat[i, j])) 

--

((0 <= sum([mat[i, j],-1;int(1..)]))) -> ((x#matrix_to_atom[i, j] = mat[i, j])), 
   ~~> index_matrix_to_atom ([("Base", 5000)]) 
((0 <= sum([mat[i, j],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,(i - 1);int(1..)]),product([1,(j - 1);int(1..)]),1;int(1..)])] = mat[i, j])) 

--

product([1,(j - 1);int(1..)]), 
   ~~> reorder_product ([("Base", 8800)]) 
product([(j - 1);int(1..)]) 

--

product([(j - 1);int(1..)]), 
   ~~> remove_unit_vector_products ([("Base", 8800)]) 
(j - 1) 

--

(i - 1), 
   ~~> minus_to_sum ([("Base", 8400)]) 
sum([i,-(1);int(1..)]) 

--

((0 <= sum([mat[i, j],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([i,-(1);int(1..)]);int(1..)]),(j - 1),1;int(1..)])] = mat[i, j])), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
((0 <= sum([mat[i, j],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([i,-1;int(1..)]);int(1..)]),(j - 1),1;int(1..)])] = mat[i, j])) 

--

(j - 1), 
   ~~> minus_to_sum ([("Base", 8400)]) 
sum([j,-(1);int(1..)]) 

--

((0 <= sum([mat[i, j],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([i,-1;int(1..)]);int(1..)]),sum([j,-(1);int(1..)]),1;int(1..)])] = mat[i, j])), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
((0 <= sum([mat[i, j],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([i,-1;int(1..)]);int(1..)]),sum([j,-1;int(1..)]),1;int(1..)])] = mat[i, j])) 

--

sum([product([4,sum([i,-1;int(1..)]);int(1..)]),sum([j,-1;int(1..)]),1;int(1..)]), 
   ~~> normalise_associative_commutative ([("Base", 8900)]) 
sum([product([4,sum([i,-1;int(1..)]);int(1..)]),j,-1,1;int(1..)]) 

--

((0 <= sum([mat[i, j],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([i,-1;int(1..)]);int(1..)]),j,-1,1;int(1..)])] = mat[i, j])), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
((0 <= sum([mat[i, j],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([i,-1;int(1..)]);int(1..)]),j;int(1..)])] = mat[i, j])) 

--

mat, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
[[0,1,0,0;int(1..4)],[0,0,2,0;int(1..4)],[0,3,0,0;int(1..4)],[0,0,0,4;int(1..4)];int(1..4)] 

--

mat, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
[[0,1,0,0;int(1..4)],[0,0,2,0;int(1..4)],[0,3,0,0;int(1..4)],[0,0,0,4;int(1..4)];int(1..4)] 

--

[[0,1,0,0;int(1..4)],[0,0,2,0;int(1..4)],[0,3,0,0;int(1..4)],[0,0,0,4;int(1..4)];int(1..4)][i, j], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[[0,1,0,0;int(1..4)],[0,0,2,0;int(1..4)],[0,3,0,0;int(1..4)],[0,0,0,4;int(1..4)];int(1..)][i, j] 

--

[[0,1,0,0;int(1..4)],[0,0,2,0;int(1..4)],[0,3,0,0;int(1..4)],[0,0,0,4;int(1..4)];int(1..)][i, j], 
   ~~> remove_dimension_from_matrix_indexing ([("Base", 2000)]) 
[[0,1,0,0;int(1..4)][i],[0,0,2,0;int(1..4)][i],[0,3,0,0;int(1..4)][i],[0,0,0,4;int(1..4)][i];int(1..)][j] 

--

[0,1,0,0;int(1..4)][i], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[0,1,0,0;int(1..)][i] 

--

[0,0,2,0;int(1..4)][i], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[0,0,2,0;int(1..)][i] 

--

[0,3,0,0;int(1..4)][i], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[0,3,0,0;int(1..)][i] 

--

[0,0,0,4;int(1..4)][i], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[0,0,0,4;int(1..)][i] 

--

[[0,1,0,0;int(1..4)],[0,0,2,0;int(1..4)],[0,3,0,0;int(1..4)],[0,0,0,4;int(1..4)];int(1..4)][i, j], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[[0,1,0,0;int(1..4)],[0,0,2,0;int(1..4)],[0,3,0,0;int(1..4)],[0,0,0,4;int(1..4)];int(1..)][i, j] 

--

[[0,1,0,0;int(1..4)],[0,0,2,0;int(1..4)],[0,3,0,0;int(1..4)],[0,0,0,4;int(1..4)];int(1..)][i, j], 
   ~~> remove_dimension_from_matrix_indexing ([("Base", 2000)]) 
[[0,1,0,0;int(1..4)][i],[0,0,2,0;int(1..4)][i],[0,3,0,0;int(1..4)][i],[0,0,0,4;int(1..4)][i];int(1..)][j] 

--

[0,1,0,0;int(1..4)][i], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[0,1,0,0;int(1..)][i] 

--

[0,0,2,0;int(1..4)][i], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[0,0,2,0;int(1..)][i] 

--

[0,3,0,0;int(1..4)][i], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[0,3,0,0;int(1..)][i] 

--

[0,0,0,4;int(1..4)][i], 
   ~~> matrix_to_list ([("Base", 2000)]) 
[0,0,0,4;int(1..)][i] 

--

Final model:

given i: int(1..4)
given j: int(1..4)

such that

((0 <= sum([[[0,1,0,0;int(1..)][i],[0,0,2,0;int(1..)][i],[0,3,0,0;int(1..)][i],[0,0,0,4;int(1..)][i];int(1..)][j],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([i,-1;int(1..)]);int(1..)]),j;int(1..)])] = [[0,1,0,0;int(1..)][i],[0,0,2,0;int(1..)][i],[0,3,0,0;int(1..)][i],[0,0,0,4;int(1..)][i];int(1..)][j]))

and([given i: int(1..4)
given j: int(1..4)

such that

((0 < mat[i, j])) -> ((x#matrix_to_atom[i, j] = mat[i, j]))
 | i: int(1..4),j: int(1..4),__0: bool,__1: bool,__2: bool,]), 
   ~~> expand_comprehension_ac ([("Better_AC_Comprehension_Expansion", 2001)]) 
and([((0 <= sum([[[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][1],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([1,-1;int(1..)]);int(1..)]),1;int(1..)])] = [[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][1])),((0 <= sum([[[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][2],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([1,-1;int(1..)]);int(1..)]),2;int(1..)])] = [[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][2])),((0 <= sum([[[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][3],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([1,-1;int(1..)]);int(1..)]),3;int(1..)])] = [[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][3])),((0 <= sum([[[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][4],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([1,-1;int(1..)]);int(1..)]),4;int(1..)])] = [[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][4])),((0 <= sum([[[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][1],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([2,-1;int(1..)]);int(1..)]),1;int(1..)])] = [[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][1])),((0 <= sum([[[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][2],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([2,-1;int(1..)]);int(1..)]),2;int(1..)])] = [[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][2])),((0 <= sum([[[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][3],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([2,-1;int(1..)]);int(1..)]),3;int(1..)])] = [[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][3])),((0 <= sum([[[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][4],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([2,-1;int(1..)]);int(1..)]),4;int(1..)])] = [[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][4])),((0 <= sum([[[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][1],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([3,-1;int(1..)]);int(1..)]),1;int(1..)])] = [[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][1])),((0 <= sum([[[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][2],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([3,-1;int(1..)]);int(1..)]),2;int(1..)])] = [[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][2])),((0 <= sum([[[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][3],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([3,-1;int(1..)]);int(1..)]),3;int(1..)])] = [[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][3])),((0 <= sum([[[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][4],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([3,-1;int(1..)]);int(1..)]),4;int(1..)])] = [[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][4])),((0 <= sum([[[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][1],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([4,-1;int(1..)]);int(1..)]),1;int(1..)])] = [[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][1])),((0 <= sum([[[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][2],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([4,-1;int(1..)]);int(1..)]),2;int(1..)])] = [[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][2])),((0 <= sum([[[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][3],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([4,-1;int(1..)]);int(1..)]),3;int(1..)])] = [[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][3])),((0 <= sum([[[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][4],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([4,-1;int(1..)]);int(1..)]),4;int(1..)])] = [[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][4]));int(1..)]) 

--

and([((0 <= sum([[[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][1],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([1,-1;int(1..)]);int(1..)]),1;int(1..)])] = [[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][1])),((0 <= sum([[[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][2],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([1,-1;int(1..)]);int(1..)]),2;int(1..)])] = [[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][2])),((0 <= sum([[[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][3],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([1,-1;int(1..)]);int(1..)]),3;int(1..)])] = [[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][3])),((0 <= sum([[[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][4],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([1,-1;int(1..)]);int(1..)]),4;int(1..)])] = [[0,1,0,0;int(1..)][1],[0,0,2,0;int(1..)][1],[0,3,0,0;int(1..)][1],[0,0,0,4;int(1..)][1];int(1..)][4])),((0 <= sum([[[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][1],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([2,-1;int(1..)]);int(1..)]),1;int(1..)])] = [[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][1])),((0 <= sum([[[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][2],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([2,-1;int(1..)]);int(1..)]),2;int(1..)])] = [[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][2])),((0 <= sum([[[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][3],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([2,-1;int(1..)]);int(1..)]),3;int(1..)])] = [[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][3])),((0 <= sum([[[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][4],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([2,-1;int(1..)]);int(1..)]),4;int(1..)])] = [[0,1,0,0;int(1..)][2],[0,0,2,0;int(1..)][2],[0,3,0,0;int(1..)][2],[0,0,0,4;int(1..)][2];int(1..)][4])),((0 <= sum([[[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][1],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([3,-1;int(1..)]);int(1..)]),1;int(1..)])] = [[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][1])),((0 <= sum([[[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][2],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([3,-1;int(1..)]);int(1..)]),2;int(1..)])] = [[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][2])),((0 <= sum([[[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][3],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([3,-1;int(1..)]);int(1..)]),3;int(1..)])] = [[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][3])),((0 <= sum([[[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][4],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([3,-1;int(1..)]);int(1..)]),4;int(1..)])] = [[0,1,0,0;int(1..)][3],[0,0,2,0;int(1..)][3],[0,3,0,0;int(1..)][3],[0,0,0,4;int(1..)][3];int(1..)][4])),((0 <= sum([[[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][1],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([4,-1;int(1..)]);int(1..)]),1;int(1..)])] = [[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][1])),((0 <= sum([[[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][2],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([4,-1;int(1..)]);int(1..)]),2;int(1..)])] = [[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][2])),((0 <= sum([[[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][3],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([4,-1;int(1..)]);int(1..)]),3;int(1..)])] = [[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][3])),((0 <= sum([[[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][4],-1;int(1..)]))) -> (([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4,x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4,x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4,x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)][sum([product([4,sum([4,-1;int(1..)]);int(1..)]),4;int(1..)])] = [[0,1,0,0;int(1..)][4],[0,0,2,0;int(1..)][4],[0,3,0,0;int(1..)][4],[0,0,0,4;int(1..)][4];int(1..)][4]));int(1..)]),
and([given i: int(1..4)

such that

and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..2)])
 | i: int(1..4),]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(x#matrix_to_atom_2_1 = 1),
(x#matrix_to_atom_2_3 = 3),
(x#matrix_to_atom_3_2 = 2),
(x#matrix_to_atom_4_4 = 4),
and([given i: int(1..4)

such that

and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..2)])
 | i: int(1..4),]) 

--

Model before rewriting:

find i: int(1..4)
find __0: bool
find __1: bool

such that

(true != and([__0,__1;int(1..2)]))

--

(true != and([__0,__1;int(1..2)])), 
   ~~> flatten_generic ([("Minion", 4200)]) 
(true != __2) 
new variables:
  find __2: bool
new constraints:
  __2 =aux and([__0,__1;int(1..2)])
--

__2 =aux and([__0,__1;int(1..2)]), 
   ~~> bool_eq_to_reify ([("Minion", 4400)]) 
Reify(and([__0,__1;int(1..2)]), __2) 

--

and([__0,__1;int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
and([__0,__1;int(1..)]) 

--

Final model:

find i: int(1..4)
find __0: bool
find __1: bool
find __2: bool

such that

(true != __2),
Reify(and([__0,__1;int(1..)]), __2)

Model before rewriting:

given i: int(1..4)

such that

and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..2)])

--

x#matrix_to_atom[i,..], 
   ~~> slice_to_bubble ([("Bubble", 6000)]) 
{x#matrix_to_atom[i,..] @ and([__inDomain(i,int(1..4));int(1..)])} 

--

and([allDiff({x#matrix_to_atom[i,..] @ and([__inDomain(i,int(1..4));int(1..)])}),allDiff(x#matrix_to_atom[..,i]);int(1..2)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..2)]) 

--

x#matrix_to_atom[..,i], 
   ~~> slice_to_bubble ([("Bubble", 6000)]) 
{x#matrix_to_atom[..,i] @ and([__inDomain(i,int(1..4));int(1..)])} 

--

and([allDiff(x#matrix_to_atom[i,..]),allDiff({x#matrix_to_atom[..,i] @ and([__inDomain(i,int(1..4));int(1..)])});int(1..2)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..2)]) 

--

and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..2)]), 
   ~~> matrix_to_list ([("Base", 2000)]) 
and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..)]) 

--

and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
allDiff(x#matrix_to_atom[i,..]),
allDiff(x#matrix_to_atom[..,i]) 

--

Final model:

given i: int(1..4)

such that

allDiff(x#matrix_to_atom[i,..]),
allDiff(x#matrix_to_atom[..,i])

and([given i: int(1..4)

such that

and([allDiff(x#matrix_to_atom[i,..]),allDiff(x#matrix_to_atom[..,i]);int(1..2)])
 | i: int(1..4),__0: bool,__1: bool,__2: bool,]), 
   ~~> expand_comprehension_ac ([("Better_AC_Comprehension_Expansion", 2001)]) 
and([and([allDiff(x#matrix_to_atom[1,..]),allDiff(x#matrix_to_atom[..,1]);int(1..)]),and([allDiff(x#matrix_to_atom[2,..]),allDiff(x#matrix_to_atom[..,2]);int(1..)]),and([allDiff(x#matrix_to_atom[3,..]),allDiff(x#matrix_to_atom[..,3]);int(1..)]),and([allDiff(x#matrix_to_atom[4,..]),allDiff(x#matrix_to_atom[..,4]);int(1..)]);int(1..)]) 

--

(x#matrix_to_atom_2_1 = 1),
(x#matrix_to_atom_2_3 = 3),
(x#matrix_to_atom_3_2 = 2),
(x#matrix_to_atom_4_4 = 4),
and([and([allDiff(x#matrix_to_atom[1,..]),allDiff(x#matrix_to_atom[..,1]);int(1..)]),and([allDiff(x#matrix_to_atom[2,..]),allDiff(x#matrix_to_atom[..,2]);int(1..)]),and([allDiff(x#matrix_to_atom[3,..]),allDiff(x#matrix_to_atom[..,3]);int(1..)]),and([allDiff(x#matrix_to_atom[4,..]),allDiff(x#matrix_to_atom[..,4]);int(1..)]);int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(x#matrix_to_atom_2_1 = 1),
(x#matrix_to_atom_2_3 = 3),
(x#matrix_to_atom_3_2 = 2),
(x#matrix_to_atom_4_4 = 4),
and([allDiff(x#matrix_to_atom[1,..]),allDiff(x#matrix_to_atom[..,1]);int(1..)]),
and([allDiff(x#matrix_to_atom[2,..]),allDiff(x#matrix_to_atom[..,2]);int(1..)]),
and([allDiff(x#matrix_to_atom[3,..]),allDiff(x#matrix_to_atom[..,3]);int(1..)]),
and([allDiff(x#matrix_to_atom[4,..]),allDiff(x#matrix_to_atom[..,4]);int(1..)]) 

--

(x#matrix_to_atom_2_1 = 1),
(x#matrix_to_atom_2_3 = 3),
(x#matrix_to_atom_3_2 = 2),
(x#matrix_to_atom_4_4 = 4),
and([allDiff(x#matrix_to_atom[1,..]),allDiff(x#matrix_to_atom[..,1]);int(1..)]),
and([allDiff(x#matrix_to_atom[2,..]),allDiff(x#matrix_to_atom[..,2]);int(1..)]),
and([allDiff(x#matrix_to_atom[3,..]),allDiff(x#matrix_to_atom[..,3]);int(1..)]),
and([allDiff(x#matrix_to_atom[4,..]),allDiff(x#matrix_to_atom[..,4]);int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(x#matrix_to_atom_2_1 = 1),
(x#matrix_to_atom_2_3 = 3),
(x#matrix_to_atom_3_2 = 2),
(x#matrix_to_atom_4_4 = 4),
allDiff(x#matrix_to_atom[1,..]),
allDiff(x#matrix_to_atom[..,1]),
allDiff(x#matrix_to_atom[2,..]),
allDiff(x#matrix_to_atom[..,2]),
allDiff(x#matrix_to_atom[3,..]),
allDiff(x#matrix_to_atom[..,3]),
allDiff(x#matrix_to_atom[4,..]),
allDiff(x#matrix_to_atom[..,4]) 

--

x#matrix_to_atom[1,..], 
   ~~> slice_matrix_to_atom ([("Base", 2000)]) 
[x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4;int(1..)] 

--

allDiff([x#matrix_to_atom_1_1,x#matrix_to_atom_1_2,x#matrix_to_atom_1_3,x#matrix_to_atom_1_4;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([x#matrix_to_atom_1_1, x#matrix_to_atom_1_2, x#matrix_to_atom_1_3, x#matrix_to_atom_1_4]) 

--

x#matrix_to_atom[..,1], 
   ~~> slice_matrix_to_atom ([("Base", 2000)]) 
[x#matrix_to_atom_1_1,x#matrix_to_atom_2_1,x#matrix_to_atom_3_1,x#matrix_to_atom_4_1;int(1..)] 

--

allDiff([x#matrix_to_atom_1_1,x#matrix_to_atom_2_1,x#matrix_to_atom_3_1,x#matrix_to_atom_4_1;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([x#matrix_to_atom_1_1, x#matrix_to_atom_2_1, x#matrix_to_atom_3_1, x#matrix_to_atom_4_1]) 

--

x#matrix_to_atom[2,..], 
   ~~> slice_matrix_to_atom ([("Base", 2000)]) 
[x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4;int(1..)] 

--

allDiff([x#matrix_to_atom_2_1,x#matrix_to_atom_2_2,x#matrix_to_atom_2_3,x#matrix_to_atom_2_4;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([x#matrix_to_atom_2_1, x#matrix_to_atom_2_2, x#matrix_to_atom_2_3, x#matrix_to_atom_2_4]) 

--

x#matrix_to_atom[..,2], 
   ~~> slice_matrix_to_atom ([("Base", 2000)]) 
[x#matrix_to_atom_1_2,x#matrix_to_atom_2_2,x#matrix_to_atom_3_2,x#matrix_to_atom_4_2;int(1..)] 

--

allDiff([x#matrix_to_atom_1_2,x#matrix_to_atom_2_2,x#matrix_to_atom_3_2,x#matrix_to_atom_4_2;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([x#matrix_to_atom_1_2, x#matrix_to_atom_2_2, x#matrix_to_atom_3_2, x#matrix_to_atom_4_2]) 

--

x#matrix_to_atom[3,..], 
   ~~> slice_matrix_to_atom ([("Base", 2000)]) 
[x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4;int(1..)] 

--

allDiff([x#matrix_to_atom_3_1,x#matrix_to_atom_3_2,x#matrix_to_atom_3_3,x#matrix_to_atom_3_4;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([x#matrix_to_atom_3_1, x#matrix_to_atom_3_2, x#matrix_to_atom_3_3, x#matrix_to_atom_3_4]) 

--

x#matrix_to_atom[..,3], 
   ~~> slice_matrix_to_atom ([("Base", 2000)]) 
[x#matrix_to_atom_1_3,x#matrix_to_atom_2_3,x#matrix_to_atom_3_3,x#matrix_to_atom_4_3;int(1..)] 

--

allDiff([x#matrix_to_atom_1_3,x#matrix_to_atom_2_3,x#matrix_to_atom_3_3,x#matrix_to_atom_4_3;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([x#matrix_to_atom_1_3, x#matrix_to_atom_2_3, x#matrix_to_atom_3_3, x#matrix_to_atom_4_3]) 

--

x#matrix_to_atom[4,..], 
   ~~> slice_matrix_to_atom ([("Base", 2000)]) 
[x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)] 

--

allDiff([x#matrix_to_atom_4_1,x#matrix_to_atom_4_2,x#matrix_to_atom_4_3,x#matrix_to_atom_4_4;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([x#matrix_to_atom_4_1, x#matrix_to_atom_4_2, x#matrix_to_atom_4_3, x#matrix_to_atom_4_4]) 

--

x#matrix_to_atom[..,4], 
   ~~> slice_matrix_to_atom ([("Base", 2000)]) 
[x#matrix_to_atom_1_4,x#matrix_to_atom_2_4,x#matrix_to_atom_3_4,x#matrix_to_atom_4_4;int(1..)] 

--

allDiff([x#matrix_to_atom_1_4,x#matrix_to_atom_2_4,x#matrix_to_atom_3_4,x#matrix_to_atom_4_4;int(1..)]), 
   ~~> introduce_flat_alldiff ([("Minion", 4200)]) 
__flat_alldiff([x#matrix_to_atom_1_4, x#matrix_to_atom_2_4, x#matrix_to_atom_3_4, x#matrix_to_atom_4_4]) 

--

Final model:

letting mat be [[0,1,0,0;int(1..4)],[0,0,2,0;int(1..4)],[0,3,0,0;int(1..4)],[0,0,0,4;int(1..4)];int(1..4)]
letting n be 4
find x: matrix indexed by [[int(1..4), int(1..4)]] of int(1..4)
find x#matrix_to_atom_1_1: int(1..4)
find x#matrix_to_atom_1_2: int(1..4)
find x#matrix_to_atom_1_3: int(1..4)
find x#matrix_to_atom_1_4: int(1..4)
find x#matrix_to_atom_2_1: int(1..4)
find x#matrix_to_atom_2_2: int(1..4)
find x#matrix_to_atom_2_3: int(1..4)
find x#matrix_to_atom_2_4: int(1..4)
find x#matrix_to_atom_3_1: int(1..4)
find x#matrix_to_atom_3_2: int(1..4)
find x#matrix_to_atom_3_3: int(1..4)
find x#matrix_to_atom_3_4: int(1..4)
find x#matrix_to_atom_4_1: int(1..4)
find x#matrix_to_atom_4_2: int(1..4)
find x#matrix_to_atom_4_3: int(1..4)
find x#matrix_to_atom_4_4: int(1..4)

such that

(x#matrix_to_atom_2_1 = 1),
(x#matrix_to_atom_2_3 = 3),
(x#matrix_to_atom_3_2 = 2),
(x#matrix_to_atom_4_4 = 4),
__flat_alldiff([x#matrix_to_atom_1_1, x#matrix_to_atom_1_2, x#matrix_to_atom_1_3, x#matrix_to_atom_1_4]),
__flat_alldiff([x#matrix_to_atom_1_1, x#matrix_to_atom_2_1, x#matrix_to_atom_3_1, x#matrix_to_atom_4_1]),
__flat_alldiff([x#matrix_to_atom_2_1, x#matrix_to_atom_2_2, x#matrix_to_atom_2_3, x#matrix_to_atom_2_4]),
__flat_alldiff([x#matrix_to_atom_1_2, x#matrix_to_atom_2_2, x#matrix_to_atom_3_2, x#matrix_to_atom_4_2]),
__flat_alldiff([x#matrix_to_atom_3_1, x#matrix_to_atom_3_2, x#matrix_to_atom_3_3, x#matrix_to_atom_3_4]),
__flat_alldiff([x#matrix_to_atom_1_3, x#matrix_to_atom_2_3, x#matrix_to_atom_3_3, x#matrix_to_atom_4_3]),
__flat_alldiff([x#matrix_to_atom_4_1, x#matrix_to_atom_4_2, x#matrix_to_atom_4_3, x#matrix_to_atom_4_4]),
__flat_alldiff([x#matrix_to_atom_1_4, x#matrix_to_atom_2_4, x#matrix_to_atom_3_4, x#matrix_to_atom_4_4])

