Model before rewriting:

letting a be {2,3}
letting b be {1,2}
find c: set of (int(1..3))

such that

(c = (a intersect b))

--

(c = (a intersect b)), 
   ~~> eq_to_subset_eq ([("Base", 8800)]) 
and([(c subsetEq (a intersect b)),((a intersect b) subsetEq c);int(1..)]) 

--

and([(c subsetEq (a intersect b)),((a intersect b) subsetEq c);int(1..)]), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(c subsetEq (a intersect b)),
((a intersect b) subsetEq c) 

--

(c subsetEq (a intersect b)), 
   ~~> subseteq_intersect ([("Base", 8700)]) 
and([(c subsetEq a),(c subsetEq b);int(1..)]) 

--

and([(c subsetEq a),(c subsetEq b);int(1..)]),
((a intersect b) subsetEq c), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(c subsetEq a),
(c subsetEq b),
((a intersect b) subsetEq c) 

--

a, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{2,3} 

--

(c subsetEq {2,3}),
(c subsetEq b),
((a intersect b) subsetEq c), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(c subsetEq Set([Int(2), Int(3)])),
(c subsetEq b),
((a intersect b) subsetEq c) 

--

b, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{1,2} 

--

(c subsetEq Set([Int(2), Int(3)])),
(c subsetEq {1,2}),
((a intersect b) subsetEq c), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(c subsetEq Set([Int(2), Int(3)])),
(c subsetEq Set([Int(1), Int(2)])),
((a intersect b) subsetEq c) 

--

a, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{2,3} 

--

(c subsetEq Set([Int(2), Int(3)])),
(c subsetEq Set([Int(1), Int(2)])),
(({2,3} intersect b) subsetEq c), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(c subsetEq Set([Int(2), Int(3)])),
(c subsetEq Set([Int(1), Int(2)])),
((Set([Int(2), Int(3)]) intersect b) subsetEq c) 

--

b, 
   ~~> substitute_value_lettings ([("Base", 5000)]) 
{1,2} 

--

(c subsetEq Set([Int(2), Int(3)])),
(c subsetEq Set([Int(1), Int(2)])),
((Set([Int(2), Int(3)]) intersect {1,2}) subsetEq c), 
   ~~> constant_evaluator ([("Constant", 9001)]) 
(c subsetEq Set([Int(2), Int(3)])),
(c subsetEq Set([Int(1), Int(2)])),
(Set([Int(2)]) subsetEq c) 

--

Final model:

letting a be {2,3}
letting b be {1,2}
find c: set of (int(1..3))

such that

(c subsetEq Set([Int(2), Int(3)])),
(c subsetEq Set([Int(1), Int(2)])),
(Set([Int(2)]) subsetEq c)

