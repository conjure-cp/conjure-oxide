Model before rewriting:

find a: int(-30..30)

such that

(-(a) = 6)

clauses:



--

a, 
   ~~> integer_decision_representation ([("CNF", 9500)]) 
CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) 
new variables:
  find a#int_to_atom_00: bool
  find a#int_to_atom_01: bool
  find a#int_to_atom_02: bool
  find a#int_to_atom_03: bool
  find a#int_to_atom_04: bool
  find a#int_to_atom_05: bool
  find a#int_to_atom_06: bool
  find a#int_to_atom_07: bool
new constraints:
  or([and([(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) >= -30),(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) <= 30);int(1..)]);int(1..)])
--

6, 
   ~~> literal_cnf_int ([("CNF", 9500)]) 
CnfInt([false,true,true,false,false,false,false,false;int(1..)]) 

--

-30, 
   ~~> literal_cnf_int ([("CNF", 9500)]) 
CnfInt([false,true,false,false,false,true,true,true;int(1..)]) 

--

30, 
   ~~> literal_cnf_int ([("CNF", 9500)]) 
CnfInt([false,true,true,true,true,false,false,false;int(1..)]) 

--

or([and([(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) >= CnfInt([false,true,false,false,false,true,true,true;int(1..)])),(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) <= CnfInt([false,true,true,true,true,false,false,false;int(1..)]));int(1..)]);int(1..)]), 
   ~~> remove_unit_vector_or ([("Base", 8800)]) 
and([(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) >= CnfInt([false,true,false,false,false,true,true,true;int(1..)])),(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) <= CnfInt([false,true,true,true,true,false,false,false;int(1..)]));int(1..)]) 

--

(-(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)])) = CnfInt([false,true,true,false,false,false,false,false;int(1..)])),
and([(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) >= CnfInt([false,true,false,false,false,true,true,true;int(1..)])),(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) <= CnfInt([false,true,true,true,true,false,false,false;int(1..)]));int(1..)]), 
   ~~> partial_evaluator ([("Base", 9000)]) 
(-(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)])) = CnfInt([false,true,true,false,false,false,false,false;int(1..)])),
(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) >= CnfInt([false,true,false,false,false,true,true,true;int(1..)])),
(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) <= CnfInt([false,true,true,true,true,false,false,false;int(1..)])) 

--

-(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)])), 
   ~~> cnf_int_neg ([("CNF", 4100)]) 
CnfInt([__8,__9,__11,__13,__15,__17,__19,__21;int(1..)]) 
new variables:
  find __0: bool
  find __1: bool
  find __2: bool
  find __3: bool
  find __4: bool
  find __5: bool
  find __6: bool
  find __7: bool
  find __8: bool
  find __9: bool
  find __10: bool
  find __11: bool
  find __12: bool
  find __13: bool
  find __14: bool
  find __15: bool
  find __16: bool
  find __17: bool
  find __18: bool
  find __19: bool
  find __20: bool
  find __21: bool
  find __22: bool
new clauses:
  Clause([Not(a#int_to_atom_00),Not(__0);int(1..)])
  Clause([a#int_to_atom_00,__0;int(1..)])
  Clause([Not(a#int_to_atom_01),Not(__1);int(1..)])
  Clause([a#int_to_atom_01,__1;int(1..)])
  Clause([Not(a#int_to_atom_02),Not(__2);int(1..)])
  Clause([a#int_to_atom_02,__2;int(1..)])
  Clause([Not(a#int_to_atom_03),Not(__3);int(1..)])
  Clause([a#int_to_atom_03,__3;int(1..)])
  Clause([Not(a#int_to_atom_04),Not(__4);int(1..)])
  Clause([a#int_to_atom_04,__4;int(1..)])
  Clause([Not(a#int_to_atom_05),Not(__5);int(1..)])
  Clause([a#int_to_atom_05,__5;int(1..)])
  Clause([Not(a#int_to_atom_06),Not(__6);int(1..)])
  Clause([a#int_to_atom_06,__6;int(1..)])
  Clause([Not(a#int_to_atom_07),Not(__7);int(1..)])
  Clause([a#int_to_atom_07,__7;int(1..)])
  Clause([Not(__0),Not(__8);int(1..)])
  Clause([__0,__8;int(1..)])
  Clause([Not(__0),Not(__1),Not(__9);int(1..)])
  Clause([__0,__1,Not(__9);int(1..)])
  Clause([__0,Not(__1),__9;int(1..)])
  Clause([Not(__0),__1,__9;int(1..)])
  Clause([Not(__10),__0;int(1..)])
  Clause([Not(__10),__1;int(1..)])
  Clause([__10,Not(__0),Not(__1);int(1..)])
  Clause([Not(__10),Not(__2),Not(__11);int(1..)])
  Clause([__10,__2,Not(__11);int(1..)])
  Clause([__10,Not(__2),__11;int(1..)])
  Clause([Not(__10),__2,__11;int(1..)])
  Clause([Not(__12),__10;int(1..)])
  Clause([Not(__12),__2;int(1..)])
  Clause([__12,Not(__10),Not(__2);int(1..)])
  Clause([Not(__12),Not(__3),Not(__13);int(1..)])
  Clause([__12,__3,Not(__13);int(1..)])
  Clause([__12,Not(__3),__13;int(1..)])
  Clause([Not(__12),__3,__13;int(1..)])
  Clause([Not(__14),__12;int(1..)])
  Clause([Not(__14),__3;int(1..)])
  Clause([__14,Not(__12),Not(__3);int(1..)])
  Clause([Not(__14),Not(__4),Not(__15);int(1..)])
  Clause([__14,__4,Not(__15);int(1..)])
  Clause([__14,Not(__4),__15;int(1..)])
  Clause([Not(__14),__4,__15;int(1..)])
  Clause([Not(__16),__14;int(1..)])
  Clause([Not(__16),__4;int(1..)])
  Clause([__16,Not(__14),Not(__4);int(1..)])
  Clause([Not(__16),Not(__5),Not(__17);int(1..)])
  Clause([__16,__5,Not(__17);int(1..)])
  Clause([__16,Not(__5),__17;int(1..)])
  Clause([Not(__16),__5,__17;int(1..)])
  Clause([Not(__18),__16;int(1..)])
  Clause([Not(__18),__5;int(1..)])
  Clause([__18,Not(__16),Not(__5);int(1..)])
  Clause([Not(__18),Not(__6),Not(__19);int(1..)])
  Clause([__18,__6,Not(__19);int(1..)])
  Clause([__18,Not(__6),__19;int(1..)])
  Clause([Not(__18),__6,__19;int(1..)])
  Clause([Not(__20),__18;int(1..)])
  Clause([Not(__20),__6;int(1..)])
  Clause([__20,Not(__18),Not(__6);int(1..)])
  Clause([Not(__20),Not(__7),Not(__21);int(1..)])
  Clause([__20,__7,Not(__21);int(1..)])
  Clause([__20,Not(__7),__21;int(1..)])
  Clause([Not(__20),__7,__21;int(1..)])
  Clause([Not(__22),__20;int(1..)])
  Clause([Not(__22),__7;int(1..)])
  Clause([__22,Not(__20),Not(__7);int(1..)])
--

(CnfInt([__8,__9,__11,__13,__15,__17,__19,__21;int(1..)]) = CnfInt([false,true,true,false,false,false,false,false;int(1..)])), 
   ~~> cnf_int_eq ([("CNF", 9100)]) 
__38 
new variables:
  find __23: bool
  find __24: bool
  find __25: bool
  find __26: bool
  find __27: bool
  find __28: bool
  find __29: bool
  find __30: bool
  find __31: bool
  find __32: bool
  find __33: bool
  find __34: bool
  find __35: bool
  find __36: bool
  find __37: bool
  find __38: bool
new clauses:
  Clause([__8,__23;int(1..)])
  Clause([Not(__8),Not(__23);int(1..)])
  Clause([Not(__24),__23;int(1..)])
  Clause([__24,Not(__23);int(1..)])
  Clause([Not(__9),__25;int(1..)])
  Clause([__9,Not(__25);int(1..)])
  Clause([Not(__26),__25;int(1..)])
  Clause([Not(__26),__24;int(1..)])
  Clause([__26,Not(__25),Not(__24);int(1..)])
  Clause([Not(__11),__27;int(1..)])
  Clause([__11,Not(__27);int(1..)])
  Clause([Not(__28),__27;int(1..)])
  Clause([Not(__28),__26;int(1..)])
  Clause([__28,Not(__27),Not(__26);int(1..)])
  Clause([__13,__29;int(1..)])
  Clause([Not(__13),Not(__29);int(1..)])
  Clause([Not(__30),__29;int(1..)])
  Clause([Not(__30),__28;int(1..)])
  Clause([__30,Not(__29),Not(__28);int(1..)])
  Clause([__15,__31;int(1..)])
  Clause([Not(__15),Not(__31);int(1..)])
  Clause([Not(__32),__31;int(1..)])
  Clause([Not(__32),__30;int(1..)])
  Clause([__32,Not(__31),Not(__30);int(1..)])
  Clause([__17,__33;int(1..)])
  Clause([Not(__17),Not(__33);int(1..)])
  Clause([Not(__34),__33;int(1..)])
  Clause([Not(__34),__32;int(1..)])
  Clause([__34,Not(__33),Not(__32);int(1..)])
  Clause([__19,__35;int(1..)])
  Clause([Not(__19),Not(__35);int(1..)])
  Clause([Not(__36),__35;int(1..)])
  Clause([Not(__36),__34;int(1..)])
  Clause([__36,Not(__35),Not(__34);int(1..)])
  Clause([__21,__37;int(1..)])
  Clause([Not(__21),Not(__37);int(1..)])
  Clause([Not(__38),__37;int(1..)])
  Clause([Not(__38),__36;int(1..)])
  Clause([__38,Not(__37),Not(__36);int(1..)])
--

(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) >= CnfInt([false,true,false,false,false,true,true,true;int(1..)])), 
   ~~> cnf_int_ineq ([("CNF", 4100)]) 
__74 
new variables:
  find __39: bool
  find __40: bool
  find __41: bool
  find __42: bool
  find __43: bool
  find __44: bool
  find __45: bool
  find __46: bool
  find __47: bool
  find __48: bool
  find __49: bool
  find __50: bool
  find __51: bool
  find __52: bool
  find __53: bool
  find __54: bool
  find __55: bool
  find __56: bool
  find __57: bool
  find __58: bool
  find __59: bool
  find __60: bool
  find __61: bool
  find __62: bool
  find __63: bool
  find __64: bool
  find __65: bool
  find __66: bool
  find __67: bool
  find __68: bool
  find __69: bool
  find __70: bool
  find __71: bool
  find __72: bool
  find __73: bool
  find __74: bool
new clauses:
  Clause([__39;int(1..)])
  Clause([__39,Not(a#int_to_atom_00);int(1..)])
  Clause([Not(__40);int(1..)])
  Clause([Not(__41),a#int_to_atom_01;int(1..)])
  Clause([Not(__41),__40;int(1..)])
  Clause([__41,Not(a#int_to_atom_01),Not(__40);int(1..)])
  Clause([Not(a#int_to_atom_01),__42;int(1..)])
  Clause([a#int_to_atom_01,Not(__42);int(1..)])
  Clause([Not(__43),__42;int(1..)])
  Clause([Not(__43),__39;int(1..)])
  Clause([__43,Not(__42),Not(__39);int(1..)])
  Clause([Not(__41),__44;int(1..)])
  Clause([Not(__43),__44;int(1..)])
  Clause([Not(__44),__41,__43;int(1..)])
  Clause([__45;int(1..)])
  Clause([Not(__46),a#int_to_atom_02;int(1..)])
  Clause([Not(__46),__45;int(1..)])
  Clause([__46,Not(a#int_to_atom_02),Not(__45);int(1..)])
  Clause([a#int_to_atom_02,__47;int(1..)])
  Clause([Not(a#int_to_atom_02),Not(__47);int(1..)])
  Clause([Not(__48),__47;int(1..)])
  Clause([Not(__48),__44;int(1..)])
  Clause([__48,Not(__47),Not(__44);int(1..)])
  Clause([Not(__46),__49;int(1..)])
  Clause([Not(__48),__49;int(1..)])
  Clause([Not(__49),__46,__48;int(1..)])
  Clause([__50;int(1..)])
  Clause([Not(__51),a#int_to_atom_03;int(1..)])
  Clause([Not(__51),__50;int(1..)])
  Clause([__51,Not(a#int_to_atom_03),Not(__50);int(1..)])
  Clause([a#int_to_atom_03,__52;int(1..)])
  Clause([Not(a#int_to_atom_03),Not(__52);int(1..)])
  Clause([Not(__53),__52;int(1..)])
  Clause([Not(__53),__49;int(1..)])
  Clause([__53,Not(__52),Not(__49);int(1..)])
  Clause([Not(__51),__54;int(1..)])
  Clause([Not(__53),__54;int(1..)])
  Clause([Not(__54),__51,__53;int(1..)])
  Clause([__55;int(1..)])
  Clause([Not(__56),a#int_to_atom_04;int(1..)])
  Clause([Not(__56),__55;int(1..)])
  Clause([__56,Not(a#int_to_atom_04),Not(__55);int(1..)])
  Clause([a#int_to_atom_04,__57;int(1..)])
  Clause([Not(a#int_to_atom_04),Not(__57);int(1..)])
  Clause([Not(__58),__57;int(1..)])
  Clause([Not(__58),__54;int(1..)])
  Clause([__58,Not(__57),Not(__54);int(1..)])
  Clause([Not(__56),__59;int(1..)])
  Clause([Not(__58),__59;int(1..)])
  Clause([Not(__59),__56,__58;int(1..)])
  Clause([Not(__60);int(1..)])
  Clause([Not(__61),a#int_to_atom_05;int(1..)])
  Clause([Not(__61),__60;int(1..)])
  Clause([__61,Not(a#int_to_atom_05),Not(__60);int(1..)])
  Clause([Not(a#int_to_atom_05),__62;int(1..)])
  Clause([a#int_to_atom_05,Not(__62);int(1..)])
  Clause([Not(__63),__62;int(1..)])
  Clause([Not(__63),__59;int(1..)])
  Clause([__63,Not(__62),Not(__59);int(1..)])
  Clause([Not(__61),__64;int(1..)])
  Clause([Not(__63),__64;int(1..)])
  Clause([Not(__64),__61,__63;int(1..)])
  Clause([Not(__65);int(1..)])
  Clause([Not(__66),a#int_to_atom_06;int(1..)])
  Clause([Not(__66),__65;int(1..)])
  Clause([__66,Not(a#int_to_atom_06),Not(__65);int(1..)])
  Clause([Not(a#int_to_atom_06),__67;int(1..)])
  Clause([a#int_to_atom_06,Not(__67);int(1..)])
  Clause([Not(__68),__67;int(1..)])
  Clause([Not(__68),__64;int(1..)])
  Clause([__68,Not(__67),Not(__64);int(1..)])
  Clause([Not(__66),__69;int(1..)])
  Clause([Not(__68),__69;int(1..)])
  Clause([Not(__69),__66,__68;int(1..)])
  Clause([Not(a#int_to_atom_07),Not(__70);int(1..)])
  Clause([a#int_to_atom_07,__70;int(1..)])
  Clause([Not(__71),__70;int(1..)])
  Clause([__71,Not(__70);int(1..)])
  Clause([Not(a#int_to_atom_07),__72;int(1..)])
  Clause([a#int_to_atom_07,Not(__72);int(1..)])
  Clause([Not(__73),__72;int(1..)])
  Clause([Not(__73),__69;int(1..)])
  Clause([__73,Not(__72),Not(__69);int(1..)])
  Clause([Not(__71),__74;int(1..)])
  Clause([Not(__73),__74;int(1..)])
  Clause([Not(__74),__71,__73;int(1..)])
--

(CnfInt([a#int_to_atom_00,a#int_to_atom_01,a#int_to_atom_02,a#int_to_atom_03,a#int_to_atom_04,a#int_to_atom_05,a#int_to_atom_06,a#int_to_atom_07;int(1..)]) <= CnfInt([false,true,true,true,true,false,false,false;int(1..)])), 
   ~~> cnf_int_ineq ([("CNF", 4100)]) 
__110 
new variables:
  find __75: bool
  find __76: bool
  find __77: bool
  find __78: bool
  find __79: bool
  find __80: bool
  find __81: bool
  find __82: bool
  find __83: bool
  find __84: bool
  find __85: bool
  find __86: bool
  find __87: bool
  find __88: bool
  find __89: bool
  find __90: bool
  find __91: bool
  find __92: bool
  find __93: bool
  find __94: bool
  find __95: bool
  find __96: bool
  find __97: bool
  find __98: bool
  find __99: bool
  find __100: bool
  find __101: bool
  find __102: bool
  find __103: bool
  find __104: bool
  find __105: bool
  find __106: bool
  find __107: bool
  find __108: bool
  find __109: bool
  find __110: bool
new clauses:
  Clause([Not(__75),Not(a#int_to_atom_00);int(1..)])
  Clause([__75,a#int_to_atom_00;int(1..)])
  Clause([Not(a#int_to_atom_01),Not(__76);int(1..)])
  Clause([a#int_to_atom_01,__76;int(1..)])
  Clause([Not(__77),__76;int(1..)])
  Clause([__77,Not(__76);int(1..)])
  Clause([Not(a#int_to_atom_01),__78;int(1..)])
  Clause([a#int_to_atom_01,Not(__78);int(1..)])
  Clause([Not(__79),__78;int(1..)])
  Clause([Not(__79),__75;int(1..)])
  Clause([__79,Not(__78),Not(__75);int(1..)])
  Clause([Not(__77),__80;int(1..)])
  Clause([Not(__79),__80;int(1..)])
  Clause([Not(__80),__77,__79;int(1..)])
  Clause([Not(a#int_to_atom_02),Not(__81);int(1..)])
  Clause([a#int_to_atom_02,__81;int(1..)])
  Clause([Not(__82),__81;int(1..)])
  Clause([__82,Not(__81);int(1..)])
  Clause([Not(a#int_to_atom_02),__83;int(1..)])
  Clause([a#int_to_atom_02,Not(__83);int(1..)])
  Clause([Not(__84),__83;int(1..)])
  Clause([Not(__84),__80;int(1..)])
  Clause([__84,Not(__83),Not(__80);int(1..)])
  Clause([Not(__82),__85;int(1..)])
  Clause([Not(__84),__85;int(1..)])
  Clause([Not(__85),__82,__84;int(1..)])
  Clause([Not(a#int_to_atom_03),Not(__86);int(1..)])
  Clause([a#int_to_atom_03,__86;int(1..)])
  Clause([Not(__87),__86;int(1..)])
  Clause([__87,Not(__86);int(1..)])
  Clause([Not(a#int_to_atom_03),__88;int(1..)])
  Clause([a#int_to_atom_03,Not(__88);int(1..)])
  Clause([Not(__89),__88;int(1..)])
  Clause([Not(__89),__85;int(1..)])
  Clause([__89,Not(__88),Not(__85);int(1..)])
  Clause([Not(__87),__90;int(1..)])
  Clause([Not(__89),__90;int(1..)])
  Clause([Not(__90),__87,__89;int(1..)])
  Clause([Not(a#int_to_atom_04),Not(__91);int(1..)])
  Clause([a#int_to_atom_04,__91;int(1..)])
  Clause([Not(__92),__91;int(1..)])
  Clause([__92,Not(__91);int(1..)])
  Clause([Not(a#int_to_atom_04),__93;int(1..)])
  Clause([a#int_to_atom_04,Not(__93);int(1..)])
  Clause([Not(__94),__93;int(1..)])
  Clause([Not(__94),__90;int(1..)])
  Clause([__94,Not(__93),Not(__90);int(1..)])
  Clause([Not(__92),__95;int(1..)])
  Clause([Not(__94),__95;int(1..)])
  Clause([Not(__95),__92,__94;int(1..)])
  Clause([Not(a#int_to_atom_05),Not(__96);int(1..)])
  Clause([a#int_to_atom_05,__96;int(1..)])
  Clause([Not(__97);int(1..)])
  Clause([Not(__97),__96;int(1..)])
  Clause([a#int_to_atom_05,__98;int(1..)])
  Clause([Not(a#int_to_atom_05),Not(__98);int(1..)])
  Clause([Not(__99),__98;int(1..)])
  Clause([Not(__99),__95;int(1..)])
  Clause([__99,Not(__98),Not(__95);int(1..)])
  Clause([Not(__97),__100;int(1..)])
  Clause([Not(__99),__100;int(1..)])
  Clause([Not(__100),__97,__99;int(1..)])
  Clause([Not(a#int_to_atom_06),Not(__101);int(1..)])
  Clause([a#int_to_atom_06,__101;int(1..)])
  Clause([Not(__102);int(1..)])
  Clause([Not(__102),__101;int(1..)])
  Clause([a#int_to_atom_06,__103;int(1..)])
  Clause([Not(a#int_to_atom_06),Not(__103);int(1..)])
  Clause([Not(__104),__103;int(1..)])
  Clause([Not(__104),__100;int(1..)])
  Clause([__104,Not(__103),Not(__100);int(1..)])
  Clause([Not(__102),__105;int(1..)])
  Clause([Not(__104),__105;int(1..)])
  Clause([Not(__105),__102,__104;int(1..)])
  Clause([__106;int(1..)])
  Clause([Not(__107),__106;int(1..)])
  Clause([Not(__107),a#int_to_atom_07;int(1..)])
  Clause([__107,Not(__106),Not(a#int_to_atom_07);int(1..)])
  Clause([a#int_to_atom_07,__108;int(1..)])
  Clause([Not(a#int_to_atom_07),Not(__108);int(1..)])
  Clause([Not(__109),__108;int(1..)])
  Clause([Not(__109),__105;int(1..)])
  Clause([__109,Not(__108),Not(__105);int(1..)])
  Clause([Not(__107),__110;int(1..)])
  Clause([Not(__109),__110;int(1..)])
  Clause([Not(__110),__107,__109;int(1..)])
--

Final model:

find a: int(-30..30)
find __0: bool
find __1: bool
find __2: bool
find __3: bool
find __4: bool
find __5: bool
find __6: bool
find __7: bool
find __8: bool
find __9: bool
find __10: bool
find __11: bool
find __12: bool
find __13: bool
find __14: bool
find __15: bool
find __16: bool
find __17: bool
find __18: bool
find __19: bool
find __20: bool
find __21: bool
find __22: bool
find __23: bool
find __24: bool
find __25: bool
find __26: bool
find __27: bool
find __28: bool
find __29: bool
find __30: bool
find __31: bool
find __32: bool
find __33: bool
find __34: bool
find __35: bool
find __36: bool
find __37: bool
find __38: bool
find __39: bool
find __40: bool
find __41: bool
find __42: bool
find __43: bool
find __44: bool
find __45: bool
find __46: bool
find __47: bool
find __48: bool
find __49: bool
find __50: bool
find __51: bool
find __52: bool
find __53: bool
find __54: bool
find __55: bool
find __56: bool
find __57: bool
find __58: bool
find __59: bool
find __60: bool
find __61: bool
find __62: bool
find __63: bool
find __64: bool
find __65: bool
find __66: bool
find __67: bool
find __68: bool
find __69: bool
find __70: bool
find __71: bool
find __72: bool
find __73: bool
find __74: bool
find __75: bool
find __76: bool
find __77: bool
find __78: bool
find __79: bool
find __80: bool
find __81: bool
find __82: bool
find __83: bool
find __84: bool
find __85: bool
find __86: bool
find __87: bool
find __88: bool
find __89: bool
find __90: bool
find __91: bool
find __92: bool
find __93: bool
find __94: bool
find __95: bool
find __96: bool
find __97: bool
find __98: bool
find __99: bool
find __100: bool
find __101: bool
find __102: bool
find __103: bool
find __104: bool
find __105: bool
find __106: bool
find __107: bool
find __108: bool
find __109: bool
find __110: bool
find a#int_to_atom_00: bool
find a#int_to_atom_01: bool
find a#int_to_atom_02: bool
find a#int_to_atom_03: bool
find a#int_to_atom_04: bool
find a#int_to_atom_05: bool
find a#int_to_atom_06: bool
find a#int_to_atom_07: bool

such that

__38,
__74,
__110

clauses:

Clause([Not(a#int_to_atom_00),Not(__0);int(1..)]),
Clause([a#int_to_atom_00,__0;int(1..)]),
Clause([Not(a#int_to_atom_01),Not(__1);int(1..)]),
Clause([a#int_to_atom_01,__1;int(1..)]),
Clause([Not(a#int_to_atom_02),Not(__2);int(1..)]),
Clause([a#int_to_atom_02,__2;int(1..)]),
Clause([Not(a#int_to_atom_03),Not(__3);int(1..)]),
Clause([a#int_to_atom_03,__3;int(1..)]),
Clause([Not(a#int_to_atom_04),Not(__4);int(1..)]),
Clause([a#int_to_atom_04,__4;int(1..)]),
Clause([Not(a#int_to_atom_05),Not(__5);int(1..)]),
Clause([a#int_to_atom_05,__5;int(1..)]),
Clause([Not(a#int_to_atom_06),Not(__6);int(1..)]),
Clause([a#int_to_atom_06,__6;int(1..)]),
Clause([Not(a#int_to_atom_07),Not(__7);int(1..)]),
Clause([a#int_to_atom_07,__7;int(1..)]),
Clause([Not(__0),Not(__8);int(1..)]),
Clause([__0,__8;int(1..)]),
Clause([Not(__0),Not(__1),Not(__9);int(1..)]),
Clause([__0,__1,Not(__9);int(1..)]),
Clause([__0,Not(__1),__9;int(1..)]),
Clause([Not(__0),__1,__9;int(1..)]),
Clause([Not(__10),__0;int(1..)]),
Clause([Not(__10),__1;int(1..)]),
Clause([__10,Not(__0),Not(__1);int(1..)]),
Clause([Not(__10),Not(__2),Not(__11);int(1..)]),
Clause([__10,__2,Not(__11);int(1..)]),
Clause([__10,Not(__2),__11;int(1..)]),
Clause([Not(__10),__2,__11;int(1..)]),
Clause([Not(__12),__10;int(1..)]),
Clause([Not(__12),__2;int(1..)]),
Clause([__12,Not(__10),Not(__2);int(1..)]),
Clause([Not(__12),Not(__3),Not(__13);int(1..)]),
Clause([__12,__3,Not(__13);int(1..)]),
Clause([__12,Not(__3),__13;int(1..)]),
Clause([Not(__12),__3,__13;int(1..)]),
Clause([Not(__14),__12;int(1..)]),
Clause([Not(__14),__3;int(1..)]),
Clause([__14,Not(__12),Not(__3);int(1..)]),
Clause([Not(__14),Not(__4),Not(__15);int(1..)]),
Clause([__14,__4,Not(__15);int(1..)]),
Clause([__14,Not(__4),__15;int(1..)]),
Clause([Not(__14),__4,__15;int(1..)]),
Clause([Not(__16),__14;int(1..)]),
Clause([Not(__16),__4;int(1..)]),
Clause([__16,Not(__14),Not(__4);int(1..)]),
Clause([Not(__16),Not(__5),Not(__17);int(1..)]),
Clause([__16,__5,Not(__17);int(1..)]),
Clause([__16,Not(__5),__17;int(1..)]),
Clause([Not(__16),__5,__17;int(1..)]),
Clause([Not(__18),__16;int(1..)]),
Clause([Not(__18),__5;int(1..)]),
Clause([__18,Not(__16),Not(__5);int(1..)]),
Clause([Not(__18),Not(__6),Not(__19);int(1..)]),
Clause([__18,__6,Not(__19);int(1..)]),
Clause([__18,Not(__6),__19;int(1..)]),
Clause([Not(__18),__6,__19;int(1..)]),
Clause([Not(__20),__18;int(1..)]),
Clause([Not(__20),__6;int(1..)]),
Clause([__20,Not(__18),Not(__6);int(1..)]),
Clause([Not(__20),Not(__7),Not(__21);int(1..)]),
Clause([__20,__7,Not(__21);int(1..)]),
Clause([__20,Not(__7),__21;int(1..)]),
Clause([Not(__20),__7,__21;int(1..)]),
Clause([Not(__22),__20;int(1..)]),
Clause([Not(__22),__7;int(1..)]),
Clause([__22,Not(__20),Not(__7);int(1..)]),
Clause([__8,__23;int(1..)]),
Clause([Not(__8),Not(__23);int(1..)]),
Clause([Not(__24),__23;int(1..)]),
Clause([__24,Not(__23);int(1..)]),
Clause([Not(__9),__25;int(1..)]),
Clause([__9,Not(__25);int(1..)]),
Clause([Not(__26),__25;int(1..)]),
Clause([Not(__26),__24;int(1..)]),
Clause([__26,Not(__25),Not(__24);int(1..)]),
Clause([Not(__11),__27;int(1..)]),
Clause([__11,Not(__27);int(1..)]),
Clause([Not(__28),__27;int(1..)]),
Clause([Not(__28),__26;int(1..)]),
Clause([__28,Not(__27),Not(__26);int(1..)]),
Clause([__13,__29;int(1..)]),
Clause([Not(__13),Not(__29);int(1..)]),
Clause([Not(__30),__29;int(1..)]),
Clause([Not(__30),__28;int(1..)]),
Clause([__30,Not(__29),Not(__28);int(1..)]),
Clause([__15,__31;int(1..)]),
Clause([Not(__15),Not(__31);int(1..)]),
Clause([Not(__32),__31;int(1..)]),
Clause([Not(__32),__30;int(1..)]),
Clause([__32,Not(__31),Not(__30);int(1..)]),
Clause([__17,__33;int(1..)]),
Clause([Not(__17),Not(__33);int(1..)]),
Clause([Not(__34),__33;int(1..)]),
Clause([Not(__34),__32;int(1..)]),
Clause([__34,Not(__33),Not(__32);int(1..)]),
Clause([__19,__35;int(1..)]),
Clause([Not(__19),Not(__35);int(1..)]),
Clause([Not(__36),__35;int(1..)]),
Clause([Not(__36),__34;int(1..)]),
Clause([__36,Not(__35),Not(__34);int(1..)]),
Clause([__21,__37;int(1..)]),
Clause([Not(__21),Not(__37);int(1..)]),
Clause([Not(__38),__37;int(1..)]),
Clause([Not(__38),__36;int(1..)]),
Clause([__38,Not(__37),Not(__36);int(1..)]),
Clause([__39;int(1..)]),
Clause([__39,Not(a#int_to_atom_00);int(1..)]),
Clause([Not(__40);int(1..)]),
Clause([Not(__41),a#int_to_atom_01;int(1..)]),
Clause([Not(__41),__40;int(1..)]),
Clause([__41,Not(a#int_to_atom_01),Not(__40);int(1..)]),
Clause([Not(a#int_to_atom_01),__42;int(1..)]),
Clause([a#int_to_atom_01,Not(__42);int(1..)]),
Clause([Not(__43),__42;int(1..)]),
Clause([Not(__43),__39;int(1..)]),
Clause([__43,Not(__42),Not(__39);int(1..)]),
Clause([Not(__41),__44;int(1..)]),
Clause([Not(__43),__44;int(1..)]),
Clause([Not(__44),__41,__43;int(1..)]),
Clause([__45;int(1..)]),
Clause([Not(__46),a#int_to_atom_02;int(1..)]),
Clause([Not(__46),__45;int(1..)]),
Clause([__46,Not(a#int_to_atom_02),Not(__45);int(1..)]),
Clause([a#int_to_atom_02,__47;int(1..)]),
Clause([Not(a#int_to_atom_02),Not(__47);int(1..)]),
Clause([Not(__48),__47;int(1..)]),
Clause([Not(__48),__44;int(1..)]),
Clause([__48,Not(__47),Not(__44);int(1..)]),
Clause([Not(__46),__49;int(1..)]),
Clause([Not(__48),__49;int(1..)]),
Clause([Not(__49),__46,__48;int(1..)]),
Clause([__50;int(1..)]),
Clause([Not(__51),a#int_to_atom_03;int(1..)]),
Clause([Not(__51),__50;int(1..)]),
Clause([__51,Not(a#int_to_atom_03),Not(__50);int(1..)]),
Clause([a#int_to_atom_03,__52;int(1..)]),
Clause([Not(a#int_to_atom_03),Not(__52);int(1..)]),
Clause([Not(__53),__52;int(1..)]),
Clause([Not(__53),__49;int(1..)]),
Clause([__53,Not(__52),Not(__49);int(1..)]),
Clause([Not(__51),__54;int(1..)]),
Clause([Not(__53),__54;int(1..)]),
Clause([Not(__54),__51,__53;int(1..)]),
Clause([__55;int(1..)]),
Clause([Not(__56),a#int_to_atom_04;int(1..)]),
Clause([Not(__56),__55;int(1..)]),
Clause([__56,Not(a#int_to_atom_04),Not(__55);int(1..)]),
Clause([a#int_to_atom_04,__57;int(1..)]),
Clause([Not(a#int_to_atom_04),Not(__57);int(1..)]),
Clause([Not(__58),__57;int(1..)]),
Clause([Not(__58),__54;int(1..)]),
Clause([__58,Not(__57),Not(__54);int(1..)]),
Clause([Not(__56),__59;int(1..)]),
Clause([Not(__58),__59;int(1..)]),
Clause([Not(__59),__56,__58;int(1..)]),
Clause([Not(__60);int(1..)]),
Clause([Not(__61),a#int_to_atom_05;int(1..)]),
Clause([Not(__61),__60;int(1..)]),
Clause([__61,Not(a#int_to_atom_05),Not(__60);int(1..)]),
Clause([Not(a#int_to_atom_05),__62;int(1..)]),
Clause([a#int_to_atom_05,Not(__62);int(1..)]),
Clause([Not(__63),__62;int(1..)]),
Clause([Not(__63),__59;int(1..)]),
Clause([__63,Not(__62),Not(__59);int(1..)]),
Clause([Not(__61),__64;int(1..)]),
Clause([Not(__63),__64;int(1..)]),
Clause([Not(__64),__61,__63;int(1..)]),
Clause([Not(__65);int(1..)]),
Clause([Not(__66),a#int_to_atom_06;int(1..)]),
Clause([Not(__66),__65;int(1..)]),
Clause([__66,Not(a#int_to_atom_06),Not(__65);int(1..)]),
Clause([Not(a#int_to_atom_06),__67;int(1..)]),
Clause([a#int_to_atom_06,Not(__67);int(1..)]),
Clause([Not(__68),__67;int(1..)]),
Clause([Not(__68),__64;int(1..)]),
Clause([__68,Not(__67),Not(__64);int(1..)]),
Clause([Not(__66),__69;int(1..)]),
Clause([Not(__68),__69;int(1..)]),
Clause([Not(__69),__66,__68;int(1..)]),
Clause([Not(a#int_to_atom_07),Not(__70);int(1..)]),
Clause([a#int_to_atom_07,__70;int(1..)]),
Clause([Not(__71),__70;int(1..)]),
Clause([__71,Not(__70);int(1..)]),
Clause([Not(a#int_to_atom_07),__72;int(1..)]),
Clause([a#int_to_atom_07,Not(__72);int(1..)]),
Clause([Not(__73),__72;int(1..)]),
Clause([Not(__73),__69;int(1..)]),
Clause([__73,Not(__72),Not(__69);int(1..)]),
Clause([Not(__71),__74;int(1..)]),
Clause([Not(__73),__74;int(1..)]),
Clause([Not(__74),__71,__73;int(1..)]),
Clause([Not(__75),Not(a#int_to_atom_00);int(1..)]),
Clause([__75,a#int_to_atom_00;int(1..)]),
Clause([Not(a#int_to_atom_01),Not(__76);int(1..)]),
Clause([a#int_to_atom_01,__76;int(1..)]),
Clause([Not(__77),__76;int(1..)]),
Clause([__77,Not(__76);int(1..)]),
Clause([Not(a#int_to_atom_01),__78;int(1..)]),
Clause([a#int_to_atom_01,Not(__78);int(1..)]),
Clause([Not(__79),__78;int(1..)]),
Clause([Not(__79),__75;int(1..)]),
Clause([__79,Not(__78),Not(__75);int(1..)]),
Clause([Not(__77),__80;int(1..)]),
Clause([Not(__79),__80;int(1..)]),
Clause([Not(__80),__77,__79;int(1..)]),
Clause([Not(a#int_to_atom_02),Not(__81);int(1..)]),
Clause([a#int_to_atom_02,__81;int(1..)]),
Clause([Not(__82),__81;int(1..)]),
Clause([__82,Not(__81);int(1..)]),
Clause([Not(a#int_to_atom_02),__83;int(1..)]),
Clause([a#int_to_atom_02,Not(__83);int(1..)]),
Clause([Not(__84),__83;int(1..)]),
Clause([Not(__84),__80;int(1..)]),
Clause([__84,Not(__83),Not(__80);int(1..)]),
Clause([Not(__82),__85;int(1..)]),
Clause([Not(__84),__85;int(1..)]),
Clause([Not(__85),__82,__84;int(1..)]),
Clause([Not(a#int_to_atom_03),Not(__86);int(1..)]),
Clause([a#int_to_atom_03,__86;int(1..)]),
Clause([Not(__87),__86;int(1..)]),
Clause([__87,Not(__86);int(1..)]),
Clause([Not(a#int_to_atom_03),__88;int(1..)]),
Clause([a#int_to_atom_03,Not(__88);int(1..)]),
Clause([Not(__89),__88;int(1..)]),
Clause([Not(__89),__85;int(1..)]),
Clause([__89,Not(__88),Not(__85);int(1..)]),
Clause([Not(__87),__90;int(1..)]),
Clause([Not(__89),__90;int(1..)]),
Clause([Not(__90),__87,__89;int(1..)]),
Clause([Not(a#int_to_atom_04),Not(__91);int(1..)]),
Clause([a#int_to_atom_04,__91;int(1..)]),
Clause([Not(__92),__91;int(1..)]),
Clause([__92,Not(__91);int(1..)]),
Clause([Not(a#int_to_atom_04),__93;int(1..)]),
Clause([a#int_to_atom_04,Not(__93);int(1..)]),
Clause([Not(__94),__93;int(1..)]),
Clause([Not(__94),__90;int(1..)]),
Clause([__94,Not(__93),Not(__90);int(1..)]),
Clause([Not(__92),__95;int(1..)]),
Clause([Not(__94),__95;int(1..)]),
Clause([Not(__95),__92,__94;int(1..)]),
Clause([Not(a#int_to_atom_05),Not(__96);int(1..)]),
Clause([a#int_to_atom_05,__96;int(1..)]),
Clause([Not(__97);int(1..)]),
Clause([Not(__97),__96;int(1..)]),
Clause([a#int_to_atom_05,__98;int(1..)]),
Clause([Not(a#int_to_atom_05),Not(__98);int(1..)]),
Clause([Not(__99),__98;int(1..)]),
Clause([Not(__99),__95;int(1..)]),
Clause([__99,Not(__98),Not(__95);int(1..)]),
Clause([Not(__97),__100;int(1..)]),
Clause([Not(__99),__100;int(1..)]),
Clause([Not(__100),__97,__99;int(1..)]),
Clause([Not(a#int_to_atom_06),Not(__101);int(1..)]),
Clause([a#int_to_atom_06,__101;int(1..)]),
Clause([Not(__102);int(1..)]),
Clause([Not(__102),__101;int(1..)]),
Clause([a#int_to_atom_06,__103;int(1..)]),
Clause([Not(a#int_to_atom_06),Not(__103);int(1..)]),
Clause([Not(__104),__103;int(1..)]),
Clause([Not(__104),__100;int(1..)]),
Clause([__104,Not(__103),Not(__100);int(1..)]),
Clause([Not(__102),__105;int(1..)]),
Clause([Not(__104),__105;int(1..)]),
Clause([Not(__105),__102,__104;int(1..)]),
Clause([__106;int(1..)]),
Clause([Not(__107),__106;int(1..)]),
Clause([Not(__107),a#int_to_atom_07;int(1..)]),
Clause([__107,Not(__106),Not(a#int_to_atom_07);int(1..)]),
Clause([a#int_to_atom_07,__108;int(1..)]),
Clause([Not(a#int_to_atom_07),Not(__108);int(1..)]),
Clause([Not(__109),__108;int(1..)]),
Clause([Not(__109),__105;int(1..)]),
Clause([__109,Not(__108),Not(__105);int(1..)]),
Clause([Not(__107),__110;int(1..)]),
Clause([Not(__109),__110;int(1..)]),
Clause([Not(__110),__107,__109;int(1..)])

