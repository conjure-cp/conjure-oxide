{
  "cnf_clauses": [],
  "constraints": {
    "Root": [
      {
        "clean": false,
        "etype": null
      },
      [
        {
          "And": [
            {
              "clean": false,
              "etype": null
            },
            {
              "AbstractLiteral": [
                {
                  "clean": false,
                  "etype": null
                },
                {
                  "Matrix": [
                    [
                      {
                        "Or": [
                          {
                            "clean": false,
                            "etype": null
                          },
                          {
                            "AbstractLiteral": [
                              {
                                "clean": false,
                                "etype": null
                              },
                              {
                                "Matrix": [
                                  [
                                    {
                                      "Atomic": [
                                        {
                                          "clean": false,
                                          "etype": null
                                        },
                                        {
<<<<<<< HEAD
                                          "Reference": 2
=======
                                          "Reference": 0
>>>>>>> 4c3d8ac40d (Adding boolean rules and fixing boolean tests)
                                        }
                                      ]
                                    },
                                    {
                                      "Atomic": [
                                        {
                                          "clean": false,
                                          "etype": null
                                        },
                                        {
<<<<<<< HEAD
                                          "Reference": 3
=======
                                          "Reference": 1
>>>>>>> 4c3d8ac40d (Adding boolean rules and fixing boolean tests)
                                        }
                                      ]
                                    }
                                  ],
                                  {
                                    "Int": [
                                      {
<<<<<<< HEAD
                                        "UnboundedR": 1
=======
                                        "Bounded": [
                                          1,
                                          2
                                        ]
>>>>>>> 4c3d8ac40d (Adding boolean rules and fixing boolean tests)
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Or": [
                          {
                            "clean": false,
                            "etype": null
                          },
                          {
                            "AbstractLiteral": [
                              {
                                "clean": false,
                                "etype": null
                              },
                              {
                                "Matrix": [
                                  [
                                    {
                                      "Not": [
                                        {
                                          "clean": false,
                                          "etype": null
                                        },
                                        {
                                          "Atomic": [
                                            {
                                              "clean": false,
                                              "etype": null
                                            },
                                            {
<<<<<<< HEAD
                                              "Reference": 2
=======
                                              "Reference": 0
>>>>>>> 4c3d8ac40d (Adding boolean rules and fixing boolean tests)
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Atomic": [
                                        {
                                          "clean": false,
                                          "etype": null
                                        },
                                        {
<<<<<<< HEAD
                                          "Reference": 3
=======
                                          "Reference": 1
>>>>>>> 4c3d8ac40d (Adding boolean rules and fixing boolean tests)
                                        }
                                      ]
                                    }
                                  ],
                                  {
                                    "Int": [
                                      {
<<<<<<< HEAD
                                        "UnboundedR": 1
=======
                                        "Bounded": [
                                          1,
                                          2
                                        ]
>>>>>>> 4c3d8ac40d (Adding boolean rules and fixing boolean tests)
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    {
                      "Int": [
                        {
<<<<<<< HEAD
                          "UnboundedR": 1
=======
                          "Bounded": [
                            1,
                            2
                          ]
>>>>>>> 4c3d8ac40d (Adding boolean rules and fixing boolean tests)
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    ]
  },
  "dominance": null,
  "search_order": null,
  "symbols": {
<<<<<<< HEAD
    "id": 1,
=======
    "id": 0,
>>>>>>> 4c3d8ac40d (Adding boolean rules and fixing boolean tests)
    "next_machine_name": 0,
    "parent": null,
    "table": [
      [
        {
          "User": "a"
        },
        {
<<<<<<< HEAD
          "id": 2,
=======
          "id": 0,
>>>>>>> 4c3d8ac40d (Adding boolean rules and fixing boolean tests)
          "kind": {
            "DecisionVariable": {
              "category": "Decision",
              "domain": "Bool"
            }
          },
          "name": {
            "User": "a"
          }
        }
      ],
      [
        {
          "User": "b"
        },
        {
<<<<<<< HEAD
          "id": 3,
=======
          "id": 1,
>>>>>>> 4c3d8ac40d (Adding boolean rules and fixing boolean tests)
          "kind": {
            "DecisionVariable": {
              "category": "Decision",
              "domain": "Bool"
            }
          },
          "name": {
            "User": "b"
          }
        }
      ]
    ]
  }
}